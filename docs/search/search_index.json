{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Latest stable release: Latest development version: Photobooth v4 A Photobooth web interface for Linux and Windows. Photobooth was initially developped by Andre Rinas to use on a Raspberry Pi, you can find his source here . In 2019 Andreas Blaesius picked up the work and continued to work on the source. With the help of the community Photobooth grew to a powerfull Photobooth software with a lot of features and possibilities. Contribute to this Webpage Clone the PhotoboothProject.github.io project from github. Run the following commands from your Terminal: git clone https://github.com/PhotoboothProject/PhotoboothProject.github.io.git cd PhotoboothProject.github.io Make your changes, upload them to your fork and create a pull request . Changelog View all version changes here . News 09. January 2024 It's been a while, but here's some news outside of our Community on Telegram. Actually the source code of Photobooth is rewritten in almost all sections of Photobooth and there's still some work left before Photobooth v5 can be released. Photobooth v4.4.0 was released! This release is meant as bugfix-release to fix some known bugs, retain Windows compatibility and to keep compatibility with the changed install steps on latest development version. A few new features have made it inside this release, but more to come with the upcoming Photobooth v5! And don't worry! The current development version runs nicely and stable for most user! We are always happy about feedback and helping hands! Like always: The full Changelog can be found here . Your Photobooth-Team 24 December 2022 Hey everyone! Photobooth again was improved a lot this year and a lot of user wishes have been added to the project. Thanks to everyone for being part of this community, your feedback and your help to make Photobooth such a great OpenSource Project! We hope you have a safe and relaxing christmas time! Your Photobooth-Team 6 December 2022 Photobooth v4.3.1 released! Build dependencies have been updated and the process of taking an image was improved to optimize the timings between the single actions. The visible countdown now is independent of the time we need to take an image, the defined offset will be respected now. Also we now don't wait for the cheese message to end, the picture will be taken without waiting for it. A small bug was fixed, where the shutter animation was started twice if an cheese image is used. Like always: The full Changelog can be found here . Enjoy Photobooth v4.3.1! 28 November 2022 Photobooth v4.3.0 released! Some minor bugs have been fixed, build dependencies have been updated, new Features have been added. Like always: The full Changelog can be found here . Enjoy Photobooth v4.3.0! 16 October 2022 Photobooth v4.2.0 released today! Some minor bugs have been fixed, PHPMailer and build dependencies have been updated. The full Changelog can be found here . Enjoy Photobooth v4.2.0! 30 September 2022 We're proud to release Photobooth v4.1.0! Some bugs have been fixed, some new features have made it's way into the new version and some code have been cleaned. Logging is added to save and reset actions via Adminpanel for easier debugging. The full Changelog can be found here . Enjoy Photobooth v4.1.0! 10 September 2022 We're proud to release Photobooth v4.0.0 with the code switch to PhotoboothProject which contains a lot of Bugfixes and user-wishes could be integrated. Photobooth v4.0.0 comes in a new modern squared look! Overall the code got optimized and cleaned up. There's also a lot of new options added. Photobooth is now again compatible with Windows, also PHP8 won't cause trouble. The full Changelog can be found here . If you find a bug you're welcome to report it on the GitHub issue page . New Images with preinstalled Photobooth will be available next days. Update instructions have been updated, you can now easily update your existing git installation of Photobooth using the photobooth installer! Enjoy Photobooth v4.0.0! 17 August 2022 Photobooth source moved! We\u2019re proud to announce that our Photobooth Source moved to https://github.com/PhotoboothProject for the upcoming Photobooth release! Currently we\u2019re preparing this webpage for you with all needed information. Also update/upgrade information will be available once the new release is out. Stay tuned!","title":"Home"},{"location":"#photobooth-v4","text":"A Photobooth web interface for Linux and Windows. Photobooth was initially developped by Andre Rinas to use on a Raspberry Pi, you can find his source here . In 2019 Andreas Blaesius picked up the work and continued to work on the source. With the help of the community Photobooth grew to a powerfull Photobooth software with a lot of features and possibilities.","title":"Photobooth v4"},{"location":"#contribute-to-this-webpage","text":"Clone the PhotoboothProject.github.io project from github. Run the following commands from your Terminal: git clone https://github.com/PhotoboothProject/PhotoboothProject.github.io.git cd PhotoboothProject.github.io Make your changes, upload them to your fork and create a pull request .","title":"Contribute to this Webpage"},{"location":"#changelog","text":"View all version changes here .","title":"Changelog"},{"location":"#news","text":"","title":"News"},{"location":"#09-january-2024","text":"It's been a while, but here's some news outside of our Community on Telegram. Actually the source code of Photobooth is rewritten in almost all sections of Photobooth and there's still some work left before Photobooth v5 can be released. Photobooth v4.4.0 was released! This release is meant as bugfix-release to fix some known bugs, retain Windows compatibility and to keep compatibility with the changed install steps on latest development version. A few new features have made it inside this release, but more to come with the upcoming Photobooth v5! And don't worry! The current development version runs nicely and stable for most user! We are always happy about feedback and helping hands! Like always: The full Changelog can be found here . Your Photobooth-Team","title":"09. January 2024"},{"location":"#24-december-2022","text":"Hey everyone! Photobooth again was improved a lot this year and a lot of user wishes have been added to the project. Thanks to everyone for being part of this community, your feedback and your help to make Photobooth such a great OpenSource Project! We hope you have a safe and relaxing christmas time! Your Photobooth-Team","title":"24 December 2022"},{"location":"#6-december-2022","text":"Photobooth v4.3.1 released! Build dependencies have been updated and the process of taking an image was improved to optimize the timings between the single actions. The visible countdown now is independent of the time we need to take an image, the defined offset will be respected now. Also we now don't wait for the cheese message to end, the picture will be taken without waiting for it. A small bug was fixed, where the shutter animation was started twice if an cheese image is used. Like always: The full Changelog can be found here . Enjoy Photobooth v4.3.1!","title":"6 December 2022"},{"location":"#28-november-2022","text":"Photobooth v4.3.0 released! Some minor bugs have been fixed, build dependencies have been updated, new Features have been added. Like always: The full Changelog can be found here . Enjoy Photobooth v4.3.0!","title":"28 November 2022"},{"location":"#16-october-2022","text":"Photobooth v4.2.0 released today! Some minor bugs have been fixed, PHPMailer and build dependencies have been updated. The full Changelog can be found here . Enjoy Photobooth v4.2.0!","title":"16 October 2022"},{"location":"#30-september-2022","text":"We're proud to release Photobooth v4.1.0! Some bugs have been fixed, some new features have made it's way into the new version and some code have been cleaned. Logging is added to save and reset actions via Adminpanel for easier debugging. The full Changelog can be found here . Enjoy Photobooth v4.1.0!","title":"30 September 2022"},{"location":"#10-september-2022","text":"We're proud to release Photobooth v4.0.0 with the code switch to PhotoboothProject which contains a lot of Bugfixes and user-wishes could be integrated. Photobooth v4.0.0 comes in a new modern squared look! Overall the code got optimized and cleaned up. There's also a lot of new options added. Photobooth is now again compatible with Windows, also PHP8 won't cause trouble. The full Changelog can be found here . If you find a bug you're welcome to report it on the GitHub issue page . New Images with preinstalled Photobooth will be available next days. Update instructions have been updated, you can now easily update your existing git installation of Photobooth using the photobooth installer! Enjoy Photobooth v4.0.0!","title":"10 September 2022"},{"location":"#17-august-2022","text":"Photobooth source moved! We\u2019re proud to announce that our Photobooth Source moved to https://github.com/PhotoboothProject for the upcoming Photobooth release! Currently we\u2019re preparing this webpage for you with all needed information. Also update/upgrade information will be available once the new release is out. Stay tuned!","title":"17 August 2022"},{"location":"changelog/","text":"Changelog Upcoming Photobooth release To use a preview of the upcoming Version you need to install the Install last development version using the install-photobooth.sh installer (now also works on all devices running debian / a debian based OS). Last development version is installed by default! You can check the commit history for changes made since your installation here . An updated FAQ can always be found at localhost/faq . Please read the license notice here . 4.4.0 (09.01.2024) Breaking changes requires Node.js v18.17.0 or newer requires npm 9.6.7 or newer General api: get rid of deleteTmpPhoto cameracontrol.py: don't fail capturing images using Sony Cameras result screen: reload after all files have been deleted core: simplify print message handling core: define tempImageUrl if and where needed core: improve logging api (takePic): only log return value issues on loglevel > 1 core/gallery: central QR modal handling config: move preview bsm to commands section preview: remove arrow functions config(cleanup): remove unused success messages api(previewCamera): use play or stop string instead true and false preview: combine api.startWebcam and api.stopPreviewVideo functions preview: adjust logging preview: fix preview TEST mode preview: fix checking for frame config test(preview): fix preview with cmd core(print): remove unneeded delay optimized keyboard trigger Remove fake buttons to trigger actions, use global functions instead core: simplify check to.clear timeout core: blur picture / collage buttons as needed core: we already blur printBtn after print livechroma: add notification via modal message on trigger via keyCode livechroma: adjust keyCode trigger handling core: adjust keyCode trigger handling logging: adjust some console log messages core: remove unneded focusSet on QR btn click config: remove collage only config, allow to enable/disable picture instead configsetup: define remotebuzzer server port first lib(applyText): remove unneeded if-else statements lib(applyText): add error handling, return unmodified resource on error lib(applyText): throw Exception if text can't be applied lib(applyFrame): add error handling, return unmodified resource on error lib(applyFrame): throw Exceptions if needed lib(polaroid): return unmodified resource on error lib(polaroid): throw exceptions if needed lib(resize): add try-catch-block to rotateResizeImage function lib(resize): throw exceptions on rotateResizeImage if needed lib(resize): add try-catch-block to resizeImage function lib(resize): throw exceptions where needed on resizeImage lib(resize): validate dimensions lib(resize): add try-catch-block to resizePngImage function lib(resize): validate dimensions on resizePngImage function lib(resize): throw exceptions where needed on resizePngImage function lib(resize): add try-catch-block to resizeCropImage function lib(resize): validate dimensions on resizeCropImage function lib(resize): try to clear cache on error lib(resize): adjust check if resize was possible lib (collage): only test file if needed js(tools): add print image function to reuse gulp: updated with ECMAScript Modules (ESM) syntax task: bind docker do port 80 and 443 task: bump node version to v18 LTS and drop yarn task: only limit node and npm version by minimum versions package: switch to marked to formatt faq remotebuzzer server: log earlier remotebuzzer-server: update sanity check, only check if needed remotebuzzer-server: allow GPIO to be any number Bugfix fix: start shutter animation independent of cheese image cameracontrol.py: don't fail capturing images using Sony Cameras core: fix Test value for CameraDisplayMode test preview: fix Test value for CameraDisplayMode UI UI: use highlight color for hover gallery: respect button and font color Prettier display delete status ui: adjust modal transparency and font-weight core: use own div for general different modal messages delete: adjust delete notification messages style: use secondary color for backgrounds where needed task: fix colors while processing images ui(gallery): only show 3 images in a row on mobile phones core: fix delete on collage with interruption Check if images array is empty Standalone Gallerie: add missing js file core(fix): init PhotoSwipe after remoteBuzzer api (takePic): only abort if file was not created preview: respect offset to hide preview preview: respect offset to hide preview from URL slideshow: clear timeout to prevent from running timeout multiple times remotebuzzer server: Determine whether or not GPIO access is possible remotebuzzer server: fix checking for gpio config welcome: use index.php instead of detected URL api (admin): don't reset log on preview config error core(preview): remove preview mode check if image is captured from preview core: check for preview stream instead use of demo images core(preview): stop preview on countdown slightly earlier remotebuzzer server: fix for Node.js v16 submodules: ignore dirty state core: hide result screen on reset remotebuzzer client: fix log Revert \"stabilized rotary encoder handling\" remotebuzzer client: handle QR in gallery remotebuzzer client: close qr modals directly if needed added explicit int conversion gallery: Collage only config was removed sync-to-drive: fix for Node.js v16 Sync more Filetypes lib(config): adjust print command for Windows api (previewCamera): $config is not available, remove logging for now remotebuzzer: respect config also on get request trigger remotebuzzer: don't trigger a different action if disabled remotebuzzer client: check if taking pictures is enabled trigger.php: add missing options, respect hardware button config lib (db): fix for PHP 8 api(admin): check if fonts, frames and collage placeholder are valid core: clear/reset timeout on keyup lib (image): fix applying text to images, fail if text CAN NOT be applied lib(image): don't keep aspect ratio while resizing PNG bugfix: supprress error messages on getimagesize function api(admin): image filter depends on images in tmp folder fix hiding/showing home button independent of button bar on result screen index (frame): respect preview frame config core: don't add images to gallery if gallery is disabled core: print & qr code only if enabled bugfix: update dockerfile add missing python3 lib(resize): fix rotating images on PHP8 Feature config: make time adjustable a notification is visible preview: allow to delay the visibility of the preview from URL preview: allow execution of start/stop cmd without validation config: run preview CMD's without validation by default preview: run preview cmd & stop cmd independent of preview mode remotebuzzer: make print and rotary functions available via get request remotebuzzer: Reboot Button remotebuzzer: make shutdown and reboot available via get request task: enable lazy loading for gallery images FAQ FAQ: add note to fix broken v4l2loopback module FAQ: add notes about issues while taking a picture faq: a username is needed while running enable-usb-sync.sh Updated FAQ - how to upload pictures to remote server FAQ: preview bsm was moved FAQ: no need for success message FAQ: add instructions to update gphoto2 & libgphoto FAQ: adjust PiCamera information FAQ: Add possible preview error because of secure boot FAQ: adjust GPIO setup for PiOS Bookworm FAQ: adjust GPIO information for Raspberry Pi 5; adjust for Pi OS versions Install install: adjust PolKit rule naming install-photobooth: allow to add PolKit rule on all linux distros install-photobooth: PolKit rule doesn't depend on update install-photobooth: make system update optional on photobooth update install-photobooth: fix permissions on yarn folder install-photobooth: easy access to private folder install-photobooth: always ignore filemode changes on git install-photobooth: allow Node.js minor version to match or be newer install-photobooth: be flexible on Node.js version install: yarn: use of apt-key is deprecated install-photobooth: use PHP 8.2 by default install-photobooth: PHP8 sources needed earlier install-photobooth: add https://packages.sury.org/php/ only if distro is supported install: also run apt autoremove while removing nodejs install: switch to latest development version of Gphoto2 install: fix PHP8 install in Ubuntu 20 install-photobooth: improve/fix PHP8 install on Ubuntu install-photobooth: fix missing sources.lst on Ubuntu 22.04 install-photobooth: install npm on Raspberry Pi bugfix: correct installer install: add ppa for PHP on all Debian based distributions install: run commands as www-data user install: install needed packages for gphoto2 webcam service only if needed install: use wget to check internet connection install: update nodejs install install: suppress most progress infos, only display essential output install: fix permissions for www-data user on install install: check for npm on all devices install: remove npm from packages, uninstall libnode72 if installed install: update npm to latest install: fix Download of node-install (Raspberry Pi) install: also check NODEJS_MINOR version install: always install nodejs from official node source install: only fail on Node.js below v18, recheck version if update is skipped install: proof npm version, abort if needed install: fix checking npm version install: check for Firefox browser first install: also check for firefox-esr install-photobooth: remove autostart and hide mouse installer: remove leftover from removed questions/features install-photobooth: don't compile gphoto2 and libgphoto2 install: check if /boot/config.txt is a symlink install-photobooth: adjust Update for www-data user install-photobooth: install npm 9.6.7 if needed Full Changelog : https://github.com/PhotoboothProject/photobooth/compare/v4.3.1...v4.4.0 4.3.1 (06.12.2022) Bugfixes core: improve timings while taking an image by @andi34 in #95 Adjust the code to start taking an image before the Cheeeeeese message disappears (the Cheese-Message can be used to \"hide\" the delay we have until the camera triggers). Also adjust the code to respect the defined offset while taking an image. The take picture action now runs independent of the visible running countdown. Stop the shutter animation after 500ms which should look more fluid and also make sure we can't forget to stop it. If cheese is enabled cheese time will be used instead. Don't run shutter animation twice if an cheese image is used and cheese enabled. General build(deps): bump sass from 1.55.0 to 1.56.1 by @dependabot in #93 build(deps-dev): bump @babel/preset-env from 7.19.4 to 7.20.2 by @dependabot in #94 build(deps-dev): bump eslint from 8.26.0 to 8.28.0 by @dependabot in #92 build(deps): bump socket.io from 4.5.3 to 4.5.4 by @dependabot in #90 build(deps-dev): bump @prettier/plugin-php from 0.19.1 to 0.19.2 by @dependabot in #91 Full Changelog https://github.com/PhotoboothProject/photobooth/compare/v4.3.0...v4.3.1 4.3.0 (29.11.2022) Bugfixes FAQ: fix small typo by @modularTaco in #68 fix(documentation): remove reference to dev mode by @modularTaco in #71 fix(gallery): respect clickToCloseNonZoomable PhotoSwipe config by @andi34 in #72 fix(gallery): fix click on close button while an image is opened by @andi34 in #73 install-photobooth: also check for \"chromium\" package by @andi34 in #86 New Options New options for the QR Code on print by @fmiccolis in #65 Feature: make icons adjustable by @andi34 in #74 Show frame over the preview by @fmiccolis in #45 feature: add simple trigger ( http://localhost/trigger.php ) for remotebuzzer server by @andi34 in #66 General allow collage background images to be in any filetype gd understands by @up-87 in #63 core(navbar): restructure navbar function by @andi34 in #64 Restructure preview handling, add testpage for preview settings ( http://localhost/test/preview.php ) by @andi34 in #61 make collage handling more configurable, fix collages and the retry mechanism by @up-87 in #69 cleanup: remove experimental updater & dependencies checker by @andi34 in #84 cleanup: api, also improve random image naming by @andi34 in #87 crowdin: translation import by @andi34 in #88 New Contributors @fmiccolis made their first contribution in #65 @modularTaco made their first contribution in #68 Full Changelog : https://github.com/PhotoboothProject/photobooth/compare/v4.2.0...v4.3.0 4.2.0 (16.10.2022) Bugfixes fix(admin): show 3rd line text of text on * in advanced view by @andi34 in #52 (fix) Stop shutter on fail, respect retry settings on fail by @andi34 in #54 api(takePic): fix flipping image taken from device cam preview, fix Issue 55 by @andi34 in #57 core(api.initializeMedia): retry every second by @andi34 in #56 tools(api.getRequest): don't use JSON.parse while getting a response install-photobooth: iputils-ping is needed to check Internet connection install-photobooth: fix placing Install log inside Photobooth folder General build(deps): bump sass from 1.54.8 to 1.55.0 by @dependabot in #47 build(deps-dev): bump eslint from 8.23.0 to 8.24.0 by @dependabot in #48 build(deps-dev): bump @babel/preset-env from 7.18.10 to 7.19.3 by @dependabot in #49 build(deps-dev): bump @prettier/plugin-php from 0.18.9 to 0.19.1 by @dependabot in #50 build(deps-dev): bump @babel/core from 7.18.13 to 7.19.3 by @dependabot in #51 crowdin: translation import by @andi34 in #58 vendor(PHPMailer): update to v6.6.5 by @andi34 in #59 core(preview): remove unneeded checks on preview handling Full Changelog: https://github.com/PhotoboothProject/photobooth/compare/v4.1.0...v4.2.0 4.1.0 (30.09.2022) Bugfixes fix(UI): don't run shutter animation twice by @andi34 in #32 fix(ui): add version tag to own stylesheets by @andi34 in #33 fix(ui): add version tag to own javascripts by @andi34 in #36 fix(admin): don't remove images from archives and private folder by @andi34 in #42 fix(admin): respect changed config before executing an reset by @andi34 in #43 New Options feature(collage): add background to collage for easier template creation. closes Issue #28 by @up-87 in #31 feature(debugpanel): add access to installation log by @andi34 in #37 feature(ui): allow to define language resource path, also fix path for javascript folders on subfolder installation by @andi34 in #38 feature(preview): allow to rotate all preview options by @andi34 in #44 rework(preview): remove gphoto preview option by @andi34 in #46 General lib(configsetup): make more settings available on basic view by @andi34 in #35 api(debug): log information from admin.php on config changes and reset by @andi34 in #41 crowdin: translation import by @andi34 in #39 Full Changelog: https://github.com/PhotoboothProject/photobooth/compare/v4.0.0...v4.1.0 4.0.0 (10.09.2022) Source code moved to https://github.com/PhotoboothProject/photobooth , old Releases etc. will still be available at https://github.com/andi34/photobooth Security - Security advice added to the README and welcome page #376 - PHPMailer: update to v6.6.4 Breaking changes QR code is now printed onto the image instead on the right side to not break the image ratio, new options have been added for best user experience (see New Options for details) Remove Greek, Polish and Spanish from Language options because they aren't maintained ( further information ) Collage: layout's changed slightly (positions and image size now get calculated depending on defined dpi). Existing frames might not fit anymore and need to be updated. vendor: remove rpihotspot from repo (it's still available on github, but we don't need it as a direct dependencie for Photobooth) Bugfixes - chromium: fix white screen of death on first start in kiosk mode (Raspberry Pi only) - livechroma: fix text formatting on error/retry - api(takePic): - fix error message, take picture command can be anything - check if picture exists: If a picture exists already, rename it before using the same filename for a new picture. This might fix an issue on collage where a retaken image isn't saved / used and should also prevent overriding an existing image by accident. - fix print with QR Code - Video preview #448 , #476 : - Fix gphoto preview on retry / next collage image. - fix taking pictures from gphoto preview #24 ( Note: Gphoto won't be used, it's more like taking a screenshot of the Preview. Since Gphoto won't be used there's no flash light of the camera!) - hide video preview in background of interrupted collage - fixed possible DSLR preview stop time bug - fixed bug: preview['flip'] was saved but not reloaded. So if the correct setting should be retained it needed to be set every time. - fixed bug: in the background of the continuos collage image preview the gphoto2 preview (without bsm) continued to run visibly - Improve preview handling #6 - core: - respect retry timeout: The timeout should not be a new countdown, it should be a timeout as it's name says. Retry notification will now be visible for defined time. Countdown for picture/next collage image is not touched and will be used as defined. - fix get request at countdown - handle errors on get requests #15 - welcome.php: use detected URL to start Photobooth - FAQ: fix command to execute setup-network.sh for hotspot - frame/font: again allow to be located outside of photobooth source - config(print): add fallback to defaults if print font/frame is not defined - collage: - Continue collage with keypress #408 - prevent caching of collage images with unique image name #425 - use collage countdown timer on first collage image #22 - installation script: - fix permissions on www-data users cachefolder and .yarnrc if exists - fix and improve use of lighttpd and nginx #477 - install curl (and raspberrypi-kernel-headers for PiOS) early enough to be used - stabilized rotary encoder handling #449 - email: - fix wrong button text if \"Store email addresses in file\" is enabled #462 (fixes Issue #461 ) - stop spinning loader icon once the email has been sent (fixes Issue #453 ) - language: - fix mixed up german translation for pre- and post-photo command (fixes Issue #451 ) - PHP8: - fix Deprecated Passing null to parameter error - fix Implicit conversion from float (number) to int loses precision New Options - Add traslate button to Adminpanel, opens Photobooth project on Crowdin - UI: - Shutter animation, enabled by default #368 - add config to define highlight color used on round buttons (modern style) - make UI and button style independent #442 - add modern squared design by @Moarqi #440 - QR #371 : - Error correction level adjustable - Gallery: - Add config option to enable/disable the figure caption in the gallery view #398 - Add config option to enable/disable action button footer (photo, collage) - Collage: - added simple 2+1 style that is to be used with a frame that fills the open space #424 - Added an option to set a placeholder (eg custom image / graphic) for one image of the collage #424 - simple customizable collage config with a json file #26 - Preview: - config: allow to adjust the time to stop the gphoto preview - choose to flip the preview along the X or Y axis #465 , fixup #476 - specify how the preview should be resized to fit: This setting uses the css object-fit property which is used to specify how the preview should be resized to fit. The following options are available: - fill - The image is resized to fill the given dimension. If necessary, the image will be stretched or squished to fit. - contain - The image keeps its aspect ratio, but is resized to fit within the given dimension. - cover - The image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit. - none - The image is not resized. - scale-down - the image is scaled down to the smallest version of none or contain. - allow to set background-size to cover on URL preview - Print: - Always print the QR onto the image instead in the right side (see Breaking Changes ) - QR size adjustable - QR offset adjustable - QR position adjustable - allow to disable rotation before print - Countdown: - allow using a customizable image instead of cheese message if shutter animation is used #4 - Post picture command: - Passes the Filename (doesn't include the full path!) to the post-cmd . This can be used e.g. to manipulate the Image (e.g. with Imagemagick) after the Picture was taken. General - restore windows compatibility #23 - Import latest Crowdin translations - Cleanup core.js #369 : - remove unneeded if checks - improve readability - Let's start the picture process from beginning on retry. Also start all previews like defined at countdown. - Centralized preview start/stop functions, this helps getting a better overview of the code. - log error messages to console from api.errorPic - optimize error messages - time configurations moved to constants - move more ID selector to constants - Collage: - Collage code cleanup (can most likely still be improved by using php classes but this should be okay) - rename some collage styles (2+2 instead of 2x2 as x now always indicates pictures are reused - old name still works) #424 - Collage Images will be dynamically scaled based on a given resolution (eg 300dpi etc) #424 - configsetup: - add <input type=\"number\"> and use where possible to avoid issues on input - install script: - install-raspbian: rename to install-photobooth.sh, photobooth works fine on debian and other debian based distributions - pass options to the script (run sudo bash install-photobooth.sh -h to see all options) - ask to install Gutenprint drivers - make sure a new question is recognized - always mention the setup choice - adjust warning messages - fix git installation message - install latest development version via git by default (latest stable3 version can be passed to the installer via option) - prevent double entry in autostart while re-running the installer - allow to install gphoto2 Webcam Service - create installation log inside /tmp/photobooth - always install latest stable gphoto2 - adjust package array handling - Add new parameter to setup the php version #477 - Webserver #477 : - Apply PHP Version for nginx and lighttpd - Fix (improve) nginx / lighttpd service startup - Fix client_max_body_size problems on nginx - detect installed webbrowser and create autostart file depending on it - The following browser can be detected: chromium-browser , google-chrome , google-chrome-stable , google-chrome-beta , firefox - skip Desktop related config if lxde is not installed - avoid Chrome/Chromium asking for password to unlock keyring - run apt upgrade instead apt dist-upgrade: Users might have come to rely on packages that were installed implicitly because of other (explicitly installed) packages' dependency on them. Thus the packaging system cannot be aware of a user/administrator desire to retain certain functionality that might otherwise be removed via dist-upgrade. - fix permission on hidden files and folder - seperate general and pi specific permissions - ignore filemode changes on git install - Check for internet connection (we can't install without an internet connection) - allow to run an update on git installation: - to update to latest development version please run sudo bash install-photobooth.sh --update If local changes are detected, the installer can try to apply those changes after the update was completed. If the changes can not be applied after update, your local changes will be kept inside a backup branch and can be applied manually again (you might need to resolve conflicts because of source changes). If local changes are detected, the installer will abort on silent install. You can re-run the update-process without the -s flag and confirm backing up your local changes for update. - mention to clear Browser Cache on Update - enable-usb-sync.sh - Disable reboot for silent mode (fixes Issue #450 ) - support other users (fixes Issue #423 ) - gphoto: - Added another way to control dslr cameras with cameracontrol.py #386 , #387 , #393 - Add a docker setup for local testing and development #397 - Remote buzzer: - Add simple GET endpoints to trigger photos / collages (to support WiFi hardware buttons) #400 - Rework option to use remotebuzzer server without GPIO and remove hidden faulty HID and softbutton implementation - UI: - sass(button): convert button size from px to em - sass(modern button): adjust font awesome icon size - Dark UI Style by @Moarqi - replace default background image - add clouds background images - Email: - hide checkbox to add email to database, adjust information text - debloat: - remove outdated update-booth.sh - Video preview: - minor change: don't display \"please wait\" text for interrupted collage when the selection is shown on screen #476 - Improve preview handling #6 - sass/css: - video preview: - simplify rules - adjust position and video handling - scripts(pack-build): - remove unavailable files - add missing node_modules dependencies - admin: - hide experimental updater, instead use the install-photobooth.sh to update - pass filename to post cmd #7 - Overhaul Photobooth logging #14 - more code-cleanup in various places 3.3.0 (16.01.2022) Breaking changes - If you are using an older version of Rasperry Pi OS or Debian / Debian based distribution make sure Node.js v12.22.x is installed! Check your Node.js version while running node -v from your terminal. - (config) Switch from milliseconds to seconds the image is visible on result screen Please adjust your configuration if you've changed the default setting on previous version. If you've not changed the default setting there's nothing to do. - vendor: phpqrcode as submodule - config: Webserver IP should not contain subfolder/subpages, IP should be detected if not defined. QR now needs it's own URL defined (see new Options). Bugfixes - standalone slideshow: fix auto refresh - hide inner navigation panel if thrill is triggered from result page - remotebuzzer: - fix hang of remotebuzzer server on error - bugfix for hardware button to trigger collage mode #351 (fixes Issue #300 ) - fix socket.io Server on Photobooth subfolder installation #364 (fixes Issue #360 ) - picture and mail database always need a name, add fallback to default if empty - configsetup: add event option to basic view (fixes Issue #320 ) - build: fix build failing on macOS (fixes Issue #318 ) - Fix Typo in admin.php while using a custom style #322 - Fix preview from gphoto as background if BSM is disabled (thanks to Uwe Pieper), note: This is not recommended for a Raspberry Pi as it requires faster hardware! New Options - remotebuzzer: - Allow to configure GPIO debouce delay through admin panel #294 - ui: add option to show / hide button bar on result screen - general: add config to use sample pictures instead taking a picture, dev-mode now only enables advanced logging for debugging purpose - add button for reboot and shutdown on linux - collage: - continuous collage: allow to disable single images being visible - allow to define collage background color #324 - add option to add all images from collage to gallery #307 (fixes Issue #269 ) - add cutting lines on 2x4 collage layouts - feature: allow sending a GET request at countdown and/or after processing #308 - text on {picture,collage,print}: use color picker - This gives the possibility to use any color instead choosing one out of three defined colors! #312 - QR: - Add close button to QR #316 (fixes Issue #315 ) - Own QR menu entry #325 : - Enable/Disable QR-Code - Allow to define a own URL used for the QR-Code - Add fallback to default setting if not defined - Decide whether to append the filename to defined URL - Allow to define a own help text visible below the QR-Code - optional retry to take a picture on error #366 General - Add welcome screen on first access #296 , add config to skip by default - Add experimental Photobooth Updater and dependencies checker #285 - install-raspbian.sh: - ask all questions before installing anything - allow silent installation ( sudo bash install-raspbian.sh WEBSERVER silent ) - don't delete INSTALLFOLDERPATH if exists, make a backup instead - inform about URL to access Photobooth - ask if remote access to CUPS should be enabled - install Node.js v12.22 if needed (for Debian buster compatibility) - update-booth.sh: - also copy hidden files and folder - adjust default chromium flags - build: add \"clean\" task - style: allow adjustments via private/overrides.css (automatically used if the file exist) - debugpanel: show latest git changes of installation - Add script to disable automount and add polkit rules for USB Sync (Only needed if you have declined the question to enable the USB sync file backup while running the install-raspbian.sh and like to use the USB Sync feature.): wget https://raw.githubusercontent.com/andi34/photobooth/dev/enable-usb-sync.sh sudo bash enable-usb-sync.sh disabled version checker on dev branch add tools.js with central access to common functions Adjust and optimize different API endpoints Updated build dependencies general jquery improvements (thanks to Uwe Pieper) retry getting preview via gphoto if failed (thanks to Uwe Pieper) retry taking a picture if failed (thanks to Uwe Pieper) crowdin: translation import config: try to dectect Webserver IP if not defined FAQ - adjust chromium flags - Raspberry Touchpanel DSI simultaneously with HDMI - How to administer CUPS remotely using the web interface? 3.2.1 Bugfixes - fix collage without filter/effect applied to single images Compare changes with v3.2.0 . 3.2.0 Security - api: don't show mail password and sensible login data #274 - api: Bugfix for server-side node scripts to correctly parse the config file - Temporary removed numbered image naming option to prevent overriding existing images. For details see Issue 291 . Bugfixes - sync-to-drive: bugfix for depreciated handling of type error - cannot read property of undefined - collage: Apply defined effect(s) and/or filter to the single images instead of the final collage (partially #290 ) - core: new timeout only if no activity in progress #273 , fixes Issue #272 New Options - countdown offset to compensate shutter-delay and cheese time #286 - Remote-buzzer: - allow to enable/disable rotary control for standalone gallery #261 - allow parallel use of buttons- and rotary control #262 General - Updated build dependencies - Collage: Always show image after taken #271 , partially #290 - Debug Panel #275 and better logging on issues while taking a picture #277 and post-processing (partially #290 ): Implements a panel for to help debugging in case of issues. Focus is to be able to access through the browser key configuration and log files on the server side. This feature is 1) for fast and efficient debugging iterations and 2) also well positioned to help people with less experience on the server administration and Unix / Raspberry Pi OS side of things. Access to the debug panel is available through the admin panel (switch to expert view) or via direct URL http://localhost/admin/debugpanel.php . - Removed unneeded file-type checks all around the Photobooth api (we check for jpeg images already inside the api/applyEffects.php) - result screen: smaller QR code & smaller font-size Compare changes with v3.1.0 . 3.1.0 Bugfixes - fix horizontal flip of preview on some browser - fix decore line config #257 - fix rotary button support for standalone gallery #253 - core: fix background from device cam - login: protect Live keying if index is protected via login - lang (en): fix delete request New Options - Pre- / Post- Command #232 : - execute a shell command before a picture is taken (pre-command) - execute a shell command after processing is is completed (post-command) - Add HTML capability to E-Mail text #231 - Hide home button on results screen #256 General - updated build dependencies - hidden adminshortcut: direct to login panel - login panel: - allow to access Live keying - add link to Telegram Community Compare changes with v3.0.0 . 3.0.0 A lot of changes have been applied to Photobooth! We're proud to tell that some bugs have been fixed and a lot of user wishes could be realized! We have added a lot of new options to make Photobooth adjustable for much more use cases. A big thanks goes to jacques42@GitHub (who was involved a lot for this Release) and everyone who helped on making Photobooth this powerfull! Photobooth UI has changed to a modern look on most pages and our Admin panel and configuration setup has changed completely (please read the following Changelog). Breaking changes - The configuration setup has changed completely on Photobooth v3 and some config options have been removed! Please note: Your old config (Photobooth v2.x and older) won't work, you must setup your configuration via adminpanel again! Bugfixes - Chromakeying: - respect thumnail config - Delete: - fix removing deleted images from database - Translations: - fix translation fallback on all *.js files - E-Mail: - fix small bug for mail subject and text templates to be applied - Compatibility: - adjust default background URL setup to fix backgrounds on iOS (don't use relative path) - qr: also display correct url on subfolder installation Fix #204 New Options - Standalone gallery: - continous check for new pictures #121 - Collage: - allow to deactivate standalone picture Fix #155 - new collage layouts: 1+3, 1+3 (2), 1+2 & 2x2 (2) - remove use of background images, user should apply frames instead - test your collage settings accessing localhost/test/collage.php - Chroma keying: - Allow to switch between MarvinJ and Seriously.js algorithm for chroma keying #123 - Seriously.js: use color picker to define keyed color, use Seriously.js by default #213 - allow to define background path used for chroma keying, place your own backgrounds inside a subfolder of your Photobooth, e.g. inside private/backgrounds and define it via admin panel - added \"live chroma keying\" (choose a background -> take a picture -> get the keyed image with choosen background), access via http://localhost/livechroma.php or use the config option to use it as default start page #157 - Make imagesize for chromakeying adjustable - S = max 1000px - M = max 1500px (default like before) - L = max 2000px - XL = max 2500px - Userinterface: - feature: Allow custom index, add new index layout by Mathias Fiege #159 - allow to hide decore lines on start screen Partially #165 - allow to hide title and subtitle on start screen Partially #165 - Backup: - Allow syncing of new pictures to USB device using rsync #158 - Preview: - Options \"See preview by device cam\" and \"Preview from URL\" have been replaced by a select menu - live preview from gphoto2 #131 - Athentication: - allow to protect FAQ and manual #212 - allow to access login-protected pages without login on localhost access - Database: - make database optional, add button to (re)generate database to admin panel #203 - Remotebuzzer: - Add rotary switch support #202 , #221 - What else: - allow delete of images without request #215 - allow to take pictures right after the countdown, \"Cheese\" will be skipped #129 - allow to flip image after taken #209 - allow to add text to picture and/or collage #210 General - User Interface: - Switch to modern styling by default - Adminpanel - new adminpanel design #162 - choose between Basic View , Advanced View and Expert View : - Basic View: Show config elements relevant for most simple and most common use-case. Default settings are largely sufficient. Maybe 20-30 % of all config options. The focus are entry-level user, who start to get their feet wet. - Advanced View: Features and elements used more often - i.e. Printing, Frames for Pictures, Chroma-Keying, etc. - maybe around 50% of all options on top. This should be sufficient for most of the users. - Expert View: Dev-Setting, Data folders, Commands, etc. - the remaining 20-30% of options are mapped to this view. Geeks right here. - Admin panel option to hide / show panel headings by Operating System - Allow to download data folder as zip from http://localhost/admin/diskusage.php - Installation: - Installation Instructions for Windows added to Wiki - install-raspbian.sh script: - Ask if a Raspberry Pi (HQ) camera is used, if yes setup personal config with needed changes - allow to install from all devices running debian/debian based OS #181 - Error handling: - api (applyEffects): check if GD library is loaded - check if frames and font are valid - Lanugage support: - Add Italian to supported languages - Collage: - Rotate collage images and final collage if needed (Fix #156 ) #63 - Allow to retake a single picture on collage with interruption (Fix #166 ) - Remotebuzzer #201 , #202 : - replace gpio by onoff library - Add additional button support for collage, print and shutdown - Code style: - Add prettier-php plugin (and slightly adjust prettier config for php files) to force one codestyle #124 - Robustness and improvements: - don't use relative paths for font, frames and background images - folders are always part of data folder (besides data folder itself and archives folder) - e.g. images folder config before: data/images now: images (this will also point to data/images ) - use 100% picture quality while processing images to not lower given configured jpeg quality for the final image - Authentication: - handle login check earlier to protect other api endpoints #205 2.10.0 Bugfixes - check if we're already printing to avoid double printing - deletePhoto: also delete keying and tmp pictures - add back fallback to english if translation is missing New Options - allow to use thumnails for download - Choose thumbnail size: - XS = max 360px - S = max 540px - M = max 900px - L = max 1080px - XL = max 1260px\" - Advanced printing functions #109 : - Auto print function - allow to delay auto print - allow to adjust time \"Started printing! Please wait...\" is visible - allow to trigger print via defined key - options to show the print button independent (e.g. can be only visible on gallery) - Advanced collage options #108 : - Choose collage layout: - 2x2 - 2x4 - 2x4 + background image - Collage: apply frame once after taking or to every picture of the collage General - reordered folder setup - Crowdin translation import - add Polish to supported languages 2.9.0 Bugfixes - fix saving images on chroma keying New Options - allow to adjust PhotoSwipe (Gallery) config via Adminpanel, also allow to use some PhotoSwipe functions and make more PhotoSwipe settings available (settings explained inside the manual): - Mouse click on image should close the gallery (enable/disable) - Close gallery if clicked outside of the image (enable/disable) - Close picture on page scroll (enable/disable) - Close gallery when dragging vertically and when image is not zoomed (enable/disable) - Show image counter (enable/disable) - Show PhotoSwipe fullscreen button (enable/disable) - Show PhotoSwipe zoom button (enable/disable) - PhotoSwipe history module (enable/disable) - Pinch to close gallery (enable/disable) - Toggle visibility of controls/buttons by tap (enable/disable) - allow to adjust PhotoSwipe background opacity (0-1) - Loop images (enable/disable) - Slide transition effect (enable/disable) - Swiping to change slides (enable/disable) - gallery: add button to delete an image, enable by default - Remote Buzzer Server based on io sockets - Enables a GPIO pin connected hardware button / buzzer for a setup where the display / screen is connected via WLAN / network to the photobooth webserver (e.g. iPad). General - check for supported mime types on API files (print, chromakeying, applyEffects, deletePhoto) - core/chromakeying: Handle print.php API errors - Standalone slideshow & Gallery: - only use pictures if they exist and if they are readable - only use thumbnails if thumbnail exist and is readable, fallback to full-sized images if not - gallery: update picture counter font-size - Crop on print: set image quality to 100% by default - added disk usage page, access via admin panel or at localhost/admin/diskusage.php . - Updated PhotoSwipe - added private/ to .gitignore, can be used e.g. to store own background images - install-raspbian.sh: - check if gvfs-gphoto2-volume-monitor exists - remove unneeded \"sudo\" on yarn installation - make sure webserver is defined - Add missing common \"nodejs\" package - allow to choose between stable and development version - update build dependencies to it's latest versions - Photobooth joined Crowdin as localization manager, join here to translate Photobooth Workflow - github: add pull request template - github: don't allow empty issues, emojis to issue template names 2.8.0 Bugfixes - fix install-raspbian.sh - add missing units for crop on print values (fixes Issue #91 ) - exit slideshow on close if running - takeCollage: fix button size on small screens General - simple-translator updated to v2.0.2 - updated PHPMailer to latest version Behind the scenes - Add GitHub contribution doc - run yarn eslint once changes to our JavaScripts get pushed to GitHub or if a Pullrequest contains changes on them - run gulp sass once changes to our SCSS files get pushed to GitHub or if a Pullrequest contains changes on them New build pipeline and improved JavaScript (special thanks to Andreas Remdt ) #90 added Prettier to have consistent formatting for both JavaScript & SCSS Support older browser (should fix Issue #47 ) javascript transpiled to es5 to support older browsers (e.g. Safari 9) use \"whatwg-fetch\" polyfill which should enable Safari 9 to use simple translator 2.7.2 Bugfixes - use htmlentities on input type configuration (allows to load config containing quotes) General changes - Handle -1 & 100% picture quality the same way Changed default config - 100% picture quality by default - Don't print QR Code by default - Allow collage by default - Use collage without interruption by default - Show date below pictures inside Gallery by default - Disable Chromakeying by default 2.7.1 Bugfixes - Fix taking photo collage General changes - simple-translator updated to v1.2.0 2.7.0 New options - Add option to use numbered image names - Allow to change picture permissons while taking a photo - usefully if you e.g. like to delete pictures as different user General changes - Add database name to picture name if database changed from default name - Show \"Photobooth Gallery\" if using date formatted images but no date available - Add rpihotspot repo as submodule: - FAQ contains instructions to turn Photobooth into a WIFI Hotspot Bugfixes - Fix \"Cheeeeese\" on Apple devices - Fix loading language resources - Only take Photos if we aren't already 2.6.1 Bugfixes - Fix video--sensor canvas - Update Style for 5inch Display (800x480px) - Attempt to fix taking Pictures and Collage via defined keys General changes - Add offline FAQ, access directly via http://localhost/manual/faq.html - Update jQuery to v3.5.1 2.6.0 New options - Automatically reload Photobooth if an error occurs while taking a photo/collage (enabled by default) Bugfixes - Fix FC on Standalone Gallery if a keycode is defined to take a photo/collage - Close gallery if a keycode is defined to take a photo/collage General changes - update PHPMailer to latest version 2.5.0 New options - buttons inside gallery on bottom (can be put back on top via admin panel) #66 - define SSID used for QR on result page via admin panel #70 Bugfixes - Fix Start Screen on devices with max-width @ 1024px #68 General changes - install-raspbian: install recommended via git (easier update of Photobooth) - mention personal fork additions inside README 2.4.0 New Options - offline manual with settings explained under localhost/manual (https://github.com/andi34/photobooth/pull/59) - define collage frame seperately (https://github.com/andi34/photobooth/pull/63) - event specific database: You can now rename the picture and email database via Adminpanel. Only pictures inside the defined database are visible via gallery. (https://github.com/andi34/photobooth/pull/61) - Preview/Stream from device cam as background on start page (https://github.com/andi34/photobooth/pull/58) 2.3.3 Bugfixes - qr code: no need to define width for the text General changes - index: remove unused \"blurred\" class - Remove focus on \"New Picture\" and \"New Collage\" buttons - update-booth.sh: delete old files if exist - result screen: don't reload page after print 2.3.2 Bugfixes - chromakeying: add favicon, add apple meta tags New options - Allow to rotate preview from URL General changes - Bump jquery from 3.4.1 to 3.5.0 (fixes a security vulnerability) - .gitignore changes: - config folder: ignore everything but not \"config.inc.php\" - ignore the whole css folder instead defining every .css seperately - Down-sized QR code - adjust countdown and cheese colors for default blue-gray theme 2.3.1 Bugfixes - Fix loading language files if Photobooth is installed in a subfolder General changes - add license files for node modules on packed builds - Installer: Allow using latest prebuild package again 2.3.0 General changes - Switch to blue-gray color theme by default - Admin panel: switch to range config and use toggles instead checkboxes - Switch to simple-translator for translations, use english as fallback language if a translation is missing. This also gives the possibility to easily translate Photobooth. ( How to update or add translations? ) New Options - Show/Hide button to toggle fullscreen mode Bugfixes - Fix placeholder for preview from stream URL 2.2.1 New Options - Allow to rotate photo after taking - Allow using a stream from URL at countdown for preview General changes - Remove unused resources/fonts/style.css - language: use correkt ISO 639-1 Language Code for Greek - Optimize picture size on result screen 2.2.0 General changes - install-raspbian: use Apache2 webserver by default again - added Slideshow option to Gallery - standalone slideshow localhost/slideshow - access login via localhost/login instead localhost/login.php - fix windows compatibility - fix check for image filter - performance improvement (https://github.com/andreknieriem/photobooth/pull/226) - Improved width of admin- and login-panel (partially https://github.com/andreknieriem/photobooth/pull/221) - general bug-fixes if device cam is used to take pictures (https://github.com/andreknieriem/photobooth/pull/220) New options - Option to disable the delete button (https://github.com/andreknieriem/photobooth/pull/228) - Option to keep original images in tmp folder - Configurable image preview while post-processing - Adjustable time a image is shown after capture - Optional EXIF data preservation (disabled by default) 2.1.0 Optimize performance: - separate trigger and post-process task - if possible use faster method to resize a picture Many new features and options added: - new options: - Make collage countdown timer adjustable - enable/disable real error messages - Allow setting a default filter - allow to disable filter - JPEG quality configurable - enable/disable download button in gallery - Allow defining a background via admin panel: This also gives the possibility to define a livestream URL (e.g. http://192.168.239.77:8081 if motion is used ) to use a livestream as background. - Allow admins to choose what gets deleted at reset (inspired by https://github.com/andreknieriem/photobooth/issues/178) - always: - delete db.txt - optional (but enabled by default): - delete images - delete \"mail-addresses.txt - delete personal config (my.config.inc.php) - Allow defining Photobooth web server IP to fix image download via QR-Code if Photobooth is accessed via localhost/127.0.0.1 - Allow choosing a frame at take pic - Frames and font adjustable - allow protection of admin panel and index with password - allow using device cam to take pictures (save origin (localhost/127.0.0.1 if accessed on server, else HTTPS) needed! - define Photobooth colors using colorpicker - allow more elements to change color - allow defining default font size - optional rounded edges style - admin panel style: - change weeding config to event config and add several new symbols to choose - own printer submenu - Added raspi reset script - allow to abort collage creation - improve installation script - make kiosk mode optional - don't delete /var/www/html without request - use NGINX by default, optional allow to install Apache or Lighttpd - fix printer permissions and install CUPS by default General changes: - README: update formatting and cleanup - Fix undefined placeholder warnings - take picture: red error messages - choose a filter after picture was taken instead before - Display collage count before taking photo - Handle take photo error cases 2.0.2: fix saving of chroma keying results, style for chroma keying, style of gallery caption, datetime string on images without date info 2.0.1: fix deletion of db file, fix config changes via admin settings 2.0.0: Overhaul: reorganized all source files, completely overhaul coding New features: gallery standalone (localhost/gallery.php), add button to delete the picture after it was taken and displayed on the screen, change style via admin panel, add trigger keys via config, add option to force the use of a buzzer, add option to enable CUPS button, add option to resize and crop image by center at print, use same printing settings/options for chromakeying as for normal prints, take pictures for collage one after the other with or without interruption, add version checker to admin page, add greek, add option to specify data folder Some more bugfixes and improvements as usually 1.9.0: Responsive Layout. Use relative paths to allow running Photobooth in a subfolder. Fix config.json being ignored on chromakeying. Adjustments on blue-gray theme. Some more small adjustments and bugfixes. 1.8.3: Adjust scrollbar config and add blue-gray scrollbar theme, allow using Pi Cam for preview and to take pictures, add hidden shortcut for admin settings, add polaroid effect, add print confirmation dialogue 1.8.2: Added spanish as supported language, print text on picture feature, optional blue-gray theme, adjust admin panel. Small bugfixes and improvements as always. 1.8.1: Small bugfixes and improvements. New Features: enable/disable printing QR-Code, enable/disable photo collage function, enable/disable printing a frame on your picture 1.8.0: Update jQuery, GSAP and PhotoSwipe to latest versions, add chroma keying feature (green screen keying) 1.7.0: Add possibillity to choose an image filter before taking a picture 1.6.3: Add config and instructions to use a GPIO Button to take a picture (address https://github.com/andreknieriem/photobooth/issues/10), translate sucess and error messages while sending images via mail 1.6.2: Add wedding specific config, fix gallery settings not being saved from admin panel 1.6.1: Add possibillity to disable mobile view, update Kiosk Mode instruction 1.6.0: Button to send image via mail (uses PHPMailer ), add use of \"my.config.inc.php\" for personal use to prevent sharing personal data (e.g. E-Mail password and username) on Github by accident 1.5.3: Several new options (disable gallery via config, set countdown timer via config, set cheeeese! Timer via config, ability to show the date/time in the caption of the images in the gallery), all config changes now available in admin page, complete french translation, add empty Gallery message, Fullscreen Mode on old iOS-Devices when starting photobooth from homescreen, StartScreen message is an option in config/admin page now, add instructions for Kiosk Mode, should fix #11, and #2, improve instructions in README, some more small Bugfixes and improvements. Merged pull-request #53 which includes updated pull-requests #52 & #54 1.5.2: Bugfixing QR-Code from gallery and live-preview position. Merged pull #45 1.5.1: Bugfixing 1.5.0: Added Options page under /admin. Bugfix for homebtn. Added option for device webcam preview on countdown 1.4.0: Merged several pull requests 1.3.2: Bugfix for QR Code on result page 1.3.1: Merged pull-request #6,#15 and #16 1.3.0: Option for QR and Print Butons, code rework, gulp-sass feature enabled 1.2.0: Printing feature, code rework, bugfixes 1.1.1: Bugix - QR not working on touch devices 1.1.0: Added QR Code to Gallery 1.0.0: Initial Release","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#upcoming-photobooth-release","text":"To use a preview of the upcoming Version you need to install the Install last development version using the install-photobooth.sh installer (now also works on all devices running debian / a debian based OS). Last development version is installed by default! You can check the commit history for changes made since your installation here . An updated FAQ can always be found at localhost/faq . Please read the license notice here .","title":"Upcoming Photobooth release"},{"location":"changelog/#440-09012024","text":"Breaking changes requires Node.js v18.17.0 or newer requires npm 9.6.7 or newer General api: get rid of deleteTmpPhoto cameracontrol.py: don't fail capturing images using Sony Cameras result screen: reload after all files have been deleted core: simplify print message handling core: define tempImageUrl if and where needed core: improve logging api (takePic): only log return value issues on loglevel > 1 core/gallery: central QR modal handling config: move preview bsm to commands section preview: remove arrow functions config(cleanup): remove unused success messages api(previewCamera): use play or stop string instead true and false preview: combine api.startWebcam and api.stopPreviewVideo functions preview: adjust logging preview: fix preview TEST mode preview: fix checking for frame config test(preview): fix preview with cmd core(print): remove unneeded delay optimized keyboard trigger Remove fake buttons to trigger actions, use global functions instead core: simplify check to.clear timeout core: blur picture / collage buttons as needed core: we already blur printBtn after print livechroma: add notification via modal message on trigger via keyCode livechroma: adjust keyCode trigger handling core: adjust keyCode trigger handling logging: adjust some console log messages core: remove unneded focusSet on QR btn click config: remove collage only config, allow to enable/disable picture instead configsetup: define remotebuzzer server port first lib(applyText): remove unneeded if-else statements lib(applyText): add error handling, return unmodified resource on error lib(applyText): throw Exception if text can't be applied lib(applyFrame): add error handling, return unmodified resource on error lib(applyFrame): throw Exceptions if needed lib(polaroid): return unmodified resource on error lib(polaroid): throw exceptions if needed lib(resize): add try-catch-block to rotateResizeImage function lib(resize): throw exceptions on rotateResizeImage if needed lib(resize): add try-catch-block to resizeImage function lib(resize): throw exceptions where needed on resizeImage lib(resize): validate dimensions lib(resize): add try-catch-block to resizePngImage function lib(resize): validate dimensions on resizePngImage function lib(resize): throw exceptions where needed on resizePngImage function lib(resize): add try-catch-block to resizeCropImage function lib(resize): validate dimensions on resizeCropImage function lib(resize): try to clear cache on error lib(resize): adjust check if resize was possible lib (collage): only test file if needed js(tools): add print image function to reuse gulp: updated with ECMAScript Modules (ESM) syntax task: bind docker do port 80 and 443 task: bump node version to v18 LTS and drop yarn task: only limit node and npm version by minimum versions package: switch to marked to formatt faq remotebuzzer server: log earlier remotebuzzer-server: update sanity check, only check if needed remotebuzzer-server: allow GPIO to be any number Bugfix fix: start shutter animation independent of cheese image cameracontrol.py: don't fail capturing images using Sony Cameras core: fix Test value for CameraDisplayMode test preview: fix Test value for CameraDisplayMode UI UI: use highlight color for hover gallery: respect button and font color Prettier display delete status ui: adjust modal transparency and font-weight core: use own div for general different modal messages delete: adjust delete notification messages style: use secondary color for backgrounds where needed task: fix colors while processing images ui(gallery): only show 3 images in a row on mobile phones core: fix delete on collage with interruption Check if images array is empty Standalone Gallerie: add missing js file core(fix): init PhotoSwipe after remoteBuzzer api (takePic): only abort if file was not created preview: respect offset to hide preview preview: respect offset to hide preview from URL slideshow: clear timeout to prevent from running timeout multiple times remotebuzzer server: Determine whether or not GPIO access is possible remotebuzzer server: fix checking for gpio config welcome: use index.php instead of detected URL api (admin): don't reset log on preview config error core(preview): remove preview mode check if image is captured from preview core: check for preview stream instead use of demo images core(preview): stop preview on countdown slightly earlier remotebuzzer server: fix for Node.js v16 submodules: ignore dirty state core: hide result screen on reset remotebuzzer client: fix log Revert \"stabilized rotary encoder handling\" remotebuzzer client: handle QR in gallery remotebuzzer client: close qr modals directly if needed added explicit int conversion gallery: Collage only config was removed sync-to-drive: fix for Node.js v16 Sync more Filetypes lib(config): adjust print command for Windows api (previewCamera): $config is not available, remove logging for now remotebuzzer: respect config also on get request trigger remotebuzzer: don't trigger a different action if disabled remotebuzzer client: check if taking pictures is enabled trigger.php: add missing options, respect hardware button config lib (db): fix for PHP 8 api(admin): check if fonts, frames and collage placeholder are valid core: clear/reset timeout on keyup lib (image): fix applying text to images, fail if text CAN NOT be applied lib(image): don't keep aspect ratio while resizing PNG bugfix: supprress error messages on getimagesize function api(admin): image filter depends on images in tmp folder fix hiding/showing home button independent of button bar on result screen index (frame): respect preview frame config core: don't add images to gallery if gallery is disabled core: print & qr code only if enabled bugfix: update dockerfile add missing python3 lib(resize): fix rotating images on PHP8 Feature config: make time adjustable a notification is visible preview: allow to delay the visibility of the preview from URL preview: allow execution of start/stop cmd without validation config: run preview CMD's without validation by default preview: run preview cmd & stop cmd independent of preview mode remotebuzzer: make print and rotary functions available via get request remotebuzzer: Reboot Button remotebuzzer: make shutdown and reboot available via get request task: enable lazy loading for gallery images FAQ FAQ: add note to fix broken v4l2loopback module FAQ: add notes about issues while taking a picture faq: a username is needed while running enable-usb-sync.sh Updated FAQ - how to upload pictures to remote server FAQ: preview bsm was moved FAQ: no need for success message FAQ: add instructions to update gphoto2 & libgphoto FAQ: adjust PiCamera information FAQ: Add possible preview error because of secure boot FAQ: adjust GPIO setup for PiOS Bookworm FAQ: adjust GPIO information for Raspberry Pi 5; adjust for Pi OS versions Install install: adjust PolKit rule naming install-photobooth: allow to add PolKit rule on all linux distros install-photobooth: PolKit rule doesn't depend on update install-photobooth: make system update optional on photobooth update install-photobooth: fix permissions on yarn folder install-photobooth: easy access to private folder install-photobooth: always ignore filemode changes on git install-photobooth: allow Node.js minor version to match or be newer install-photobooth: be flexible on Node.js version install: yarn: use of apt-key is deprecated install-photobooth: use PHP 8.2 by default install-photobooth: PHP8 sources needed earlier install-photobooth: add https://packages.sury.org/php/ only if distro is supported install: also run apt autoremove while removing nodejs install: switch to latest development version of Gphoto2 install: fix PHP8 install in Ubuntu 20 install-photobooth: improve/fix PHP8 install on Ubuntu install-photobooth: fix missing sources.lst on Ubuntu 22.04 install-photobooth: install npm on Raspberry Pi bugfix: correct installer install: add ppa for PHP on all Debian based distributions install: run commands as www-data user install: install needed packages for gphoto2 webcam service only if needed install: use wget to check internet connection install: update nodejs install install: suppress most progress infos, only display essential output install: fix permissions for www-data user on install install: check for npm on all devices install: remove npm from packages, uninstall libnode72 if installed install: update npm to latest install: fix Download of node-install (Raspberry Pi) install: also check NODEJS_MINOR version install: always install nodejs from official node source install: only fail on Node.js below v18, recheck version if update is skipped install: proof npm version, abort if needed install: fix checking npm version install: check for Firefox browser first install: also check for firefox-esr install-photobooth: remove autostart and hide mouse installer: remove leftover from removed questions/features install-photobooth: don't compile gphoto2 and libgphoto2 install: check if /boot/config.txt is a symlink install-photobooth: adjust Update for www-data user install-photobooth: install npm 9.6.7 if needed Full Changelog : https://github.com/PhotoboothProject/photobooth/compare/v4.3.1...v4.4.0","title":"4.4.0 (09.01.2024)"},{"location":"changelog/#431-06122022","text":"Bugfixes core: improve timings while taking an image by @andi34 in #95 Adjust the code to start taking an image before the Cheeeeeese message disappears (the Cheese-Message can be used to \"hide\" the delay we have until the camera triggers). Also adjust the code to respect the defined offset while taking an image. The take picture action now runs independent of the visible running countdown. Stop the shutter animation after 500ms which should look more fluid and also make sure we can't forget to stop it. If cheese is enabled cheese time will be used instead. Don't run shutter animation twice if an cheese image is used and cheese enabled. General build(deps): bump sass from 1.55.0 to 1.56.1 by @dependabot in #93 build(deps-dev): bump @babel/preset-env from 7.19.4 to 7.20.2 by @dependabot in #94 build(deps-dev): bump eslint from 8.26.0 to 8.28.0 by @dependabot in #92 build(deps): bump socket.io from 4.5.3 to 4.5.4 by @dependabot in #90 build(deps-dev): bump @prettier/plugin-php from 0.19.1 to 0.19.2 by @dependabot in #91 Full Changelog https://github.com/PhotoboothProject/photobooth/compare/v4.3.0...v4.3.1","title":"4.3.1 (06.12.2022)"},{"location":"changelog/#430-29112022","text":"Bugfixes FAQ: fix small typo by @modularTaco in #68 fix(documentation): remove reference to dev mode by @modularTaco in #71 fix(gallery): respect clickToCloseNonZoomable PhotoSwipe config by @andi34 in #72 fix(gallery): fix click on close button while an image is opened by @andi34 in #73 install-photobooth: also check for \"chromium\" package by @andi34 in #86 New Options New options for the QR Code on print by @fmiccolis in #65 Feature: make icons adjustable by @andi34 in #74 Show frame over the preview by @fmiccolis in #45 feature: add simple trigger ( http://localhost/trigger.php ) for remotebuzzer server by @andi34 in #66 General allow collage background images to be in any filetype gd understands by @up-87 in #63 core(navbar): restructure navbar function by @andi34 in #64 Restructure preview handling, add testpage for preview settings ( http://localhost/test/preview.php ) by @andi34 in #61 make collage handling more configurable, fix collages and the retry mechanism by @up-87 in #69 cleanup: remove experimental updater & dependencies checker by @andi34 in #84 cleanup: api, also improve random image naming by @andi34 in #87 crowdin: translation import by @andi34 in #88 New Contributors @fmiccolis made their first contribution in #65 @modularTaco made their first contribution in #68 Full Changelog : https://github.com/PhotoboothProject/photobooth/compare/v4.2.0...v4.3.0","title":"4.3.0 (29.11.2022)"},{"location":"changelog/#420-16102022","text":"Bugfixes fix(admin): show 3rd line text of text on * in advanced view by @andi34 in #52 (fix) Stop shutter on fail, respect retry settings on fail by @andi34 in #54 api(takePic): fix flipping image taken from device cam preview, fix Issue 55 by @andi34 in #57 core(api.initializeMedia): retry every second by @andi34 in #56 tools(api.getRequest): don't use JSON.parse while getting a response install-photobooth: iputils-ping is needed to check Internet connection install-photobooth: fix placing Install log inside Photobooth folder General build(deps): bump sass from 1.54.8 to 1.55.0 by @dependabot in #47 build(deps-dev): bump eslint from 8.23.0 to 8.24.0 by @dependabot in #48 build(deps-dev): bump @babel/preset-env from 7.18.10 to 7.19.3 by @dependabot in #49 build(deps-dev): bump @prettier/plugin-php from 0.18.9 to 0.19.1 by @dependabot in #50 build(deps-dev): bump @babel/core from 7.18.13 to 7.19.3 by @dependabot in #51 crowdin: translation import by @andi34 in #58 vendor(PHPMailer): update to v6.6.5 by @andi34 in #59 core(preview): remove unneeded checks on preview handling Full Changelog: https://github.com/PhotoboothProject/photobooth/compare/v4.1.0...v4.2.0","title":"4.2.0 (16.10.2022)"},{"location":"changelog/#410-30092022","text":"Bugfixes fix(UI): don't run shutter animation twice by @andi34 in #32 fix(ui): add version tag to own stylesheets by @andi34 in #33 fix(ui): add version tag to own javascripts by @andi34 in #36 fix(admin): don't remove images from archives and private folder by @andi34 in #42 fix(admin): respect changed config before executing an reset by @andi34 in #43 New Options feature(collage): add background to collage for easier template creation. closes Issue #28 by @up-87 in #31 feature(debugpanel): add access to installation log by @andi34 in #37 feature(ui): allow to define language resource path, also fix path for javascript folders on subfolder installation by @andi34 in #38 feature(preview): allow to rotate all preview options by @andi34 in #44 rework(preview): remove gphoto preview option by @andi34 in #46 General lib(configsetup): make more settings available on basic view by @andi34 in #35 api(debug): log information from admin.php on config changes and reset by @andi34 in #41 crowdin: translation import by @andi34 in #39 Full Changelog: https://github.com/PhotoboothProject/photobooth/compare/v4.0.0...v4.1.0","title":"4.1.0 (30.09.2022)"},{"location":"changelog/#400-10092022","text":"Source code moved to https://github.com/PhotoboothProject/photobooth , old Releases etc. will still be available at https://github.com/andi34/photobooth Security - Security advice added to the README and welcome page #376 - PHPMailer: update to v6.6.4 Breaking changes QR code is now printed onto the image instead on the right side to not break the image ratio, new options have been added for best user experience (see New Options for details) Remove Greek, Polish and Spanish from Language options because they aren't maintained ( further information ) Collage: layout's changed slightly (positions and image size now get calculated depending on defined dpi). Existing frames might not fit anymore and need to be updated. vendor: remove rpihotspot from repo (it's still available on github, but we don't need it as a direct dependencie for Photobooth) Bugfixes - chromium: fix white screen of death on first start in kiosk mode (Raspberry Pi only) - livechroma: fix text formatting on error/retry - api(takePic): - fix error message, take picture command can be anything - check if picture exists: If a picture exists already, rename it before using the same filename for a new picture. This might fix an issue on collage where a retaken image isn't saved / used and should also prevent overriding an existing image by accident. - fix print with QR Code - Video preview #448 , #476 : - Fix gphoto preview on retry / next collage image. - fix taking pictures from gphoto preview #24 ( Note: Gphoto won't be used, it's more like taking a screenshot of the Preview. Since Gphoto won't be used there's no flash light of the camera!) - hide video preview in background of interrupted collage - fixed possible DSLR preview stop time bug - fixed bug: preview['flip'] was saved but not reloaded. So if the correct setting should be retained it needed to be set every time. - fixed bug: in the background of the continuos collage image preview the gphoto2 preview (without bsm) continued to run visibly - Improve preview handling #6 - core: - respect retry timeout: The timeout should not be a new countdown, it should be a timeout as it's name says. Retry notification will now be visible for defined time. Countdown for picture/next collage image is not touched and will be used as defined. - fix get request at countdown - handle errors on get requests #15 - welcome.php: use detected URL to start Photobooth - FAQ: fix command to execute setup-network.sh for hotspot - frame/font: again allow to be located outside of photobooth source - config(print): add fallback to defaults if print font/frame is not defined - collage: - Continue collage with keypress #408 - prevent caching of collage images with unique image name #425 - use collage countdown timer on first collage image #22 - installation script: - fix permissions on www-data users cachefolder and .yarnrc if exists - fix and improve use of lighttpd and nginx #477 - install curl (and raspberrypi-kernel-headers for PiOS) early enough to be used - stabilized rotary encoder handling #449 - email: - fix wrong button text if \"Store email addresses in file\" is enabled #462 (fixes Issue #461 ) - stop spinning loader icon once the email has been sent (fixes Issue #453 ) - language: - fix mixed up german translation for pre- and post-photo command (fixes Issue #451 ) - PHP8: - fix Deprecated Passing null to parameter error - fix Implicit conversion from float (number) to int loses precision New Options - Add traslate button to Adminpanel, opens Photobooth project on Crowdin - UI: - Shutter animation, enabled by default #368 - add config to define highlight color used on round buttons (modern style) - make UI and button style independent #442 - add modern squared design by @Moarqi #440 - QR #371 : - Error correction level adjustable - Gallery: - Add config option to enable/disable the figure caption in the gallery view #398 - Add config option to enable/disable action button footer (photo, collage) - Collage: - added simple 2+1 style that is to be used with a frame that fills the open space #424 - Added an option to set a placeholder (eg custom image / graphic) for one image of the collage #424 - simple customizable collage config with a json file #26 - Preview: - config: allow to adjust the time to stop the gphoto preview - choose to flip the preview along the X or Y axis #465 , fixup #476 - specify how the preview should be resized to fit: This setting uses the css object-fit property which is used to specify how the preview should be resized to fit. The following options are available: - fill - The image is resized to fill the given dimension. If necessary, the image will be stretched or squished to fit. - contain - The image keeps its aspect ratio, but is resized to fit within the given dimension. - cover - The image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit. - none - The image is not resized. - scale-down - the image is scaled down to the smallest version of none or contain. - allow to set background-size to cover on URL preview - Print: - Always print the QR onto the image instead in the right side (see Breaking Changes ) - QR size adjustable - QR offset adjustable - QR position adjustable - allow to disable rotation before print - Countdown: - allow using a customizable image instead of cheese message if shutter animation is used #4 - Post picture command: - Passes the Filename (doesn't include the full path!) to the post-cmd . This can be used e.g. to manipulate the Image (e.g. with Imagemagick) after the Picture was taken. General - restore windows compatibility #23 - Import latest Crowdin translations - Cleanup core.js #369 : - remove unneeded if checks - improve readability - Let's start the picture process from beginning on retry. Also start all previews like defined at countdown. - Centralized preview start/stop functions, this helps getting a better overview of the code. - log error messages to console from api.errorPic - optimize error messages - time configurations moved to constants - move more ID selector to constants - Collage: - Collage code cleanup (can most likely still be improved by using php classes but this should be okay) - rename some collage styles (2+2 instead of 2x2 as x now always indicates pictures are reused - old name still works) #424 - Collage Images will be dynamically scaled based on a given resolution (eg 300dpi etc) #424 - configsetup: - add <input type=\"number\"> and use where possible to avoid issues on input - install script: - install-raspbian: rename to install-photobooth.sh, photobooth works fine on debian and other debian based distributions - pass options to the script (run sudo bash install-photobooth.sh -h to see all options) - ask to install Gutenprint drivers - make sure a new question is recognized - always mention the setup choice - adjust warning messages - fix git installation message - install latest development version via git by default (latest stable3 version can be passed to the installer via option) - prevent double entry in autostart while re-running the installer - allow to install gphoto2 Webcam Service - create installation log inside /tmp/photobooth - always install latest stable gphoto2 - adjust package array handling - Add new parameter to setup the php version #477 - Webserver #477 : - Apply PHP Version for nginx and lighttpd - Fix (improve) nginx / lighttpd service startup - Fix client_max_body_size problems on nginx - detect installed webbrowser and create autostart file depending on it - The following browser can be detected: chromium-browser , google-chrome , google-chrome-stable , google-chrome-beta , firefox - skip Desktop related config if lxde is not installed - avoid Chrome/Chromium asking for password to unlock keyring - run apt upgrade instead apt dist-upgrade: Users might have come to rely on packages that were installed implicitly because of other (explicitly installed) packages' dependency on them. Thus the packaging system cannot be aware of a user/administrator desire to retain certain functionality that might otherwise be removed via dist-upgrade. - fix permission on hidden files and folder - seperate general and pi specific permissions - ignore filemode changes on git install - Check for internet connection (we can't install without an internet connection) - allow to run an update on git installation: - to update to latest development version please run sudo bash install-photobooth.sh --update If local changes are detected, the installer can try to apply those changes after the update was completed. If the changes can not be applied after update, your local changes will be kept inside a backup branch and can be applied manually again (you might need to resolve conflicts because of source changes). If local changes are detected, the installer will abort on silent install. You can re-run the update-process without the -s flag and confirm backing up your local changes for update. - mention to clear Browser Cache on Update - enable-usb-sync.sh - Disable reboot for silent mode (fixes Issue #450 ) - support other users (fixes Issue #423 ) - gphoto: - Added another way to control dslr cameras with cameracontrol.py #386 , #387 , #393 - Add a docker setup for local testing and development #397 - Remote buzzer: - Add simple GET endpoints to trigger photos / collages (to support WiFi hardware buttons) #400 - Rework option to use remotebuzzer server without GPIO and remove hidden faulty HID and softbutton implementation - UI: - sass(button): convert button size from px to em - sass(modern button): adjust font awesome icon size - Dark UI Style by @Moarqi - replace default background image - add clouds background images - Email: - hide checkbox to add email to database, adjust information text - debloat: - remove outdated update-booth.sh - Video preview: - minor change: don't display \"please wait\" text for interrupted collage when the selection is shown on screen #476 - Improve preview handling #6 - sass/css: - video preview: - simplify rules - adjust position and video handling - scripts(pack-build): - remove unavailable files - add missing node_modules dependencies - admin: - hide experimental updater, instead use the install-photobooth.sh to update - pass filename to post cmd #7 - Overhaul Photobooth logging #14 - more code-cleanup in various places","title":"4.0.0 (10.09.2022)"},{"location":"changelog/#330-16012022","text":"Breaking changes - If you are using an older version of Rasperry Pi OS or Debian / Debian based distribution make sure Node.js v12.22.x is installed! Check your Node.js version while running node -v from your terminal. - (config) Switch from milliseconds to seconds the image is visible on result screen Please adjust your configuration if you've changed the default setting on previous version. If you've not changed the default setting there's nothing to do. - vendor: phpqrcode as submodule - config: Webserver IP should not contain subfolder/subpages, IP should be detected if not defined. QR now needs it's own URL defined (see new Options). Bugfixes - standalone slideshow: fix auto refresh - hide inner navigation panel if thrill is triggered from result page - remotebuzzer: - fix hang of remotebuzzer server on error - bugfix for hardware button to trigger collage mode #351 (fixes Issue #300 ) - fix socket.io Server on Photobooth subfolder installation #364 (fixes Issue #360 ) - picture and mail database always need a name, add fallback to default if empty - configsetup: add event option to basic view (fixes Issue #320 ) - build: fix build failing on macOS (fixes Issue #318 ) - Fix Typo in admin.php while using a custom style #322 - Fix preview from gphoto as background if BSM is disabled (thanks to Uwe Pieper), note: This is not recommended for a Raspberry Pi as it requires faster hardware! New Options - remotebuzzer: - Allow to configure GPIO debouce delay through admin panel #294 - ui: add option to show / hide button bar on result screen - general: add config to use sample pictures instead taking a picture, dev-mode now only enables advanced logging for debugging purpose - add button for reboot and shutdown on linux - collage: - continuous collage: allow to disable single images being visible - allow to define collage background color #324 - add option to add all images from collage to gallery #307 (fixes Issue #269 ) - add cutting lines on 2x4 collage layouts - feature: allow sending a GET request at countdown and/or after processing #308 - text on {picture,collage,print}: use color picker - This gives the possibility to use any color instead choosing one out of three defined colors! #312 - QR: - Add close button to QR #316 (fixes Issue #315 ) - Own QR menu entry #325 : - Enable/Disable QR-Code - Allow to define a own URL used for the QR-Code - Add fallback to default setting if not defined - Decide whether to append the filename to defined URL - Allow to define a own help text visible below the QR-Code - optional retry to take a picture on error #366 General - Add welcome screen on first access #296 , add config to skip by default - Add experimental Photobooth Updater and dependencies checker #285 - install-raspbian.sh: - ask all questions before installing anything - allow silent installation ( sudo bash install-raspbian.sh WEBSERVER silent ) - don't delete INSTALLFOLDERPATH if exists, make a backup instead - inform about URL to access Photobooth - ask if remote access to CUPS should be enabled - install Node.js v12.22 if needed (for Debian buster compatibility) - update-booth.sh: - also copy hidden files and folder - adjust default chromium flags - build: add \"clean\" task - style: allow adjustments via private/overrides.css (automatically used if the file exist) - debugpanel: show latest git changes of installation - Add script to disable automount and add polkit rules for USB Sync (Only needed if you have declined the question to enable the USB sync file backup while running the install-raspbian.sh and like to use the USB Sync feature.): wget https://raw.githubusercontent.com/andi34/photobooth/dev/enable-usb-sync.sh sudo bash enable-usb-sync.sh disabled version checker on dev branch add tools.js with central access to common functions Adjust and optimize different API endpoints Updated build dependencies general jquery improvements (thanks to Uwe Pieper) retry getting preview via gphoto if failed (thanks to Uwe Pieper) retry taking a picture if failed (thanks to Uwe Pieper) crowdin: translation import config: try to dectect Webserver IP if not defined FAQ - adjust chromium flags - Raspberry Touchpanel DSI simultaneously with HDMI - How to administer CUPS remotely using the web interface?","title":"3.3.0 (16.01.2022)"},{"location":"changelog/#321","text":"Bugfixes - fix collage without filter/effect applied to single images Compare changes with v3.2.0 .","title":"3.2.1"},{"location":"changelog/#320","text":"Security - api: don't show mail password and sensible login data #274 - api: Bugfix for server-side node scripts to correctly parse the config file - Temporary removed numbered image naming option to prevent overriding existing images. For details see Issue 291 . Bugfixes - sync-to-drive: bugfix for depreciated handling of type error - cannot read property of undefined - collage: Apply defined effect(s) and/or filter to the single images instead of the final collage (partially #290 ) - core: new timeout only if no activity in progress #273 , fixes Issue #272 New Options - countdown offset to compensate shutter-delay and cheese time #286 - Remote-buzzer: - allow to enable/disable rotary control for standalone gallery #261 - allow parallel use of buttons- and rotary control #262 General - Updated build dependencies - Collage: Always show image after taken #271 , partially #290 - Debug Panel #275 and better logging on issues while taking a picture #277 and post-processing (partially #290 ): Implements a panel for to help debugging in case of issues. Focus is to be able to access through the browser key configuration and log files on the server side. This feature is 1) for fast and efficient debugging iterations and 2) also well positioned to help people with less experience on the server administration and Unix / Raspberry Pi OS side of things. Access to the debug panel is available through the admin panel (switch to expert view) or via direct URL http://localhost/admin/debugpanel.php . - Removed unneeded file-type checks all around the Photobooth api (we check for jpeg images already inside the api/applyEffects.php) - result screen: smaller QR code & smaller font-size Compare changes with v3.1.0 .","title":"3.2.0"},{"location":"changelog/#310","text":"Bugfixes - fix horizontal flip of preview on some browser - fix decore line config #257 - fix rotary button support for standalone gallery #253 - core: fix background from device cam - login: protect Live keying if index is protected via login - lang (en): fix delete request New Options - Pre- / Post- Command #232 : - execute a shell command before a picture is taken (pre-command) - execute a shell command after processing is is completed (post-command) - Add HTML capability to E-Mail text #231 - Hide home button on results screen #256 General - updated build dependencies - hidden adminshortcut: direct to login panel - login panel: - allow to access Live keying - add link to Telegram Community Compare changes with v3.0.0 .","title":"3.1.0"},{"location":"changelog/#300","text":"A lot of changes have been applied to Photobooth! We're proud to tell that some bugs have been fixed and a lot of user wishes could be realized! We have added a lot of new options to make Photobooth adjustable for much more use cases. A big thanks goes to jacques42@GitHub (who was involved a lot for this Release) and everyone who helped on making Photobooth this powerfull! Photobooth UI has changed to a modern look on most pages and our Admin panel and configuration setup has changed completely (please read the following Changelog). Breaking changes - The configuration setup has changed completely on Photobooth v3 and some config options have been removed! Please note: Your old config (Photobooth v2.x and older) won't work, you must setup your configuration via adminpanel again! Bugfixes - Chromakeying: - respect thumnail config - Delete: - fix removing deleted images from database - Translations: - fix translation fallback on all *.js files - E-Mail: - fix small bug for mail subject and text templates to be applied - Compatibility: - adjust default background URL setup to fix backgrounds on iOS (don't use relative path) - qr: also display correct url on subfolder installation Fix #204 New Options - Standalone gallery: - continous check for new pictures #121 - Collage: - allow to deactivate standalone picture Fix #155 - new collage layouts: 1+3, 1+3 (2), 1+2 & 2x2 (2) - remove use of background images, user should apply frames instead - test your collage settings accessing localhost/test/collage.php - Chroma keying: - Allow to switch between MarvinJ and Seriously.js algorithm for chroma keying #123 - Seriously.js: use color picker to define keyed color, use Seriously.js by default #213 - allow to define background path used for chroma keying, place your own backgrounds inside a subfolder of your Photobooth, e.g. inside private/backgrounds and define it via admin panel - added \"live chroma keying\" (choose a background -> take a picture -> get the keyed image with choosen background), access via http://localhost/livechroma.php or use the config option to use it as default start page #157 - Make imagesize for chromakeying adjustable - S = max 1000px - M = max 1500px (default like before) - L = max 2000px - XL = max 2500px - Userinterface: - feature: Allow custom index, add new index layout by Mathias Fiege #159 - allow to hide decore lines on start screen Partially #165 - allow to hide title and subtitle on start screen Partially #165 - Backup: - Allow syncing of new pictures to USB device using rsync #158 - Preview: - Options \"See preview by device cam\" and \"Preview from URL\" have been replaced by a select menu - live preview from gphoto2 #131 - Athentication: - allow to protect FAQ and manual #212 - allow to access login-protected pages without login on localhost access - Database: - make database optional, add button to (re)generate database to admin panel #203 - Remotebuzzer: - Add rotary switch support #202 , #221 - What else: - allow delete of images without request #215 - allow to take pictures right after the countdown, \"Cheese\" will be skipped #129 - allow to flip image after taken #209 - allow to add text to picture and/or collage #210 General - User Interface: - Switch to modern styling by default - Adminpanel - new adminpanel design #162 - choose between Basic View , Advanced View and Expert View : - Basic View: Show config elements relevant for most simple and most common use-case. Default settings are largely sufficient. Maybe 20-30 % of all config options. The focus are entry-level user, who start to get their feet wet. - Advanced View: Features and elements used more often - i.e. Printing, Frames for Pictures, Chroma-Keying, etc. - maybe around 50% of all options on top. This should be sufficient for most of the users. - Expert View: Dev-Setting, Data folders, Commands, etc. - the remaining 20-30% of options are mapped to this view. Geeks right here. - Admin panel option to hide / show panel headings by Operating System - Allow to download data folder as zip from http://localhost/admin/diskusage.php - Installation: - Installation Instructions for Windows added to Wiki - install-raspbian.sh script: - Ask if a Raspberry Pi (HQ) camera is used, if yes setup personal config with needed changes - allow to install from all devices running debian/debian based OS #181 - Error handling: - api (applyEffects): check if GD library is loaded - check if frames and font are valid - Lanugage support: - Add Italian to supported languages - Collage: - Rotate collage images and final collage if needed (Fix #156 ) #63 - Allow to retake a single picture on collage with interruption (Fix #166 ) - Remotebuzzer #201 , #202 : - replace gpio by onoff library - Add additional button support for collage, print and shutdown - Code style: - Add prettier-php plugin (and slightly adjust prettier config for php files) to force one codestyle #124 - Robustness and improvements: - don't use relative paths for font, frames and background images - folders are always part of data folder (besides data folder itself and archives folder) - e.g. images folder config before: data/images now: images (this will also point to data/images ) - use 100% picture quality while processing images to not lower given configured jpeg quality for the final image - Authentication: - handle login check earlier to protect other api endpoints #205","title":"3.0.0"},{"location":"changelog/#2100","text":"Bugfixes - check if we're already printing to avoid double printing - deletePhoto: also delete keying and tmp pictures - add back fallback to english if translation is missing New Options - allow to use thumnails for download - Choose thumbnail size: - XS = max 360px - S = max 540px - M = max 900px - L = max 1080px - XL = max 1260px\" - Advanced printing functions #109 : - Auto print function - allow to delay auto print - allow to adjust time \"Started printing! Please wait...\" is visible - allow to trigger print via defined key - options to show the print button independent (e.g. can be only visible on gallery) - Advanced collage options #108 : - Choose collage layout: - 2x2 - 2x4 - 2x4 + background image - Collage: apply frame once after taking or to every picture of the collage General - reordered folder setup - Crowdin translation import - add Polish to supported languages","title":"2.10.0"},{"location":"changelog/#290","text":"Bugfixes - fix saving images on chroma keying New Options - allow to adjust PhotoSwipe (Gallery) config via Adminpanel, also allow to use some PhotoSwipe functions and make more PhotoSwipe settings available (settings explained inside the manual): - Mouse click on image should close the gallery (enable/disable) - Close gallery if clicked outside of the image (enable/disable) - Close picture on page scroll (enable/disable) - Close gallery when dragging vertically and when image is not zoomed (enable/disable) - Show image counter (enable/disable) - Show PhotoSwipe fullscreen button (enable/disable) - Show PhotoSwipe zoom button (enable/disable) - PhotoSwipe history module (enable/disable) - Pinch to close gallery (enable/disable) - Toggle visibility of controls/buttons by tap (enable/disable) - allow to adjust PhotoSwipe background opacity (0-1) - Loop images (enable/disable) - Slide transition effect (enable/disable) - Swiping to change slides (enable/disable) - gallery: add button to delete an image, enable by default - Remote Buzzer Server based on io sockets - Enables a GPIO pin connected hardware button / buzzer for a setup where the display / screen is connected via WLAN / network to the photobooth webserver (e.g. iPad). General - check for supported mime types on API files (print, chromakeying, applyEffects, deletePhoto) - core/chromakeying: Handle print.php API errors - Standalone slideshow & Gallery: - only use pictures if they exist and if they are readable - only use thumbnails if thumbnail exist and is readable, fallback to full-sized images if not - gallery: update picture counter font-size - Crop on print: set image quality to 100% by default - added disk usage page, access via admin panel or at localhost/admin/diskusage.php . - Updated PhotoSwipe - added private/ to .gitignore, can be used e.g. to store own background images - install-raspbian.sh: - check if gvfs-gphoto2-volume-monitor exists - remove unneeded \"sudo\" on yarn installation - make sure webserver is defined - Add missing common \"nodejs\" package - allow to choose between stable and development version - update build dependencies to it's latest versions - Photobooth joined Crowdin as localization manager, join here to translate Photobooth Workflow - github: add pull request template - github: don't allow empty issues, emojis to issue template names","title":"2.9.0"},{"location":"changelog/#280","text":"Bugfixes - fix install-raspbian.sh - add missing units for crop on print values (fixes Issue #91 ) - exit slideshow on close if running - takeCollage: fix button size on small screens General - simple-translator updated to v2.0.2 - updated PHPMailer to latest version Behind the scenes - Add GitHub contribution doc - run yarn eslint once changes to our JavaScripts get pushed to GitHub or if a Pullrequest contains changes on them - run gulp sass once changes to our SCSS files get pushed to GitHub or if a Pullrequest contains changes on them New build pipeline and improved JavaScript (special thanks to Andreas Remdt ) #90 added Prettier to have consistent formatting for both JavaScript & SCSS Support older browser (should fix Issue #47 ) javascript transpiled to es5 to support older browsers (e.g. Safari 9) use \"whatwg-fetch\" polyfill which should enable Safari 9 to use simple translator","title":"2.8.0"},{"location":"changelog/#272","text":"Bugfixes - use htmlentities on input type configuration (allows to load config containing quotes) General changes - Handle -1 & 100% picture quality the same way Changed default config - 100% picture quality by default - Don't print QR Code by default - Allow collage by default - Use collage without interruption by default - Show date below pictures inside Gallery by default - Disable Chromakeying by default","title":"2.7.2"},{"location":"changelog/#271","text":"Bugfixes - Fix taking photo collage General changes - simple-translator updated to v1.2.0","title":"2.7.1"},{"location":"changelog/#270","text":"New options - Add option to use numbered image names - Allow to change picture permissons while taking a photo - usefully if you e.g. like to delete pictures as different user General changes - Add database name to picture name if database changed from default name - Show \"Photobooth Gallery\" if using date formatted images but no date available - Add rpihotspot repo as submodule: - FAQ contains instructions to turn Photobooth into a WIFI Hotspot Bugfixes - Fix \"Cheeeeese\" on Apple devices - Fix loading language resources - Only take Photos if we aren't already","title":"2.7.0"},{"location":"changelog/#261","text":"Bugfixes - Fix video--sensor canvas - Update Style for 5inch Display (800x480px) - Attempt to fix taking Pictures and Collage via defined keys General changes - Add offline FAQ, access directly via http://localhost/manual/faq.html - Update jQuery to v3.5.1","title":"2.6.1"},{"location":"changelog/#260","text":"New options - Automatically reload Photobooth if an error occurs while taking a photo/collage (enabled by default) Bugfixes - Fix FC on Standalone Gallery if a keycode is defined to take a photo/collage - Close gallery if a keycode is defined to take a photo/collage General changes - update PHPMailer to latest version","title":"2.6.0"},{"location":"changelog/#250","text":"New options - buttons inside gallery on bottom (can be put back on top via admin panel) #66 - define SSID used for QR on result page via admin panel #70 Bugfixes - Fix Start Screen on devices with max-width @ 1024px #68 General changes - install-raspbian: install recommended via git (easier update of Photobooth) - mention personal fork additions inside README","title":"2.5.0"},{"location":"changelog/#240","text":"New Options - offline manual with settings explained under localhost/manual (https://github.com/andi34/photobooth/pull/59) - define collage frame seperately (https://github.com/andi34/photobooth/pull/63) - event specific database: You can now rename the picture and email database via Adminpanel. Only pictures inside the defined database are visible via gallery. (https://github.com/andi34/photobooth/pull/61) - Preview/Stream from device cam as background on start page (https://github.com/andi34/photobooth/pull/58)","title":"2.4.0"},{"location":"changelog/#233","text":"Bugfixes - qr code: no need to define width for the text General changes - index: remove unused \"blurred\" class - Remove focus on \"New Picture\" and \"New Collage\" buttons - update-booth.sh: delete old files if exist - result screen: don't reload page after print","title":"2.3.3"},{"location":"changelog/#232","text":"Bugfixes - chromakeying: add favicon, add apple meta tags New options - Allow to rotate preview from URL General changes - Bump jquery from 3.4.1 to 3.5.0 (fixes a security vulnerability) - .gitignore changes: - config folder: ignore everything but not \"config.inc.php\" - ignore the whole css folder instead defining every .css seperately - Down-sized QR code - adjust countdown and cheese colors for default blue-gray theme","title":"2.3.2"},{"location":"changelog/#231","text":"Bugfixes - Fix loading language files if Photobooth is installed in a subfolder General changes - add license files for node modules on packed builds - Installer: Allow using latest prebuild package again","title":"2.3.1"},{"location":"changelog/#230","text":"General changes - Switch to blue-gray color theme by default - Admin panel: switch to range config and use toggles instead checkboxes - Switch to simple-translator for translations, use english as fallback language if a translation is missing. This also gives the possibility to easily translate Photobooth. ( How to update or add translations? ) New Options - Show/Hide button to toggle fullscreen mode Bugfixes - Fix placeholder for preview from stream URL","title":"2.3.0"},{"location":"changelog/#221","text":"New Options - Allow to rotate photo after taking - Allow using a stream from URL at countdown for preview General changes - Remove unused resources/fonts/style.css - language: use correkt ISO 639-1 Language Code for Greek - Optimize picture size on result screen","title":"2.2.1"},{"location":"changelog/#220","text":"General changes - install-raspbian: use Apache2 webserver by default again - added Slideshow option to Gallery - standalone slideshow localhost/slideshow - access login via localhost/login instead localhost/login.php - fix windows compatibility - fix check for image filter - performance improvement (https://github.com/andreknieriem/photobooth/pull/226) - Improved width of admin- and login-panel (partially https://github.com/andreknieriem/photobooth/pull/221) - general bug-fixes if device cam is used to take pictures (https://github.com/andreknieriem/photobooth/pull/220) New options - Option to disable the delete button (https://github.com/andreknieriem/photobooth/pull/228) - Option to keep original images in tmp folder - Configurable image preview while post-processing - Adjustable time a image is shown after capture - Optional EXIF data preservation (disabled by default)","title":"2.2.0"},{"location":"changelog/#210","text":"Optimize performance: - separate trigger and post-process task - if possible use faster method to resize a picture Many new features and options added: - new options: - Make collage countdown timer adjustable - enable/disable real error messages - Allow setting a default filter - allow to disable filter - JPEG quality configurable - enable/disable download button in gallery - Allow defining a background via admin panel: This also gives the possibility to define a livestream URL (e.g. http://192.168.239.77:8081 if motion is used ) to use a livestream as background. - Allow admins to choose what gets deleted at reset (inspired by https://github.com/andreknieriem/photobooth/issues/178) - always: - delete db.txt - optional (but enabled by default): - delete images - delete \"mail-addresses.txt - delete personal config (my.config.inc.php) - Allow defining Photobooth web server IP to fix image download via QR-Code if Photobooth is accessed via localhost/127.0.0.1 - Allow choosing a frame at take pic - Frames and font adjustable - allow protection of admin panel and index with password - allow using device cam to take pictures (save origin (localhost/127.0.0.1 if accessed on server, else HTTPS) needed! - define Photobooth colors using colorpicker - allow more elements to change color - allow defining default font size - optional rounded edges style - admin panel style: - change weeding config to event config and add several new symbols to choose - own printer submenu - Added raspi reset script - allow to abort collage creation - improve installation script - make kiosk mode optional - don't delete /var/www/html without request - use NGINX by default, optional allow to install Apache or Lighttpd - fix printer permissions and install CUPS by default General changes: - README: update formatting and cleanup - Fix undefined placeholder warnings - take picture: red error messages - choose a filter after picture was taken instead before - Display collage count before taking photo - Handle take photo error cases","title":"2.1.0"},{"location":"changelog/#202","text":"fix saving of chroma keying results, style for chroma keying, style of gallery caption, datetime string on images without date info","title":"2.0.2:"},{"location":"changelog/#201","text":"fix deletion of db file, fix config changes via admin settings","title":"2.0.1:"},{"location":"changelog/#200","text":"Overhaul: reorganized all source files, completely overhaul coding New features: gallery standalone (localhost/gallery.php), add button to delete the picture after it was taken and displayed on the screen, change style via admin panel, add trigger keys via config, add option to force the use of a buzzer, add option to enable CUPS button, add option to resize and crop image by center at print, use same printing settings/options for chromakeying as for normal prints, take pictures for collage one after the other with or without interruption, add version checker to admin page, add greek, add option to specify data folder Some more bugfixes and improvements as usually","title":"2.0.0:"},{"location":"changelog/#190","text":"Responsive Layout. Use relative paths to allow running Photobooth in a subfolder. Fix config.json being ignored on chromakeying. Adjustments on blue-gray theme. Some more small adjustments and bugfixes.","title":"1.9.0:"},{"location":"changelog/#183","text":"Adjust scrollbar config and add blue-gray scrollbar theme, allow using Pi Cam for preview and to take pictures, add hidden shortcut for admin settings, add polaroid effect, add print confirmation dialogue","title":"1.8.3:"},{"location":"changelog/#182","text":"Added spanish as supported language, print text on picture feature, optional blue-gray theme, adjust admin panel. Small bugfixes and improvements as always.","title":"1.8.2:"},{"location":"changelog/#181","text":"Small bugfixes and improvements. New Features: enable/disable printing QR-Code, enable/disable photo collage function, enable/disable printing a frame on your picture","title":"1.8.1:"},{"location":"changelog/#180","text":"Update jQuery, GSAP and PhotoSwipe to latest versions, add chroma keying feature (green screen keying)","title":"1.8.0:"},{"location":"changelog/#170","text":"Add possibillity to choose an image filter before taking a picture","title":"1.7.0:"},{"location":"changelog/#163","text":"Add config and instructions to use a GPIO Button to take a picture (address https://github.com/andreknieriem/photobooth/issues/10), translate sucess and error messages while sending images via mail","title":"1.6.3:"},{"location":"changelog/#162","text":"Add wedding specific config, fix gallery settings not being saved from admin panel","title":"1.6.2:"},{"location":"changelog/#161","text":"Add possibillity to disable mobile view, update Kiosk Mode instruction","title":"1.6.1:"},{"location":"changelog/#160","text":"Button to send image via mail (uses PHPMailer ), add use of \"my.config.inc.php\" for personal use to prevent sharing personal data (e.g. E-Mail password and username) on Github by accident","title":"1.6.0:"},{"location":"changelog/#153","text":"Several new options (disable gallery via config, set countdown timer via config, set cheeeese! Timer via config, ability to show the date/time in the caption of the images in the gallery), all config changes now available in admin page, complete french translation, add empty Gallery message, Fullscreen Mode on old iOS-Devices when starting photobooth from homescreen, StartScreen message is an option in config/admin page now, add instructions for Kiosk Mode, should fix #11, and #2, improve instructions in README, some more small Bugfixes and improvements. Merged pull-request #53 which includes updated pull-requests #52 & #54","title":"1.5.3:"},{"location":"changelog/#152","text":"Bugfixing QR-Code from gallery and live-preview position. Merged pull #45","title":"1.5.2:"},{"location":"changelog/#151","text":"Bugfixing","title":"1.5.1:"},{"location":"changelog/#150","text":"Added Options page under /admin. Bugfix for homebtn. Added option for device webcam preview on countdown","title":"1.5.0:"},{"location":"changelog/#140","text":"Merged several pull requests","title":"1.4.0:"},{"location":"changelog/#132","text":"Bugfix for QR Code on result page","title":"1.3.2:"},{"location":"changelog/#131","text":"Merged pull-request #6,#15 and #16","title":"1.3.1:"},{"location":"changelog/#130","text":"Option for QR and Print Butons, code rework, gulp-sass feature enabled","title":"1.3.0:"},{"location":"changelog/#120","text":"Printing feature, code rework, bugfixes","title":"1.2.0:"},{"location":"changelog/#111","text":"Bugix - QR not working on touch devices","title":"1.1.1:"},{"location":"changelog/#110","text":"Added QR Code to Gallery","title":"1.1.0:"},{"location":"changelog/#100","text":"Initial Release","title":"1.0.0:"},{"location":"donation/","text":"Donation If you like our work and consider a donation, we have to tell you that we don't accept any money. We're happy about every contribution to this project and strive to make it better every day. Just get in touch with us on Telegram to say thank you or help us find ways to improve. If you still want to donate money to make us happy: consider a donation to the seal station Norddeich ( donate via Paypal ). Thanks for reading!","title":"Donation"},{"location":"donation/#donation","text":"If you like our work and consider a donation, we have to tell you that we don't accept any money. We're happy about every contribution to this project and strive to make it better every day. Just get in touch with us on Telegram to say thank you or help us find ways to improve. If you still want to donate money to make us happy: consider a donation to the seal station Norddeich ( donate via Paypal ). Thanks for reading!","title":"Donation"},{"location":"faq/","text":"FAQ - Frequently asked questions Is my Camera supported? Some DSLR and Compact Cameras are not supported by this project. Please check for your specific model here . Is Pi Camera supported? Yes it is. If you're able to capture a picture via libcamera-still from terminal you're good to go! Enable camera support using the raspi-config program you will have used when you first set up your Raspberry Pi. sudo raspi-config Use the cursor keys to select and open Interfacing Options, and then select Camera and follow the prompt to enable the camera. Now you need to allow the webserver to use raspistill / libcamera-still . You need add the webserver user to video group and reboot once: sudo gpasswd -a www-data video reboot Once done you need to adjust the configuration. Open the admin panel in your browser localhost/admin and make the following changes: \"Take picture command on Pi OS based on bullseye\": libcamera-still -n -o %s -q 100 -t 1 | echo Done \"Take picture command on Pi OS based on buster\": raspistill -n -o %s -q 100 -t 1 | echo Done Raspistill / libcamera-still does not give any feedback after the picture was taken, workaround for that with \"echo\". (Thanks to Andreas Maier for that information) You've the possibility to add more parameters if needed (define ISO, exposure, white balance etc.). Type raspistill -? / libcamera-still -? in your terminal to get information about possible parameters / settings. I've found a bug, how can I report? Please take a look at the issue page here , if your bug isn't mentioned already you can create a new issue. Please give informations detailed as possible to reproduce and analyse the problem. I've a white page after updating to latest Source, how can I solve this? On v1.9.0 and older: It could be your local config.json file doesn't match latest source. This file is generated if you've used the admin panel to change your config. Remove the file and try again! sudo rm /var/www/html/admin/config.json How do I change the configuration? Open http://localhost/admin in your Webbrowser and change the configuration for your personal needs. Changed options are stored inside config/my.config.inc.php to prevent sharing personal data on Github by accident and to make an update of Photobooth easier. How to change the language? Open http://localhost/admin in your Webbrowser and change the configuration for your personal needs. How to update or add translations? On v2.3.0 and newer: Photobooth joined Crowdin as localization manager, join here to translate Photobooth. Crowdin gives a nice webinterface to make translating easy as possible. If there's different translations for a string, translator can use the vote function on suggested translations. With Crowdin and your help translating we're able to get high-quality translations for all supported languages. Also it's easy to support a wider range of languages! Your language is missing? Don't worry, create a localization request here and we'll add it to the project. On v2.2.0 and older: Edit the language file inside resources/lang/ with your favorite text editor. Once you're done upload your changes and create a pull request . How can I test my current photo settings? Open http://localhost/test/photo.php in your Webbrowser and a you can find a photo that is created with your current settings. How can I test my current collage settings? Open http://localhost/test/collage.php in your Webbrowser and a you can find a collage that is created with your current settings. How can setup a custom collage design? In the collage settings you can select the layout private/collage.json . This references a file with the given name in the photobooth's private folder. This file has to be created manually. Photobooth config must be saved again via Admin panel after private/collage.json was modified! Content of the file is an array of arrays. The outer array defines the number of images, the inner array defines the horizontal position, vertical position, width, height and rotation (in that order) of one image. For calculation of the values the variables x and y get converted to the width and height of the collage respectively, additionally math operations +, -, *, / and () can be used to calculate values. The following example should look exactly like the 1+2 layout (this layout looks more complicated than it is due to the decimal places). [ [ \"0\", \"y * 0.055\", \"1.5 * y * 0.55546\", \"y * 0.55546\", \"10\" ], [ \"x * 0.555\", \"y * 0.055\", \"1.5 * y * 0.40812\", \"y * 0.40812\", \"0\" ], [ \"x * 0.555\", \"y * 0.5368\", \"1.5 * y * 0.40812\", \"y * 0.40812\", \"0\" ] ] [ \"horizontal position\", \"vertical position\", \"width\", \"height\", \"rotation\" ] Please note that if the number of images in a collage design was changed the admin page has to be saved again to calculate the correct number of photos to be used for a collage. Other value changes can be checked on the collage test page immediately with a simple reload - so it's quite easy to configure a layout with the help of http://localhost/test/collage.php . The file collage.json needs to be a well-formed json array and something like a missing quotation or a trailing comma can be enough to make a design fail. If you want to configure additional properties of the collage layout you have to wrap this array in a json object like this: { \"portrait\": false, \"rotate_after_creation\": false, \"width\": \"1800\", \"height\": \"1200\", \"text_custom_style\": true, \"text_font_size\": \"50\", \"text_rotation\": \"10\", \"text_locationx\": \"200\", \"text_locationy\": \"220\", \"text_font_color\": \"#420C09\", \"text_font\": \"/var/www/html/resources/fonts/GreatVibes-Regular.ttf\", \"text_line1\": \"This is\", \"text_line2\": \"a\", \"text_line3\": \"Custom Collage\", \"text_linespace\": \"100\", \"apply_frame\": \"once\", \"frame\": \"/var/www/html/resources/img/frames/frame_stone.png\", \"background\": \"/var/www/html/resources/img/background.png\", \"layout\": [ # the array from above ] } portrait changes the orientation of the collage before the images are added while rotate_after_creation rotates the collage after all images were added. Collage width must be greater than hight to take effect. width and height (optional) can be defined in pixel to change the resolution of the collage. Note: both dimensions must be defined, else the default collage configuration will be used. text_custom_style set to true if you want to apply text, false to disable. The following properties can override the config from Adminpanel, else the text on collage configuration will be used from Photobooth: - text_font_size - text_rotation - text_locationx - text_locationy - text_font_color - text_font (real path to font) - text_line1 (text, can also be empty) - text_line2 (text, can also be empty) - text_line (text, can also be empty) - text_linespace frame (optional) the real path to the frame to be used, else the default collage frame configuration will be used. apply_frame needed if frame is defined. Needs once or always to be defined, else the default collage configuration will be used. background (optional) the real path to the background image to be used. How to keep pictures on my Camera using gphoto2? Add --keep (or --keep-raw to keep only the raw version on camera) option for gphoto2 via admin panel: gphoto2 --capture-image-and-download --keep --filename=%s On some cameras you also need to define the capturetarget because Internal RAM is used to store captured picture. To do this use --set-config capturetarget=X option for gphoto2 (replace \"X\" with the target of your choice): gphoto2 --set-config capturetarget=1 --capture-image-and-download --keep --filename=%s To know which capturetarget needs to be defined you need to run: gphoto2 --get-config capturetarget Example: pi@raspberrypi:~ $ gphoto2 --get-config capturetarget Label: Capture Target Readonly: 0 Type: RADIO Current: Internal RAM Choice: 0 Internal RAM Choice: 1 Memory card Cromakeying is saving without finishing saving Checking the browser console you'll see a 413 Request Entity Too Large error. To fix that you'll have to update your nginx.conf Follow the steps mentioned here: How to Fix NGINX 413 Request Entity Too Large Error Can I use Hardware Button to take a Picture? Yes, there's different ways! Key code using connected HID devices An HID device connected to your hardware can trigger different actions on your device. The HID device must be connected to the device you're accessing Photobooth from! For example use https://keycode.info to find out the key id of the button you like to use. Related configuration: PICTURE section : Key code which triggers a picture: define COLLAGE section : Key code which triggers a collage: define PRINT section : Key code which triggers printing: define Remotebuzzer Hardware Button & LED feature using GPIO connected hardware (Raspberry Pi only) Important: Works if you access Photobooth via http://localhost or http://your-ip-adress , but accessing via the loopback IP (127.0.0.1) does not work! The Hardware Button feature enables to control Photobooth through hardware buttons connected to Raspberry GPIO pins. This works for directly connected screens and as well for WLAN connected screen (i.e. iPad). Configuration takes place in the admin settings - Hardware Button section. Using the Remotebuzzer feature makes the button action taking effect at the same time on all devices accessing Photobooth! The Hardware Button functionality supports two separate modes of operation (select via admin panel): Buttons : Distinct hardware buttons can be connected to distinct GPIOs. Each button will trigger a separate functionality (i.e. take photo). Rotary Encoder : A rotary encoder connected to GPIOs will drive the input on the screen. This enables to use the rotary to scroll through the Photobooth UI buttons, and click to select actions. Both buttons and rotary encoder controls can be combined. Photobooth will watch Button GPIOs for a PIN_DOWN event - so the hardware button needs to pull the GPIO to ground, for to trigger. This requires the GPIOs to be configured in PULLUP mode - always. For the LED Support GPIOs need to be set as OUTPUT. On a Raspberry Pi 5 you need to adjust the GPIO definition via Admin panel (experimental view) to the high-values of the gpio-sysfs: GPIO sysfs Pi 3/4 GPIO sysfs Pi5 PIN 0 (ID_SD) 399 PIN 27 1 (ID_SC) 400 PIN 28 2 401 PIN 3 3 402 PIN 5 4 403 PIN 7 5 404 PIN 29 6 405 PIN 31 7 406 PIN 26 8 407 PIN 24 9 408 PIN 21 10 409 PIN 19 11 410 PIN 23 12 411 PIN 32 13 412 PIN 33 14 413 PIN 8 15 414 PIN 10 16 415 PIN 36 17 416 PIN 11 18 417 PIN 12 19 418 PIN 35 20 419 PIN 38 21 420 PIN 40 22 421 PIN 15 23 422 PIN 16 24 423 PIN 18 25 424 PIN 22 26 425 PIN 37 27 426 PIN 13 Troubleshooting / Debugging Important: For WLAN connected screens you must make sure to set the IP address of the Remote buzzer server in the admin settings. The loopback IP (127.0.0.1) does not work, it has to be the exact IP address of the Remote buzzer Server. Having trouble? - Set Photobooth loglevel to 1 (or above). (admin screen -> general section) - Reload the Photobooth homepage - Check the browser developer console for error logs - Check the server logs for errors at the Debug panel: http://localhost/admin/debugpanel - If there is no errors logged but hardware buttons still do not trigger: - GPIO interrupts might be disabled. Check file /boot/firmware/config.txt (on PiOS Bullseye and prior /boot/config.txt ) and remove / disable the following overlay dtoverlay=gpio-no-irq to enable interrupts for GPIOs. - Button GPIOs may not be configured as PULLUP. The configuration for this is done in fie /boot/firmware/config.txt (on PiOS Bullseye and prior /boot/config.txt ) by adding the GPIO numbers in use as follows - you must reboot the Raspberry Pi in order to activate changes in this setting. **Raspberry Pi 3 / 4** ``` gpio=5,6,7,8,16,17,20,21,22,26,27=pu ``` **Raspberry Pi 5** ``` gpio=404,405,406,407,415,416,419,420,421,425,426,=pu ``` LED GPIOs may not be configured as OUTPUT. The configuration for this is done in fie /boot/firmware/config.txt (on PiOS Bullseye and prior /boot/config.txt ) by adding the GPIO numbers in use as follows - you must reboot the Raspberry Pi in order to activate changes in this setting. Raspberry Pi 3 / 4 gpio=9,10,11,12,18,19,23,24,25=op Raspberry Pi 5 gpio=408,409,410,411,417,418,422,423,424=op - For the shutdown and reboot buttons to work, www-data needs to have the necessary sudo permissions. This is done by the install-photobooth.sh script or can be manually added as sh cat > /etc/sudoers.d/020_www-data-shutdown << EOF www-data ALL=(ALL) NOPASSWD: /sbin/shutdown EOF As of Photobooth v3, hardware button support is fully integrated into Photobooth. Therefore the button.py script has been removed from the distribution. In case you are using this script and for continued backward compatibility please do not activate the Remote Buzzer Hardware Button feature in the admin GUI. Please note that continued backward compatibility is not guaranteed and in case of issues please switch to the integrated functionality. Button Support The server supports up to four connected hardware buttons for the following functionalities: 1) Picture Button Short button press (default <= 2 sec) will trigger a single picture in Photobooth Long button press (default > 2 sec) will trigger a collage in Photobooth Note: If collage is configured with interruption, next button presses will trigger the next collage pictures. If collage is disabled in the admin settings, long button press also triggers a single picture If the collage button is activated (see next), the picture button will never trigger a collage, regardless 2) Collage Button Button press will trigger a collage in Photobooth. Note: If collage is configured with interruption, next button presses will trigger the next collage pictures. If collage is disabled in the admin settings (Collage section), this button will do nothing. 3) Shutdown Button This button will initate a safe system shutdown and halt ( shutdown -h now ). Note: Hold the button for a defined time to initiate the shut down (defaults to 5 seconds). This can be adjusted in the admin settings. The shutdown button will only trigger if there is currently no action in progress in Photobooth (picture, collage). 4) Print Button This button will initiate a print of the current picture either from the results screen or the gallery. 5) Reboot Button This button will initate a safe system shutdown and halt ( shutdown -r now ). 6) Video Button This button will initiate the recording of a short video. 7) Custom Button Button press will trigger a single picture in Photobooth 8) Move2USB Button This button will initiate the copy/move of all pictures an videos (jpg, gif und mp4) to a USB-thumb. In the admin panel you can choose between disabled, copy and move. After any button is triggered, all hardware button remain disabled until the action (picture / collage) completed. Once completed, the hardware buttons re-arms / are active again. The wiring layout is Button Raspberry Picture --- GPIO 21 Collage --- GPIO 20 Custom --- GPIO 5 Video --- GPIO 7 Shutdown --- GPIO 16 Print --- GPIO 26 Reboot --- GPIO 8 Move2USB --- GPIO 6 All --- GND Rotary Encoder A rotary encoder (i.e. KY-040 ) is connected to the GPIOs. Turning the rotary left / right will navigate through the currently visible set of buttons on the screen. Button press on the rotary will activate the currently highlighted button in Photobooth. The wiring layout is Rotary Encoder Raspberry CLK --- GPIO 27 DT --- GPIO 17 BTN --- GPIO 22 + --- 3V3 GND --- GND LED Support LED's can be used to show the current status of remotebuzzer server actions. The wiring layout is LED Raspberry Photolight --- GPIO 25 Picture LED --- GPIO 19 Collage LED --- GPIO 12 Custom LED --- GPIO 24 Video LED --- GPIO 9 Shutdown LED --- GPIO 23 Reboot LED --- GPIO 18 Print LED --- GPIO 10 Move2USB LED --- GPIO 11 Known limitations: Delete Picture: in order to be able to access the Delete button through rotary control, please activate admin setting General -> \"Delete images without confirm request\" The following elements are currently not supported and not accessible through rotary control navigation Full Screen Mode button: Looks like modern browser only allow to change to full screen mode upon user gesture. It seems not possible to change to full-screen using Javascript. Photoswipe download button: Not needed for Rotary Control. (well, if you can come up with a decent use-case, let us know). Remote trigger using Socket.io (experimental) The trigger server controls and coordinates sending commands via socket.io to the photobooth client. Next to a hardware button, any socket.io client can connect to the trigger server over the network, and send a trigger command. This gives full flexibility to integrate other backend systems for trigger signals. Channel: photobooth-socket Commands: start-picture , start-collage , collage-next , start-custom , start-video , print , rotary-cw , rotary-ccw , rotary-btn-press , move2usb Response: completed will be emitted to the client, once photobooth finished the task Remote trigger using simple web requests Note: This feature depends on the experimental Socket.io implementation and needs option Hardware Button - Enable Hardware Buttons to be active. Simple GET requests can be used to trigger single pictures or collages. Those endpoints can be found under http://[Photobooth IP]:[Hardware Button Server Port] where: - [Photobooth IP] needs to match the configured value under General - IP address of the Photobooth web server and - [Hardware Button Server Port] the value from Hardware Button - Enable Hardware Buttons The available endpoints, depending on enabled features and hardware button options, are: - [Base Url]/ - Simple help page with all available endpoints - [Base Url]/commands/start-picture - Triggers a single picture - [Base Url]/commands/start-collage - Triggers a collage - [Base Url]/commands/start-custom - Triggers custom button action - [Base Url]/commands/start-print - Triggers print - [Base Url]/commands/start-video - Triggers a video capture - [Base Url]/commands/reboot-now - Triggers reboot command - [Base Url]/commands/shutdown-now - Triggers shutdown command - [Base Url]/commands/rotary-cw - Focus next element - [Base Url]/commands/rotary-ccw - Focus previous element - [Base Url]/commands/rotary-btn-press - Triggers a click action - [Base Url]/commands/'start-move2usb - Trigger picture move to USB These trigger URLs can be used for example with myStrom WiFi Buttons or Shelly Buttons (untested). Installation steps for myStrom WiFi Button Be sure to connect the button to the same network as the photobooth The button can be configured using the following commands ```sh curl --location -g --request POST http://[Button IP]/api/v1/action/single --data-raw get://[Photobooth IP]:[Hardware Button Server Port]/commands/start-picture curl --location -g --request POST http://[Button IP]/api/v1/action/long --data-raw get://[Photobooth IP]:[Hardware Button Server Port]/commands/start-collage ``` How do I enable Kiosk Mode to automatically start Photobooth in full screen? Autostart on Pi OS Bookworm Modify ~/.config/wayfire.ini as stated. If there is a section [autostart] already, just add the line chromium = ... otherwise insert the complete section. [autostart] chromium = chromium-browser --kiosk --disable-features=Translate --noerrdialogs --disable-infobars --no-first-run --ozone-platform=wayland --touch-events=enabled --start-maximized http://localhost Autostart on Pi OS Bullseye and prior Add the autostart file: sudo nano /etc/xdg/autostart/photobooth.desktop now add the following lines: [Desktop Entry] Version=1.3 Terminal=false Type=Application Name=Photobooth Exec=chromium-browser --noerrdialogs --disable-infobars --disable-features=Translate --no-first-run --check-for-update-interval=31536000 --kiosk http://localhost --touch-events=enabled --use-gl=egl Icon=/var/www/html/resources/img/favicon-96x96.png StartupNotify=false Terminal=false save the file. NOTE: If you have installed Photobooth inside a subdirectory (e.g. to /var/www/html/photobooth ), make sure you adjust the kiosk url (e.g. to http://localhost/photobooth ) and the Icon path (e.g. to /var/www/html/photobooth/resources/img/favicon-96x96.png ). The flag --use-gl=egl might only be needed on a Raspberry Pi to avoid a white browser window on the first start of kiosk mode! If you're facing issues while using Photobooth on a different device, please remove that flag. How to hide the mouse cursor, disable screen blanking and screen saver? Pi OS Bullseye and prior only There are two options to hide the cursor on Pi OS Bullseye and prior. The first approach allows you to show the cursor for a short period of time (helpful if you use a mouse and just want to hide the cursor of some time of inactivity), or to hide it permanently. Solution A To hide the Mouse Cursor we'll use \"unclutter\": sudo apt-get install unclutter Edit the LXDE Autostart Script: sudo nano /etc/xdg/lxsession/LXDE-pi/autostart and add the following lines: # Photobooth # turn off display power management system @xset -dpms # turn off screen blanking @xset s noblank # turn off screen saver @xset s off # Hide mousecursor (3 describes the time after which the cursor should be hidden) @unclutter -idle 3 # Photobooth End Solution B If you are using LightDM as display manager, you can edit /etc/lightdm/lightdm.conf to hide the cursor permanently. Just add xserver-command=X -nocursor to the end of the file. How to use a live stream as background at countdown? There's different ways depending on your needs and personal setup: Preview \"from device cam\" If you access Photobooth on your Raspberry Pi you could use a Raspberry Pi Camera. Raspberry Pi Camera will be detected as \"device cam\" on PiOS bookworm inside Firefox which is shipped with the OS. Admin panel config \"Preview mode\": from device cam Currently there's an issue on PiOS bullseye with the new camera stack which avoids the Pi Cameras being detected as Webcam inside the Browser. Theres nothing we can do against this, hopefully the Pi Foundation finds a solution in future. Note: Preview \"from device cam\" will always use the camera of the device where Photobooth get opened in a Browser (e.g. on a tablet it will always show the tablet camera while on a smartphone it will always show the smartphone camera instead)! Secure origin or exception required! Prefer Secure Origins For Powerful New Features Enabling the Microphone/Camera in Chrome for (Local) Unsecure Origins Admin panel config \"Device cam takes picture\" can be used to take a picture from this preview instead using gphoto / digicamcontrol / raspistill / libcamera-still. Preview from DSLR By now the DSLR handling of Photobooth on Linux was done exclusively using gphoto2 CLI (command line interface). When taking pictures while using preview video from the same camera one command has to be stopped and another one is run after that. The computer terminates the connection to the camera just to reconnect immediately. Because of that there was an ugly video gap and the noises of the camera could be irritating as stopping the video sounded very similar to taking a picture. But most cameras can shoot quickly from live-view. The underlying libery of gphoto2 CLI is libgphoto and it can be accessed using several programming languages. Because of this we can have a python script that handles both preview and taking pictures without terminating the connection to the camera in between. From Photobooth v4.1.0 a preview from DSLR depends on the \"Preview from device cam\" config To use gphoto-python , first execute the install-gphoto-python.sh if you have not already installed \"a service to set up a virtual webcam that gphoto2 can stream video to\" while using the Photobooth installer on initial installation: wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/scripts/gphoto/install-gphoto-python.sh sudo bash install-gphoto-python.sh Change your Photobooth configuration: \"Live Preview \": \"Preview Mode\" : \"from device cam\" \"Commands \": \"Execute start command for preview on take picture/collage\" : if enabled : \"Commands\" : \"Command to generate a live preview\" : python3 cameracontrol.py --bsm if disabled : \"Commands\" : \"Command to generate a live preview\" : python3 cameracontrol.py \"Commands\" : \"Take picture command\" : python3 cameracontrol.py --capture-image-and-download %s Further information : The \"Command to generate a live preview\" is only executed if the \"Preview Mode\" is set to \"from device cam\" . There's no need to define the \"Command to kill live preview\" while using the cameracontrol.py , so just empty that field. The \"Command to kill live preview\" is only executed if defined. If you want to use the DSLR view as background video, enable \"Use stream for live preview as background\" and disable the \"Execute start command for preview on take picture/collage\" setting of Photobooth, which is enabled by default. If you're worried about the sensor of your DSLR but still want to use background video you can use --bsmtime . python3 cameracontrol.py --bsmtime 1 With the parameter --bsmtime you can define a number of minutes after which the camera preview ends. Please note the last image of the preview stays for a few seconds before the background turns to black. Additionally you should add python3 cameracontrol.py to the pre-photo command to restart the preview if it got disabled by the timeout. Restarting the preview takes a few seconds. If you don't want to use the DSLR view as background video enable the Execute start command for preview on take picture/collage setting of Photobooth and make sure --bsm was added to the preview command. python3 cameracontrol.py --bsm If Execute start command for preview on take picture/collage is enabled, the preview video is activated when the countdown for a photo starts and after taking a picture the video is deactivated while waiting for the next photo. As you possibly noticed the params of the script are designed to be similar to the ones of gphoto2 CLI but with some shortcuts like -c for --capture-image-and-download . If you want to know more check out the help of the script by running: python3 /var/www/html/api/cameracontrol.py --help or on subfolder installation of Photobooth python3 /var/www/html/photobooth/api/cameracontrol.py --help If you want to keep your images on the camera you need to use the same capturetarget config as when you were using gphoto CLI (see \"How to keep pictures on my Camera using gphoto2?\"). Set the config on the preview command like this: python3 cameracontrol.py --set-config capturetarget=1 If you get errors from Photobooth and want to get more information try to run the preview command manually. The script is in Photobooth's api folder. To do so end all running services that potentially try to access the camera with killall gphoto2 and killall python3 (if you added any other python scripts manually you might have to be a bit more selective than this command). Finally if you just run venv/bin/python3 cameracontrol.py --capture-image-and-download %s as take picture command without having a preview started it only takes a picture without starting any kind of preview and ends the script immediately after the picture. In theory cameracontrol.py might be able to completely replace gphoto2 CLI for all DSLR connection handling in the future. Note Liveview must be supported for your camera model, check here Give permissions to /dev/video*: sudo gpasswd -a www-data video (this was done automatically if you used the installation script) and reboot once. Requires Photobooth v4.1.0 or later! (Instructions for older versions have been removed from the FAQ, but an FAQ with instructions matching your installed Photobooth version can always be found at http://localhost/faq ). You need to access Photobooth directly via http://localhost , you won't be able to see the preview on a different device (e.g. Tablet). There's a delay of about 3 seconds until the preview starts, to avoid that disable the Execute start command for preview on take picture/collage option to generate a preview in background. This results in a high battery usage and also a general slowdown. Chromium sometimes has trouble, if there is another webcam like bcm2835-isp , it will take it by default instead. Disable other webcams, e.g. sudo rmmod bcm2835-isp . Make sure the countdown is long enough to start the preview, for best user experience the countdown should be set at least to 8 seconds. Troubleshooting In some cases, the v4l2loopback doesn't seem to be working after an update and breaking the preview from DSLR. Run v4l2-ctl --list-devices from your terminal to see if everything is fine. If it works you get the following output: GPhoto2 Webcam (platform:v4l2loopback-000): /dev/video0 If it doesn't work: Cannot open device /dev/video0, exiting If it doesn't work, you might need to compile the v4l2loopback Module yourself by running the following commands: curl -LO https://github.com/umlaeute/v4l2loopback/archive/refs/tags/v0.12.7.tar.gz tar xzf v0.12.7.tar.gz && cd v4l2loopback-0.12.7 make && sudo make install sudo depmod -a sudo modprobe v4l2loopback exclusive_caps=1 card_label=\"GPhoto2 Webcam\" Now again check if everything is fine ( v4l2-ctl --list-devices ). Another problem could be, that your system has secure boot enabled. Disable secure boot in the BIOS and try again. If you're still having trouble feel free to join us at Telegram to get further support. Preview \"from URL\" If you like to have the same preview independent of the device you access Photobooth from: Make sure to have a stream available you can use (e.g. from your Webcam, Smartphone Camera or Raspberry Pi Camera) Admin panel config \"Preview mode\" : from URL Admin panel config \"Preview-URL\" example (add needed IP address instead): url(http://192.168.0.2:8081) Note Do NOT enable \"Device cam takes picture\" in admin panel config! Capture pictures via raspistill or libcamera-still won't work if motion is installed! Requires Photobooth v2.2.1 or later! PiOS bullseye and PiCamera If you like to use the Pi Camera only for preview, you're able to setup motion and use the preview from URL option to use the motion stream. To use the Pi camera for preview and capture on PiOS bullseye you'll also have to setup the Photobooth-app and adjust your preview and capture config: Installation instructions Photobooth integration This can also be used on PiOS bookworm if you like to have a remote preview and capture with a PiCamera. Remote preview and capture workaround for PiOS bullseye This workaround, requires the python mjpeg_http_streamer installed - replace localhost with the desired ip-address as needed: sudo pip install mjpeg-http-streamer TAKE PHOTO CMD: wget http://localhost:8080/snapshot -O %s | echo Done PREVIEW URL: url(http://localhost:8080/stream) PRE-PHOTO CMD: libcamera-vid -t 0 --width 1920 --height 1080 --framerate 30 --inline --codec mjpeg -o - | python3 -m mjpeg_http_streamer -l 0.0.0.0 -p 8080 POST-PHOTO CMD: kill $(ps aux | grep '[l]ibcamera' | awk '{print $2}') Can I use a live stream as background? Yes you can. There's different ways depending on your needs and personal setup: On Photobooth v2.4.0 and newer you can use the option \"Use stream from device cam as background\" inside admin panel. If enabled, a stream from your device cam is used as background on start screen. It's still possible to use preview from your device cam as background on countdown and also still possible to take pictures via device cam or using raspistill / libcamera-still for Pi Camera. You need to change the background URL path via config or admin panel. Replace url(../img/bg.jpg) with your IP-Adress and port (if needed) as URL. Example: sh - url(../img/bg.jpg) + url(http://192.168.0.2:8081) To use a Raspberry Pi Camera module Motion is required, but you won't be able to use the Raspberry Pi Camera for preview at countdown! sh sudo apt-get install -y motion /etc/motion/motion.conf needs to be changed to your needs (e.g. starting on boot, using videoX, resolution, etc.). If you're accessing Photobooth from an external device (e.g. Tablet or Mobile Phone) replace 127.0.0.1 with your IP-Adress. For reference: https://github.com/andreknieriem/photobooth/pull/20 I've trouble setting up E-Mail config. How do I solve my problem? If connection fails some help can be found here , especially gmail needs some special config. Should be obvious but the photobooth must be connected to WIFI/internet to send photos live. Otherwise, tell them to check the box to send them the photo later and it will add everyone's email to a list for you. For gmail you need to generate an app password if you have 2-factor authentication on. Tested working setup: gmail.com Email host adress: smtp.gmail.com Username: *****@gmail.com Port: 587 Security: TLS gmx.de Email host adress: mail.gmx.net Username: *****@gmx.de Port: 587 Security: TLS web.de Email host adress: smtp.web.de Username: ***** (@web.de is not needed in your username) Port: 587 Security: TLS How to only open the gallery to avoid people taking pictures? Open http://localhost/gallery in your browser (you can replace localhost with your IP adress). Chromakeying isn't working if I access the Photobooth page on my Raspberry Pi, but it works if I access Photobooth from an external device (e.g. mobile phone or tablet). How can I solve the problem? Open chrome://flags in your browser. Look for \"Accelerated 2D canvas\" and change it to \"disabled\" . Now restart your Chromium browser. How to adjust the php.ini file? Open http://localhost/phpinfo.php in your browser. Take a look for \"Loaded Configuration File\", you need sudo rights to edit the file. Page will look like this: CLICK ME Automatic picture syncing to USB stick This feature will automatically and in regular intervals copy (sync) new pictures to a plugged-in USB stick. Currently works on Raspberry PI OS only. Use the install-photobooth.sh script to get the operating system setup in place. Note: If you have declined the question to enable the USB sync file backup while running the install-photobooth.sh you need to run the following commands to get the operating system setup done: wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/scripts/enable-usb-sync.sh sudo bash enable-usb-sync.sh -username='<YourUsername>' The target USB device is selected through the admin panel. A USB drive / stick can be identified either by the USB stick label (e.g. photobooth ), the operating system specific USB device name (e.g. /dev/sda1 ) or the USB device system subsystem name (e.g. sda ). The preferred method would be the USB stick label (for use of a single USB stick) or the very specific USB device name, for different USB stick use. The default config will look for a drive with the label photobooth. The script only supports one single USB stick connected at a time Pictures will be synced to the USB stick matched by the pattern, as long as it is mounted (aka USB stick is plugged in) Debugging: Check the server logs for errors at the Debug panel: http://localhost/admin/debugpanel Raspberry Touchpanel DSI simultaneously with HDMI When using a touchscreen on DSI and an HDMI screen simultaneously, the touch input is offset. This is because both monitors are recognized as one screen. The remedy is the following: xinput list remember the device id=[X] of the touchscreen. xinput list-props \"Device Name\" Get the ID in brackets (Y) of Coordinate Transformation Matrix xinput set-prop [X] --type=float [Y] c0 0 c1 0 c2 c3 0 0 1 adjust the coding c0 0 c1 0 c2 c3 0 0 1 with your own data. You can get the values of your screens with the following command: xrandr | grep \\* # xrandr uses \"*\" to identify the screen being used c0 = touch_area_width / total_width (width of touch screen divided by width of both screens) c2 = touch_area_height / total_height (height touch screen divided by height of both screens) c1 = touch_area_x_offset / total_width c3 = touch_area_y_offset / total_height and execute the above command again with your own coding! Example: xinput set-prop 6 --type=float 136 0.3478260869565217 0 0 0.55555555555556 0 0 0 1 Now unfortunately the settings are only valid for the current session. So create the following desktop startup file with your own values: nano ~/.config/autostart/touch.desktop Example: [Desktop Entry] Name=TouchSettingsAutostart Comment=Set up touch screen setting when starting desktop Type=Application ## Adapt command to own values Exec=xinput set-prop 6 --type=float 136 0.3478260869565217 0 0 0 0.55555555555556 0 0 0 1 Terminal=false If you want to use the touchscreen as photobooth and the second monitor for the standalone slideshow for example, open the autostart file: sudo nano /etc/xdg/lxsession/LXDE-pi/autostart and enter/adjust the @chromium-browser entries as followed (adjust the value 1920 to your own resolution and URL if necessary): @chromium-browser --new-window --start-fullscreen --kiosk http://localhost --window-position=1920,0 --user-data-dir=Default @chromium-browser --new-window --start-fullscreen --kiosk http://localhost/slideshow/ --window-position=0,0 --user-data-dir='Profile 1' How to administer CUPS remotely using the web interface? By default the CUPS webinterface can only be accessed via http://localhost:631 from your local machine. To remote access CUPS from other clients you need to run the following commands: sudo cupsctl --remote-any sudo /etc/init.d/cups restart How does the connection to the FTP server work? The connection to the FTP server needs 4 distinct properties. baseURL which is the url where all requests will be made port for ssl connection (the default value is 21) username the username of the user authorized to interact to the FTP server password the password of the user With these four variables you can test the connection to the FTP server to check if everything is alright. The next variables are for the place where you want the pictures to be stored: - baseFolder is the folder of your website (if you have multiple websites living on the server with this property you can choose on which of these the file should be stored) - folder the folder dedicated to the upload of the files - title if you are doing an event you can set the title of the event to create another folder (the system will slugify the string) - appendDate just like a simple blog websites, when articles are uploaded, the date is added to the url as the path. So if you want, the system will create a set of folder with this template: yyyy/mm/dd - upload_thumb if you want you can upload next to the processed picture also the thumbnails In the end the processed picture, and the thumbnails, will be uploaded in the folder according to these variables. If you have a website, you can use the following variables to generate the qr codes that will point to the photos uploaded to the ftp server - useForQr to enable this functionality - website accessible from the internet, it will be the base of the qr code link - urlTemplate starting from the previous set of variables, you have to define the template which will be used to generate the qrcode link (each variable should be written whit '%' before e.g. %website/%folder/%date) Last but not least you can upload a php file on the title folder on the FTP server to create an online gallery which is updated with every new picture (and collage) taken. The variable to manage this feature are the following: - create_webpage to enable this functionality - template_location which is the location of the index.php file, which is formatted with the title of the current event and uploaded to the FTP server In the end you can enable the delete functionality that will delete photos (and collages) from the ftp server when they are deleted from the photobooth gallery (no admin reset) I get the error message \"Something went wrong.\" while taking a picure, what can i do? There's different reasons if you get the error \"Something went wrong. Please try it again. Photobooth reloads automatically.\" while taking an image. First of all, please set the Loglevel to 2 via admin panel (GENERAL section, http://localhost/admin ) and try again. You'll still see the error message, but we make sure to log enough information to see what's wrong. Now open the Debug panel ( http://localhost/admin/debugpanel ) and check the Photobooth log for error messages. You should see something like this: 2023-01-03T08:34:37+01:00: Array ( [error] => Take picture command returned an error code [cmd] => gphoto2 --capture-image-and-download --filename=/var/www/html/data/tmp/20230103_083437.jpg 2>&1 [returnValue] => 1 [output] => Array ( [0] => [1] => *** Error *** [2] => Could not detect any camera [3] => *** Error (-105: 'Unknown model') *** [4] => [5] => For debugging messages, please use the --debug option. [6] => Debugging messages may help finding a solution to your problem. [7] => If you intend to send any error or debug messages to the gphoto [8] => developer mailing list , please run [9] => gphoto2 as follows: [10] => [11] => env LANG=C gphoto2 --debug --debug-logfile=my-logfile.txt --capture-image-and-download --filename=/var/www/html/testa/data/tmp/20230103_083437.jpg [12] => [13] => Please make sure there is sufficient quoting around the arguments. [14] => ) [php] => takePic.php ) Most of the time the error messages are self explained (in our case no camera was detected, the cable wasn't plugged in), if you're still having trouble you can check the following information about possible known problems. GPhoto2 troubleshooting Please note, that GPhoto2 is an own software we can use to take images via Photobooth. The full documentation can be found at http://www.gphoto.org/doc/ . Here are some general known problems you should know about: Make sure \"Image capture\" is supported by GPhoto2 for your camera ( http://gphoto.org/proj/libgphoto2/support.php ) Try another camera mode. - Sometimes not every camera mode is supported by GPhoto2. Make sure your camera is set to \"JPEG/JPG only\", Photobooth isn't able to use RAW images. - Reducing the image quality on your camera can have a positive effect to the performance - especially on low end hardware like a Raspberry Pi. Disable the auto-focus. - GPhoto2 won't be able to take a picture if your camera can't find a focus. Turn off the WiFi of your camera (if available). - There might be issues on the connection if WiFi is turned on on your camera. Make sure a SD-Card is inserted into the camera. - GPhoto2 sometimes has trouble to trigger an image if no SD-Card is inserted. Make sure pictures aren't taken into the RAM of the camera. - Sometimes we need to define the Capturetarget to the memory card manually. To find out the right capturetarget type the following into your terminal and press enter: gphoto2 --get-config capturetarget Your output will look like this: pi@raspberrypi:~ $ gphoto2 --get-config capturetarget Label: Capture Target Readonly: 0 Type: RADIO Current: Internal RAM Choice: 0 Internal RAM Choice: 1 Memory card <--- !!! Adjust your take picture command via adminpanel accordingly: gphoto2 --set-config capturetarget=1 --capture-image-and-download --filename=%s Hardware issues Enough power on the USB port? Defect USB cable? Permission problem It's easy to check if there's an issue with the permissions. The Photobooth installer takes care about needed permissions and shouldn't be a thing. Sometimes permission can be wrong after an update. Open your terminal and try to take an image: gphoto2 --capture-image-and-download --filename=test.jpg Everything works? No : Please again read previous information. Yes : let's test further! Now try to take an image as \"www-data\" User: cd /var/www/html sudo -u www-data -s gphoto2 --capture-image-and-download --filename=test.jpg Everything working? Yes : Check your Photobooth configuration for issues. Maybe reset the config to restore the default settings. No : It looks like there's an issue with the permissions! But we can fix that! Set the ownership for Photobooth to the \"www-data\" User: sudo chown -R www-data:www-data /var/www/ Also make sure the \"www-data\" User is able to access the USB device (reboot required!): sudo gpasswd -a www-data plugdev reboot Everything working? No : The camera might be claimed by a different process. The gvfs-gphoto2-volume-monitor is known to cause trouble and shouldn't be executed. The Photobooth installer should take care about it, but maybe something went wrong and we should change it manually (reboot required!): sudo chmod -x /usr/lib/gvfs/gvfs-gphoto2-volume-monitor reboot Does it work? No : Try updating gphoto2 and libgphoto. Run the following commands to install latest development version of gphoto2 and libgphoto: wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/.env chmod +x gphoto2-updater.sh sudo ./gphoto2-updater.sh --development sudo chmod -x /usr/lib/gvfs/gvfs-gphoto2-volume-monitor reboot Now try again! Does it work? No : Sorry, we're am almost out of ideas! Please check the special notes below and feel free to contact us at Telegram if you still have issues. Special notes Canon EOS 1300D To capture an image gphoto2 might need some time. Add \u2013wait-event=300ms to the take picture CMD. Your take picture CMD should look like this: gphoto2 \u2013wait-event=300ms \u2013capture-image-and-download \u2013filename=%s Source: https://www.dennis-henss.de/2020/01/25/raspberry-pi-fotobox-fuer-hochzeiten-und-geburtstage/#comment-1211 How to upload pictures to a remote server after picture has been taken? Goal: After a picture is taken with the photobox upload it automatically to a remote server. Usecase: You have a remote server (e.g. with your website on it) or another Raspberry Pi to which you\u2019d like instantly synchronizing your taken pictures. Also you could upload the pictures to a remote server and make them available through the QR code over the internet. By this you would not require people to access a local Wifi to download the picture from your local device which is running your Photobox. How to: You should have a remote server with an SSH login. Know your username and password: (e.g.: [username.strato-hosting.eu]@ssh.strato.de) We will be using the Post-photo script / command of the Photobox which you can find in the admin panel in the section Commands. The command is being executed after the picture has been taken and gets the picture\u2019s name as an attribute. Command: scp /var/www/html/photobooth/data/images/%s [username@remotehost]:/[path_to_where_you_want_to_store_the_pictures_on_the_remote_host] If we keep it like that the remote server would require the source server to type in a password each time a picture is being copied to the remote server. An SSH connection using a private/public SSH key needs to be established: Create a public/private key-pair for the www-data user on the source machine (why for that user? The www-data user is executing the Post-photo script/command in the background) \u2013 Do not enter a passphrase when prompted. sudo -u www-data ssh-keygen -t rsa Copy the public key to the remote (destination) server sudo -u www-data ssh-copy-id [username@remotehost] You can now manually test whether the connection works. Try to copy anything to the remote server and change the file in the below example to a file that you actually have on your source machine. You shouldn\u2019t be prompted with a password, but the copy and transfer should complete successfully just with the following command. If that is going to be successful, copying your pictures automatically should work now. sudo -u www-data scp /var/www/html/photobooth/data/images/20230129_125148.jpg [username@remotehost]:/[path_to_where_you_want_to_store_the_pictures] You can now use the URL with which you can access your remote server from the internet and paste it into the QR code field in the Photobox admin panel. Now using the QR code your pictures can be downloaded from your remote server. How to use the image randomizer To use the image randomizer images must be placed inside private/images/{folderName}. For hassle-free (ssh/sftp-free) upload, you may want to use the integrated images uploader: http://localhost/admin/upload . Use for PICTURE FRAMES: Upload / Copy all the (transparent) frames you want to private/images/{FrameFolder} Enable picture_take_frame specify picture_frame url : http://localhost/api/randomImg.php?dir={FrameFolder} Use for COLLAGE FRAMES: Upload / Copy all the (transparent) frames you want to private/images/{FrameFolder} Enable collage_take_frame (always or once) specify collage_frame url : http://localhost/api/randomImg.php?dir={FrameFolder} Use for BACKGROUNDS: Upload / Copy all the backgrounds you want to private/images/{BgFolder} specify collage_background url : http://localhost/api/randomImg.php?dir={BgFolder} NOTES: - Replace \"localhost\" with your IP-Adress. - Same thing can be applied for collage_placeholderpath so a random holder image takes place. - You can specify a diffrent {FrameFolder} for collage frames if needed.","title":"FAQ"},{"location":"faq/#faq-frequently-asked-questions","text":"","title":"FAQ - Frequently asked questions"},{"location":"faq/#is-my-camera-supported","text":"Some DSLR and Compact Cameras are not supported by this project. Please check for your specific model here .","title":"Is my Camera supported?"},{"location":"faq/#is-pi-camera-supported","text":"Yes it is. If you're able to capture a picture via libcamera-still from terminal you're good to go! Enable camera support using the raspi-config program you will have used when you first set up your Raspberry Pi. sudo raspi-config Use the cursor keys to select and open Interfacing Options, and then select Camera and follow the prompt to enable the camera. Now you need to allow the webserver to use raspistill / libcamera-still . You need add the webserver user to video group and reboot once: sudo gpasswd -a www-data video reboot Once done you need to adjust the configuration. Open the admin panel in your browser localhost/admin and make the following changes: \"Take picture command on Pi OS based on bullseye\": libcamera-still -n -o %s -q 100 -t 1 | echo Done \"Take picture command on Pi OS based on buster\": raspistill -n -o %s -q 100 -t 1 | echo Done Raspistill / libcamera-still does not give any feedback after the picture was taken, workaround for that with \"echo\". (Thanks to Andreas Maier for that information) You've the possibility to add more parameters if needed (define ISO, exposure, white balance etc.). Type raspistill -? / libcamera-still -? in your terminal to get information about possible parameters / settings.","title":"Is Pi Camera supported?"},{"location":"faq/#ive-found-a-bug-how-can-i-report","text":"Please take a look at the issue page here , if your bug isn't mentioned already you can create a new issue. Please give informations detailed as possible to reproduce and analyse the problem.","title":"I've found a bug, how can I report?"},{"location":"faq/#ive-a-white-page-after-updating-to-latest-source-how-can-i-solve-this","text":"On v1.9.0 and older: It could be your local config.json file doesn't match latest source. This file is generated if you've used the admin panel to change your config. Remove the file and try again! sudo rm /var/www/html/admin/config.json","title":"I've a white page after updating to latest Source, how can I solve this?"},{"location":"faq/#how-do-i-change-the-configuration","text":"Open http://localhost/admin in your Webbrowser and change the configuration for your personal needs. Changed options are stored inside config/my.config.inc.php to prevent sharing personal data on Github by accident and to make an update of Photobooth easier.","title":"How do I change the configuration?"},{"location":"faq/#how-to-change-the-language","text":"Open http://localhost/admin in your Webbrowser and change the configuration for your personal needs.","title":"How to change the language?"},{"location":"faq/#how-to-update-or-add-translations","text":"","title":"How to update or add translations?"},{"location":"faq/#on-v230-and-newer","text":"Photobooth joined Crowdin as localization manager, join here to translate Photobooth. Crowdin gives a nice webinterface to make translating easy as possible. If there's different translations for a string, translator can use the vote function on suggested translations. With Crowdin and your help translating we're able to get high-quality translations for all supported languages. Also it's easy to support a wider range of languages! Your language is missing? Don't worry, create a localization request here and we'll add it to the project.","title":"On v2.3.0 and newer:"},{"location":"faq/#on-v220-and-older","text":"Edit the language file inside resources/lang/ with your favorite text editor. Once you're done upload your changes and create a pull request .","title":"On v2.2.0 and older:"},{"location":"faq/#how-can-i-test-my-current-photo-settings","text":"Open http://localhost/test/photo.php in your Webbrowser and a you can find a photo that is created with your current settings.","title":"How can I test my current photo settings?"},{"location":"faq/#how-can-i-test-my-current-collage-settings","text":"Open http://localhost/test/collage.php in your Webbrowser and a you can find a collage that is created with your current settings.","title":"How can I test my current collage settings?"},{"location":"faq/#how-can-setup-a-custom-collage-design","text":"In the collage settings you can select the layout private/collage.json . This references a file with the given name in the photobooth's private folder. This file has to be created manually. Photobooth config must be saved again via Admin panel after private/collage.json was modified! Content of the file is an array of arrays. The outer array defines the number of images, the inner array defines the horizontal position, vertical position, width, height and rotation (in that order) of one image. For calculation of the values the variables x and y get converted to the width and height of the collage respectively, additionally math operations +, -, *, / and () can be used to calculate values. The following example should look exactly like the 1+2 layout (this layout looks more complicated than it is due to the decimal places). [ [ \"0\", \"y * 0.055\", \"1.5 * y * 0.55546\", \"y * 0.55546\", \"10\" ], [ \"x * 0.555\", \"y * 0.055\", \"1.5 * y * 0.40812\", \"y * 0.40812\", \"0\" ], [ \"x * 0.555\", \"y * 0.5368\", \"1.5 * y * 0.40812\", \"y * 0.40812\", \"0\" ] ] [ \"horizontal position\", \"vertical position\", \"width\", \"height\", \"rotation\" ] Please note that if the number of images in a collage design was changed the admin page has to be saved again to calculate the correct number of photos to be used for a collage. Other value changes can be checked on the collage test page immediately with a simple reload - so it's quite easy to configure a layout with the help of http://localhost/test/collage.php . The file collage.json needs to be a well-formed json array and something like a missing quotation or a trailing comma can be enough to make a design fail. If you want to configure additional properties of the collage layout you have to wrap this array in a json object like this: { \"portrait\": false, \"rotate_after_creation\": false, \"width\": \"1800\", \"height\": \"1200\", \"text_custom_style\": true, \"text_font_size\": \"50\", \"text_rotation\": \"10\", \"text_locationx\": \"200\", \"text_locationy\": \"220\", \"text_font_color\": \"#420C09\", \"text_font\": \"/var/www/html/resources/fonts/GreatVibes-Regular.ttf\", \"text_line1\": \"This is\", \"text_line2\": \"a\", \"text_line3\": \"Custom Collage\", \"text_linespace\": \"100\", \"apply_frame\": \"once\", \"frame\": \"/var/www/html/resources/img/frames/frame_stone.png\", \"background\": \"/var/www/html/resources/img/background.png\", \"layout\": [ # the array from above ] } portrait changes the orientation of the collage before the images are added while rotate_after_creation rotates the collage after all images were added. Collage width must be greater than hight to take effect. width and height (optional) can be defined in pixel to change the resolution of the collage. Note: both dimensions must be defined, else the default collage configuration will be used. text_custom_style set to true if you want to apply text, false to disable. The following properties can override the config from Adminpanel, else the text on collage configuration will be used from Photobooth: - text_font_size - text_rotation - text_locationx - text_locationy - text_font_color - text_font (real path to font) - text_line1 (text, can also be empty) - text_line2 (text, can also be empty) - text_line (text, can also be empty) - text_linespace frame (optional) the real path to the frame to be used, else the default collage frame configuration will be used. apply_frame needed if frame is defined. Needs once or always to be defined, else the default collage configuration will be used. background (optional) the real path to the background image to be used.","title":"How can setup a custom collage design?"},{"location":"faq/#how-to-keep-pictures-on-my-camera-using-gphoto2","text":"Add --keep (or --keep-raw to keep only the raw version on camera) option for gphoto2 via admin panel: gphoto2 --capture-image-and-download --keep --filename=%s On some cameras you also need to define the capturetarget because Internal RAM is used to store captured picture. To do this use --set-config capturetarget=X option for gphoto2 (replace \"X\" with the target of your choice): gphoto2 --set-config capturetarget=1 --capture-image-and-download --keep --filename=%s To know which capturetarget needs to be defined you need to run: gphoto2 --get-config capturetarget Example: pi@raspberrypi:~ $ gphoto2 --get-config capturetarget Label: Capture Target Readonly: 0 Type: RADIO Current: Internal RAM Choice: 0 Internal RAM Choice: 1 Memory card","title":"How to keep pictures on my Camera using gphoto2?"},{"location":"faq/#cromakeying-is-saving-without-finishing-saving","text":"Checking the browser console you'll see a 413 Request Entity Too Large error. To fix that you'll have to update your nginx.conf Follow the steps mentioned here: How to Fix NGINX 413 Request Entity Too Large Error","title":"Cromakeying is saving without finishing saving"},{"location":"faq/#can-i-use-hardware-button-to-take-a-picture","text":"Yes, there's different ways!","title":"Can I use Hardware Button to take a Picture?"},{"location":"faq/#key-code-using-connected-hid-devices","text":"An HID device connected to your hardware can trigger different actions on your device. The HID device must be connected to the device you're accessing Photobooth from! For example use https://keycode.info to find out the key id of the button you like to use. Related configuration: PICTURE section : Key code which triggers a picture: define COLLAGE section : Key code which triggers a collage: define PRINT section : Key code which triggers printing: define","title":"Key code using connected HID devices"},{"location":"faq/#remotebuzzer-hardware-button-led-feature-using-gpio-connected-hardware-raspberry-pi-only","text":"Important: Works if you access Photobooth via http://localhost or http://your-ip-adress , but accessing via the loopback IP (127.0.0.1) does not work! The Hardware Button feature enables to control Photobooth through hardware buttons connected to Raspberry GPIO pins. This works for directly connected screens and as well for WLAN connected screen (i.e. iPad). Configuration takes place in the admin settings - Hardware Button section. Using the Remotebuzzer feature makes the button action taking effect at the same time on all devices accessing Photobooth! The Hardware Button functionality supports two separate modes of operation (select via admin panel): Buttons : Distinct hardware buttons can be connected to distinct GPIOs. Each button will trigger a separate functionality (i.e. take photo). Rotary Encoder : A rotary encoder connected to GPIOs will drive the input on the screen. This enables to use the rotary to scroll through the Photobooth UI buttons, and click to select actions. Both buttons and rotary encoder controls can be combined. Photobooth will watch Button GPIOs for a PIN_DOWN event - so the hardware button needs to pull the GPIO to ground, for to trigger. This requires the GPIOs to be configured in PULLUP mode - always. For the LED Support GPIOs need to be set as OUTPUT. On a Raspberry Pi 5 you need to adjust the GPIO definition via Admin panel (experimental view) to the high-values of the gpio-sysfs: GPIO sysfs Pi 3/4 GPIO sysfs Pi5 PIN 0 (ID_SD) 399 PIN 27 1 (ID_SC) 400 PIN 28 2 401 PIN 3 3 402 PIN 5 4 403 PIN 7 5 404 PIN 29 6 405 PIN 31 7 406 PIN 26 8 407 PIN 24 9 408 PIN 21 10 409 PIN 19 11 410 PIN 23 12 411 PIN 32 13 412 PIN 33 14 413 PIN 8 15 414 PIN 10 16 415 PIN 36 17 416 PIN 11 18 417 PIN 12 19 418 PIN 35 20 419 PIN 38 21 420 PIN 40 22 421 PIN 15 23 422 PIN 16 24 423 PIN 18 25 424 PIN 22 26 425 PIN 37 27 426 PIN 13","title":"Remotebuzzer Hardware Button &amp; LED feature using GPIO connected hardware (Raspberry Pi only)"},{"location":"faq/#troubleshooting-debugging","text":"Important: For WLAN connected screens you must make sure to set the IP address of the Remote buzzer server in the admin settings. The loopback IP (127.0.0.1) does not work, it has to be the exact IP address of the Remote buzzer Server. Having trouble? - Set Photobooth loglevel to 1 (or above). (admin screen -> general section) - Reload the Photobooth homepage - Check the browser developer console for error logs - Check the server logs for errors at the Debug panel: http://localhost/admin/debugpanel - If there is no errors logged but hardware buttons still do not trigger: - GPIO interrupts might be disabled. Check file /boot/firmware/config.txt (on PiOS Bullseye and prior /boot/config.txt ) and remove / disable the following overlay dtoverlay=gpio-no-irq to enable interrupts for GPIOs. - Button GPIOs may not be configured as PULLUP. The configuration for this is done in fie /boot/firmware/config.txt (on PiOS Bullseye and prior /boot/config.txt ) by adding the GPIO numbers in use as follows - you must reboot the Raspberry Pi in order to activate changes in this setting. **Raspberry Pi 3 / 4** ``` gpio=5,6,7,8,16,17,20,21,22,26,27=pu ``` **Raspberry Pi 5** ``` gpio=404,405,406,407,415,416,419,420,421,425,426,=pu ``` LED GPIOs may not be configured as OUTPUT. The configuration for this is done in fie /boot/firmware/config.txt (on PiOS Bullseye and prior /boot/config.txt ) by adding the GPIO numbers in use as follows - you must reboot the Raspberry Pi in order to activate changes in this setting. Raspberry Pi 3 / 4 gpio=9,10,11,12,18,19,23,24,25=op Raspberry Pi 5 gpio=408,409,410,411,417,418,422,423,424=op - For the shutdown and reboot buttons to work, www-data needs to have the necessary sudo permissions. This is done by the install-photobooth.sh script or can be manually added as sh cat > /etc/sudoers.d/020_www-data-shutdown << EOF www-data ALL=(ALL) NOPASSWD: /sbin/shutdown EOF As of Photobooth v3, hardware button support is fully integrated into Photobooth. Therefore the button.py script has been removed from the distribution. In case you are using this script and for continued backward compatibility please do not activate the Remote Buzzer Hardware Button feature in the admin GUI. Please note that continued backward compatibility is not guaranteed and in case of issues please switch to the integrated functionality.","title":"Troubleshooting / Debugging"},{"location":"faq/#button-support","text":"The server supports up to four connected hardware buttons for the following functionalities: 1) Picture Button Short button press (default <= 2 sec) will trigger a single picture in Photobooth Long button press (default > 2 sec) will trigger a collage in Photobooth Note: If collage is configured with interruption, next button presses will trigger the next collage pictures. If collage is disabled in the admin settings, long button press also triggers a single picture If the collage button is activated (see next), the picture button will never trigger a collage, regardless 2) Collage Button Button press will trigger a collage in Photobooth. Note: If collage is configured with interruption, next button presses will trigger the next collage pictures. If collage is disabled in the admin settings (Collage section), this button will do nothing. 3) Shutdown Button This button will initate a safe system shutdown and halt ( shutdown -h now ). Note: Hold the button for a defined time to initiate the shut down (defaults to 5 seconds). This can be adjusted in the admin settings. The shutdown button will only trigger if there is currently no action in progress in Photobooth (picture, collage). 4) Print Button This button will initiate a print of the current picture either from the results screen or the gallery. 5) Reboot Button This button will initate a safe system shutdown and halt ( shutdown -r now ). 6) Video Button This button will initiate the recording of a short video. 7) Custom Button Button press will trigger a single picture in Photobooth 8) Move2USB Button This button will initiate the copy/move of all pictures an videos (jpg, gif und mp4) to a USB-thumb. In the admin panel you can choose between disabled, copy and move. After any button is triggered, all hardware button remain disabled until the action (picture / collage) completed. Once completed, the hardware buttons re-arms / are active again. The wiring layout is Button Raspberry Picture --- GPIO 21 Collage --- GPIO 20 Custom --- GPIO 5 Video --- GPIO 7 Shutdown --- GPIO 16 Print --- GPIO 26 Reboot --- GPIO 8 Move2USB --- GPIO 6 All --- GND","title":"Button Support"},{"location":"faq/#rotary-encoder","text":"A rotary encoder (i.e. KY-040 ) is connected to the GPIOs. Turning the rotary left / right will navigate through the currently visible set of buttons on the screen. Button press on the rotary will activate the currently highlighted button in Photobooth. The wiring layout is Rotary Encoder Raspberry CLK --- GPIO 27 DT --- GPIO 17 BTN --- GPIO 22 + --- 3V3 GND --- GND","title":"Rotary Encoder"},{"location":"faq/#led-support","text":"LED's can be used to show the current status of remotebuzzer server actions. The wiring layout is LED Raspberry Photolight --- GPIO 25 Picture LED --- GPIO 19 Collage LED --- GPIO 12 Custom LED --- GPIO 24 Video LED --- GPIO 9 Shutdown LED --- GPIO 23 Reboot LED --- GPIO 18 Print LED --- GPIO 10 Move2USB LED --- GPIO 11","title":"LED Support"},{"location":"faq/#known-limitations","text":"Delete Picture: in order to be able to access the Delete button through rotary control, please activate admin setting General -> \"Delete images without confirm request\" The following elements are currently not supported and not accessible through rotary control navigation Full Screen Mode button: Looks like modern browser only allow to change to full screen mode upon user gesture. It seems not possible to change to full-screen using Javascript. Photoswipe download button: Not needed for Rotary Control. (well, if you can come up with a decent use-case, let us know).","title":"Known limitations:"},{"location":"faq/#remote-trigger-using-socketio-experimental","text":"The trigger server controls and coordinates sending commands via socket.io to the photobooth client. Next to a hardware button, any socket.io client can connect to the trigger server over the network, and send a trigger command. This gives full flexibility to integrate other backend systems for trigger signals. Channel: photobooth-socket Commands: start-picture , start-collage , collage-next , start-custom , start-video , print , rotary-cw , rotary-ccw , rotary-btn-press , move2usb Response: completed will be emitted to the client, once photobooth finished the task","title":"Remote trigger using Socket.io (experimental)"},{"location":"faq/#remote-trigger-using-simple-web-requests","text":"Note: This feature depends on the experimental Socket.io implementation and needs option Hardware Button - Enable Hardware Buttons to be active. Simple GET requests can be used to trigger single pictures or collages. Those endpoints can be found under http://[Photobooth IP]:[Hardware Button Server Port] where: - [Photobooth IP] needs to match the configured value under General - IP address of the Photobooth web server and - [Hardware Button Server Port] the value from Hardware Button - Enable Hardware Buttons The available endpoints, depending on enabled features and hardware button options, are: - [Base Url]/ - Simple help page with all available endpoints - [Base Url]/commands/start-picture - Triggers a single picture - [Base Url]/commands/start-collage - Triggers a collage - [Base Url]/commands/start-custom - Triggers custom button action - [Base Url]/commands/start-print - Triggers print - [Base Url]/commands/start-video - Triggers a video capture - [Base Url]/commands/reboot-now - Triggers reboot command - [Base Url]/commands/shutdown-now - Triggers shutdown command - [Base Url]/commands/rotary-cw - Focus next element - [Base Url]/commands/rotary-ccw - Focus previous element - [Base Url]/commands/rotary-btn-press - Triggers a click action - [Base Url]/commands/'start-move2usb - Trigger picture move to USB These trigger URLs can be used for example with myStrom WiFi Buttons or Shelly Buttons (untested).","title":"Remote trigger using simple web requests"},{"location":"faq/#installation-steps-for-mystrom-wifi-button","text":"Be sure to connect the button to the same network as the photobooth The button can be configured using the following commands ```sh curl --location -g --request POST http://[Button IP]/api/v1/action/single --data-raw get://[Photobooth IP]:[Hardware Button Server Port]/commands/start-picture curl --location -g --request POST http://[Button IP]/api/v1/action/long --data-raw get://[Photobooth IP]:[Hardware Button Server Port]/commands/start-collage ```","title":"Installation steps for myStrom WiFi Button"},{"location":"faq/#how-do-i-enable-kiosk-mode-to-automatically-start-photobooth-in-full-screen","text":"","title":"How do I enable Kiosk Mode to automatically start Photobooth in full screen?"},{"location":"faq/#autostart-on-pi-os-bookworm","text":"Modify ~/.config/wayfire.ini as stated. If there is a section [autostart] already, just add the line chromium = ... otherwise insert the complete section. [autostart] chromium = chromium-browser --kiosk --disable-features=Translate --noerrdialogs --disable-infobars --no-first-run --ozone-platform=wayland --touch-events=enabled --start-maximized http://localhost","title":"Autostart on Pi OS Bookworm"},{"location":"faq/#autostart-on-pi-os-bullseye-and-prior","text":"Add the autostart file: sudo nano /etc/xdg/autostart/photobooth.desktop now add the following lines: [Desktop Entry] Version=1.3 Terminal=false Type=Application Name=Photobooth Exec=chromium-browser --noerrdialogs --disable-infobars --disable-features=Translate --no-first-run --check-for-update-interval=31536000 --kiosk http://localhost --touch-events=enabled --use-gl=egl Icon=/var/www/html/resources/img/favicon-96x96.png StartupNotify=false Terminal=false save the file. NOTE: If you have installed Photobooth inside a subdirectory (e.g. to /var/www/html/photobooth ), make sure you adjust the kiosk url (e.g. to http://localhost/photobooth ) and the Icon path (e.g. to /var/www/html/photobooth/resources/img/favicon-96x96.png ). The flag --use-gl=egl might only be needed on a Raspberry Pi to avoid a white browser window on the first start of kiosk mode! If you're facing issues while using Photobooth on a different device, please remove that flag.","title":"Autostart on Pi OS Bullseye and prior"},{"location":"faq/#how-to-hide-the-mouse-cursor-disable-screen-blanking-and-screen-saver","text":"Pi OS Bullseye and prior only There are two options to hide the cursor on Pi OS Bullseye and prior. The first approach allows you to show the cursor for a short period of time (helpful if you use a mouse and just want to hide the cursor of some time of inactivity), or to hide it permanently.","title":"How to hide the mouse cursor, disable screen blanking and screen saver?"},{"location":"faq/#solution-a","text":"To hide the Mouse Cursor we'll use \"unclutter\": sudo apt-get install unclutter Edit the LXDE Autostart Script: sudo nano /etc/xdg/lxsession/LXDE-pi/autostart and add the following lines: # Photobooth # turn off display power management system @xset -dpms # turn off screen blanking @xset s noblank # turn off screen saver @xset s off # Hide mousecursor (3 describes the time after which the cursor should be hidden) @unclutter -idle 3 # Photobooth End","title":"Solution A"},{"location":"faq/#solution-b","text":"If you are using LightDM as display manager, you can edit /etc/lightdm/lightdm.conf to hide the cursor permanently. Just add xserver-command=X -nocursor to the end of the file.","title":"Solution B"},{"location":"faq/#how-to-use-a-live-stream-as-background-at-countdown","text":"There's different ways depending on your needs and personal setup:","title":"How to use a live stream as background at countdown?"},{"location":"faq/#preview-from-device-cam","text":"If you access Photobooth on your Raspberry Pi you could use a Raspberry Pi Camera. Raspberry Pi Camera will be detected as \"device cam\" on PiOS bookworm inside Firefox which is shipped with the OS. Admin panel config \"Preview mode\": from device cam Currently there's an issue on PiOS bullseye with the new camera stack which avoids the Pi Cameras being detected as Webcam inside the Browser. Theres nothing we can do against this, hopefully the Pi Foundation finds a solution in future. Note: Preview \"from device cam\" will always use the camera of the device where Photobooth get opened in a Browser (e.g. on a tablet it will always show the tablet camera while on a smartphone it will always show the smartphone camera instead)! Secure origin or exception required! Prefer Secure Origins For Powerful New Features Enabling the Microphone/Camera in Chrome for (Local) Unsecure Origins Admin panel config \"Device cam takes picture\" can be used to take a picture from this preview instead using gphoto / digicamcontrol / raspistill / libcamera-still.","title":"Preview \"from device cam\""},{"location":"faq/#preview-from-dslr","text":"By now the DSLR handling of Photobooth on Linux was done exclusively using gphoto2 CLI (command line interface). When taking pictures while using preview video from the same camera one command has to be stopped and another one is run after that. The computer terminates the connection to the camera just to reconnect immediately. Because of that there was an ugly video gap and the noises of the camera could be irritating as stopping the video sounded very similar to taking a picture. But most cameras can shoot quickly from live-view. The underlying libery of gphoto2 CLI is libgphoto and it can be accessed using several programming languages. Because of this we can have a python script that handles both preview and taking pictures without terminating the connection to the camera in between. From Photobooth v4.1.0 a preview from DSLR depends on the \"Preview from device cam\" config To use gphoto-python , first execute the install-gphoto-python.sh if you have not already installed \"a service to set up a virtual webcam that gphoto2 can stream video to\" while using the Photobooth installer on initial installation: wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/scripts/gphoto/install-gphoto-python.sh sudo bash install-gphoto-python.sh Change your Photobooth configuration: \"Live Preview \": \"Preview Mode\" : \"from device cam\" \"Commands \": \"Execute start command for preview on take picture/collage\" : if enabled : \"Commands\" : \"Command to generate a live preview\" : python3 cameracontrol.py --bsm if disabled : \"Commands\" : \"Command to generate a live preview\" : python3 cameracontrol.py \"Commands\" : \"Take picture command\" : python3 cameracontrol.py --capture-image-and-download %s Further information : The \"Command to generate a live preview\" is only executed if the \"Preview Mode\" is set to \"from device cam\" . There's no need to define the \"Command to kill live preview\" while using the cameracontrol.py , so just empty that field. The \"Command to kill live preview\" is only executed if defined. If you want to use the DSLR view as background video, enable \"Use stream for live preview as background\" and disable the \"Execute start command for preview on take picture/collage\" setting of Photobooth, which is enabled by default. If you're worried about the sensor of your DSLR but still want to use background video you can use --bsmtime . python3 cameracontrol.py --bsmtime 1 With the parameter --bsmtime you can define a number of minutes after which the camera preview ends. Please note the last image of the preview stays for a few seconds before the background turns to black. Additionally you should add python3 cameracontrol.py to the pre-photo command to restart the preview if it got disabled by the timeout. Restarting the preview takes a few seconds. If you don't want to use the DSLR view as background video enable the Execute start command for preview on take picture/collage setting of Photobooth and make sure --bsm was added to the preview command. python3 cameracontrol.py --bsm If Execute start command for preview on take picture/collage is enabled, the preview video is activated when the countdown for a photo starts and after taking a picture the video is deactivated while waiting for the next photo. As you possibly noticed the params of the script are designed to be similar to the ones of gphoto2 CLI but with some shortcuts like -c for --capture-image-and-download . If you want to know more check out the help of the script by running: python3 /var/www/html/api/cameracontrol.py --help or on subfolder installation of Photobooth python3 /var/www/html/photobooth/api/cameracontrol.py --help If you want to keep your images on the camera you need to use the same capturetarget config as when you were using gphoto CLI (see \"How to keep pictures on my Camera using gphoto2?\"). Set the config on the preview command like this: python3 cameracontrol.py --set-config capturetarget=1 If you get errors from Photobooth and want to get more information try to run the preview command manually. The script is in Photobooth's api folder. To do so end all running services that potentially try to access the camera with killall gphoto2 and killall python3 (if you added any other python scripts manually you might have to be a bit more selective than this command). Finally if you just run venv/bin/python3 cameracontrol.py --capture-image-and-download %s as take picture command without having a preview started it only takes a picture without starting any kind of preview and ends the script immediately after the picture. In theory cameracontrol.py might be able to completely replace gphoto2 CLI for all DSLR connection handling in the future. Note Liveview must be supported for your camera model, check here Give permissions to /dev/video*: sudo gpasswd -a www-data video (this was done automatically if you used the installation script) and reboot once. Requires Photobooth v4.1.0 or later! (Instructions for older versions have been removed from the FAQ, but an FAQ with instructions matching your installed Photobooth version can always be found at http://localhost/faq ). You need to access Photobooth directly via http://localhost , you won't be able to see the preview on a different device (e.g. Tablet). There's a delay of about 3 seconds until the preview starts, to avoid that disable the Execute start command for preview on take picture/collage option to generate a preview in background. This results in a high battery usage and also a general slowdown. Chromium sometimes has trouble, if there is another webcam like bcm2835-isp , it will take it by default instead. Disable other webcams, e.g. sudo rmmod bcm2835-isp . Make sure the countdown is long enough to start the preview, for best user experience the countdown should be set at least to 8 seconds. Troubleshooting In some cases, the v4l2loopback doesn't seem to be working after an update and breaking the preview from DSLR. Run v4l2-ctl --list-devices from your terminal to see if everything is fine. If it works you get the following output: GPhoto2 Webcam (platform:v4l2loopback-000): /dev/video0 If it doesn't work: Cannot open device /dev/video0, exiting If it doesn't work, you might need to compile the v4l2loopback Module yourself by running the following commands: curl -LO https://github.com/umlaeute/v4l2loopback/archive/refs/tags/v0.12.7.tar.gz tar xzf v0.12.7.tar.gz && cd v4l2loopback-0.12.7 make && sudo make install sudo depmod -a sudo modprobe v4l2loopback exclusive_caps=1 card_label=\"GPhoto2 Webcam\" Now again check if everything is fine ( v4l2-ctl --list-devices ). Another problem could be, that your system has secure boot enabled. Disable secure boot in the BIOS and try again. If you're still having trouble feel free to join us at Telegram to get further support.","title":"Preview from DSLR"},{"location":"faq/#preview-from-url","text":"If you like to have the same preview independent of the device you access Photobooth from: Make sure to have a stream available you can use (e.g. from your Webcam, Smartphone Camera or Raspberry Pi Camera) Admin panel config \"Preview mode\" : from URL Admin panel config \"Preview-URL\" example (add needed IP address instead): url(http://192.168.0.2:8081) Note Do NOT enable \"Device cam takes picture\" in admin panel config! Capture pictures via raspistill or libcamera-still won't work if motion is installed! Requires Photobooth v2.2.1 or later! PiOS bullseye and PiCamera If you like to use the Pi Camera only for preview, you're able to setup motion and use the preview from URL option to use the motion stream. To use the Pi camera for preview and capture on PiOS bullseye you'll also have to setup the Photobooth-app and adjust your preview and capture config: Installation instructions Photobooth integration This can also be used on PiOS bookworm if you like to have a remote preview and capture with a PiCamera. Remote preview and capture workaround for PiOS bullseye This workaround, requires the python mjpeg_http_streamer installed - replace localhost with the desired ip-address as needed: sudo pip install mjpeg-http-streamer TAKE PHOTO CMD: wget http://localhost:8080/snapshot -O %s | echo Done PREVIEW URL: url(http://localhost:8080/stream) PRE-PHOTO CMD: libcamera-vid -t 0 --width 1920 --height 1080 --framerate 30 --inline --codec mjpeg -o - | python3 -m mjpeg_http_streamer -l 0.0.0.0 -p 8080 POST-PHOTO CMD: kill $(ps aux | grep '[l]ibcamera' | awk '{print $2}')","title":"Preview \"from URL\""},{"location":"faq/#can-i-use-a-live-stream-as-background","text":"Yes you can. There's different ways depending on your needs and personal setup: On Photobooth v2.4.0 and newer you can use the option \"Use stream from device cam as background\" inside admin panel. If enabled, a stream from your device cam is used as background on start screen. It's still possible to use preview from your device cam as background on countdown and also still possible to take pictures via device cam or using raspistill / libcamera-still for Pi Camera. You need to change the background URL path via config or admin panel. Replace url(../img/bg.jpg) with your IP-Adress and port (if needed) as URL. Example: sh - url(../img/bg.jpg) + url(http://192.168.0.2:8081) To use a Raspberry Pi Camera module Motion is required, but you won't be able to use the Raspberry Pi Camera for preview at countdown! sh sudo apt-get install -y motion /etc/motion/motion.conf needs to be changed to your needs (e.g. starting on boot, using videoX, resolution, etc.). If you're accessing Photobooth from an external device (e.g. Tablet or Mobile Phone) replace 127.0.0.1 with your IP-Adress. For reference: https://github.com/andreknieriem/photobooth/pull/20","title":"Can I use a live stream as background?"},{"location":"faq/#ive-trouble-setting-up-e-mail-config-how-do-i-solve-my-problem","text":"If connection fails some help can be found here , especially gmail needs some special config. Should be obvious but the photobooth must be connected to WIFI/internet to send photos live. Otherwise, tell them to check the box to send them the photo later and it will add everyone's email to a list for you. For gmail you need to generate an app password if you have 2-factor authentication on. Tested working setup: gmail.com Email host adress: smtp.gmail.com Username: *****@gmail.com Port: 587 Security: TLS gmx.de Email host adress: mail.gmx.net Username: *****@gmx.de Port: 587 Security: TLS web.de Email host adress: smtp.web.de Username: ***** (@web.de is not needed in your username) Port: 587 Security: TLS","title":"I've trouble setting up E-Mail config. How do I solve my problem?"},{"location":"faq/#how-to-only-open-the-gallery-to-avoid-people-taking-pictures","text":"Open http://localhost/gallery in your browser (you can replace localhost with your IP adress).","title":"How to only open the gallery to avoid people taking pictures?"},{"location":"faq/#chromakeying-isnt-working-if-i-access-the-photobooth-page-on-my-raspberry-pi-but-it-works-if-i-access-photobooth-from-an-external-device-eg-mobile-phone-or-tablet-how-can-i-solve-the-problem","text":"Open chrome://flags in your browser. Look for \"Accelerated 2D canvas\" and change it to \"disabled\" . Now restart your Chromium browser.","title":"Chromakeying isn't working if I access the Photobooth page on my Raspberry Pi, but it works if I access Photobooth from an external device (e.g. mobile phone or tablet). How can I solve the problem?"},{"location":"faq/#how-to-adjust-the-phpini-file","text":"Open http://localhost/phpinfo.php in your browser. Take a look for \"Loaded Configuration File\", you need sudo rights to edit the file. Page will look like this: CLICK ME","title":"How to adjust the php.ini file?"},{"location":"faq/#automatic-picture-syncing-to-usb-stick","text":"This feature will automatically and in regular intervals copy (sync) new pictures to a plugged-in USB stick. Currently works on Raspberry PI OS only. Use the install-photobooth.sh script to get the operating system setup in place. Note: If you have declined the question to enable the USB sync file backup while running the install-photobooth.sh you need to run the following commands to get the operating system setup done: wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/scripts/enable-usb-sync.sh sudo bash enable-usb-sync.sh -username='<YourUsername>' The target USB device is selected through the admin panel. A USB drive / stick can be identified either by the USB stick label (e.g. photobooth ), the operating system specific USB device name (e.g. /dev/sda1 ) or the USB device system subsystem name (e.g. sda ). The preferred method would be the USB stick label (for use of a single USB stick) or the very specific USB device name, for different USB stick use. The default config will look for a drive with the label photobooth. The script only supports one single USB stick connected at a time Pictures will be synced to the USB stick matched by the pattern, as long as it is mounted (aka USB stick is plugged in) Debugging: Check the server logs for errors at the Debug panel: http://localhost/admin/debugpanel","title":"Automatic picture syncing to USB stick"},{"location":"faq/#raspberry-touchpanel-dsi-simultaneously-with-hdmi","text":"When using a touchscreen on DSI and an HDMI screen simultaneously, the touch input is offset. This is because both monitors are recognized as one screen. The remedy is the following: xinput list remember the device id=[X] of the touchscreen. xinput list-props \"Device Name\" Get the ID in brackets (Y) of Coordinate Transformation Matrix xinput set-prop [X] --type=float [Y] c0 0 c1 0 c2 c3 0 0 1 adjust the coding c0 0 c1 0 c2 c3 0 0 1 with your own data. You can get the values of your screens with the following command: xrandr | grep \\* # xrandr uses \"*\" to identify the screen being used c0 = touch_area_width / total_width (width of touch screen divided by width of both screens) c2 = touch_area_height / total_height (height touch screen divided by height of both screens) c1 = touch_area_x_offset / total_width c3 = touch_area_y_offset / total_height and execute the above command again with your own coding! Example: xinput set-prop 6 --type=float 136 0.3478260869565217 0 0 0.55555555555556 0 0 0 1 Now unfortunately the settings are only valid for the current session. So create the following desktop startup file with your own values: nano ~/.config/autostart/touch.desktop Example: [Desktop Entry] Name=TouchSettingsAutostart Comment=Set up touch screen setting when starting desktop Type=Application ## Adapt command to own values Exec=xinput set-prop 6 --type=float 136 0.3478260869565217 0 0 0 0.55555555555556 0 0 0 1 Terminal=false If you want to use the touchscreen as photobooth and the second monitor for the standalone slideshow for example, open the autostart file: sudo nano /etc/xdg/lxsession/LXDE-pi/autostart and enter/adjust the @chromium-browser entries as followed (adjust the value 1920 to your own resolution and URL if necessary): @chromium-browser --new-window --start-fullscreen --kiosk http://localhost --window-position=1920,0 --user-data-dir=Default @chromium-browser --new-window --start-fullscreen --kiosk http://localhost/slideshow/ --window-position=0,0 --user-data-dir='Profile 1'","title":"Raspberry Touchpanel DSI simultaneously with HDMI"},{"location":"faq/#how-to-administer-cups-remotely-using-the-web-interface","text":"By default the CUPS webinterface can only be accessed via http://localhost:631 from your local machine. To remote access CUPS from other clients you need to run the following commands: sudo cupsctl --remote-any sudo /etc/init.d/cups restart","title":"How to administer CUPS remotely using the web interface?"},{"location":"faq/#how-does-the-connection-to-the-ftp-server-work","text":"The connection to the FTP server needs 4 distinct properties. baseURL which is the url where all requests will be made port for ssl connection (the default value is 21) username the username of the user authorized to interact to the FTP server password the password of the user With these four variables you can test the connection to the FTP server to check if everything is alright. The next variables are for the place where you want the pictures to be stored: - baseFolder is the folder of your website (if you have multiple websites living on the server with this property you can choose on which of these the file should be stored) - folder the folder dedicated to the upload of the files - title if you are doing an event you can set the title of the event to create another folder (the system will slugify the string) - appendDate just like a simple blog websites, when articles are uploaded, the date is added to the url as the path. So if you want, the system will create a set of folder with this template: yyyy/mm/dd - upload_thumb if you want you can upload next to the processed picture also the thumbnails In the end the processed picture, and the thumbnails, will be uploaded in the folder according to these variables. If you have a website, you can use the following variables to generate the qr codes that will point to the photos uploaded to the ftp server - useForQr to enable this functionality - website accessible from the internet, it will be the base of the qr code link - urlTemplate starting from the previous set of variables, you have to define the template which will be used to generate the qrcode link (each variable should be written whit '%' before e.g. %website/%folder/%date) Last but not least you can upload a php file on the title folder on the FTP server to create an online gallery which is updated with every new picture (and collage) taken. The variable to manage this feature are the following: - create_webpage to enable this functionality - template_location which is the location of the index.php file, which is formatted with the title of the current event and uploaded to the FTP server In the end you can enable the delete functionality that will delete photos (and collages) from the ftp server when they are deleted from the photobooth gallery (no admin reset)","title":"How does the connection to the FTP server work?"},{"location":"faq/#i-get-the-error-message-something-went-wrong-while-taking-a-picure-what-can-i-do","text":"There's different reasons if you get the error \"Something went wrong. Please try it again. Photobooth reloads automatically.\" while taking an image. First of all, please set the Loglevel to 2 via admin panel (GENERAL section, http://localhost/admin ) and try again. You'll still see the error message, but we make sure to log enough information to see what's wrong. Now open the Debug panel ( http://localhost/admin/debugpanel ) and check the Photobooth log for error messages. You should see something like this: 2023-01-03T08:34:37+01:00: Array ( [error] => Take picture command returned an error code [cmd] => gphoto2 --capture-image-and-download --filename=/var/www/html/data/tmp/20230103_083437.jpg 2>&1 [returnValue] => 1 [output] => Array ( [0] => [1] => *** Error *** [2] => Could not detect any camera [3] => *** Error (-105: 'Unknown model') *** [4] => [5] => For debugging messages, please use the --debug option. [6] => Debugging messages may help finding a solution to your problem. [7] => If you intend to send any error or debug messages to the gphoto [8] => developer mailing list , please run [9] => gphoto2 as follows: [10] => [11] => env LANG=C gphoto2 --debug --debug-logfile=my-logfile.txt --capture-image-and-download --filename=/var/www/html/testa/data/tmp/20230103_083437.jpg [12] => [13] => Please make sure there is sufficient quoting around the arguments. [14] => ) [php] => takePic.php ) Most of the time the error messages are self explained (in our case no camera was detected, the cable wasn't plugged in), if you're still having trouble you can check the following information about possible known problems.","title":"I get the error message \"Something went wrong.\" while taking a picure, what can i do?"},{"location":"faq/#gphoto2-troubleshooting","text":"Please note, that GPhoto2 is an own software we can use to take images via Photobooth. The full documentation can be found at http://www.gphoto.org/doc/ . Here are some general known problems you should know about: Make sure \"Image capture\" is supported by GPhoto2 for your camera ( http://gphoto.org/proj/libgphoto2/support.php ) Try another camera mode. - Sometimes not every camera mode is supported by GPhoto2. Make sure your camera is set to \"JPEG/JPG only\", Photobooth isn't able to use RAW images. - Reducing the image quality on your camera can have a positive effect to the performance - especially on low end hardware like a Raspberry Pi. Disable the auto-focus. - GPhoto2 won't be able to take a picture if your camera can't find a focus. Turn off the WiFi of your camera (if available). - There might be issues on the connection if WiFi is turned on on your camera. Make sure a SD-Card is inserted into the camera. - GPhoto2 sometimes has trouble to trigger an image if no SD-Card is inserted. Make sure pictures aren't taken into the RAM of the camera. - Sometimes we need to define the Capturetarget to the memory card manually. To find out the right capturetarget type the following into your terminal and press enter: gphoto2 --get-config capturetarget Your output will look like this: pi@raspberrypi:~ $ gphoto2 --get-config capturetarget Label: Capture Target Readonly: 0 Type: RADIO Current: Internal RAM Choice: 0 Internal RAM Choice: 1 Memory card <--- !!! Adjust your take picture command via adminpanel accordingly: gphoto2 --set-config capturetarget=1 --capture-image-and-download --filename=%s","title":"GPhoto2 troubleshooting"},{"location":"faq/#hardware-issues","text":"Enough power on the USB port? Defect USB cable?","title":"Hardware issues"},{"location":"faq/#permission-problem","text":"It's easy to check if there's an issue with the permissions. The Photobooth installer takes care about needed permissions and shouldn't be a thing. Sometimes permission can be wrong after an update. Open your terminal and try to take an image: gphoto2 --capture-image-and-download --filename=test.jpg Everything works? No : Please again read previous information. Yes : let's test further! Now try to take an image as \"www-data\" User: cd /var/www/html sudo -u www-data -s gphoto2 --capture-image-and-download --filename=test.jpg Everything working? Yes : Check your Photobooth configuration for issues. Maybe reset the config to restore the default settings. No : It looks like there's an issue with the permissions! But we can fix that! Set the ownership for Photobooth to the \"www-data\" User: sudo chown -R www-data:www-data /var/www/ Also make sure the \"www-data\" User is able to access the USB device (reboot required!): sudo gpasswd -a www-data plugdev reboot Everything working? No : The camera might be claimed by a different process. The gvfs-gphoto2-volume-monitor is known to cause trouble and shouldn't be executed. The Photobooth installer should take care about it, but maybe something went wrong and we should change it manually (reboot required!): sudo chmod -x /usr/lib/gvfs/gvfs-gphoto2-volume-monitor reboot Does it work? No : Try updating gphoto2 and libgphoto. Run the following commands to install latest development version of gphoto2 and libgphoto: wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/.env chmod +x gphoto2-updater.sh sudo ./gphoto2-updater.sh --development sudo chmod -x /usr/lib/gvfs/gvfs-gphoto2-volume-monitor reboot Now try again! Does it work? No : Sorry, we're am almost out of ideas! Please check the special notes below and feel free to contact us at Telegram if you still have issues.","title":"Permission problem"},{"location":"faq/#special-notes","text":"","title":"Special notes"},{"location":"faq/#canon-eos-1300d","text":"To capture an image gphoto2 might need some time. Add \u2013wait-event=300ms to the take picture CMD. Your take picture CMD should look like this: gphoto2 \u2013wait-event=300ms \u2013capture-image-and-download \u2013filename=%s Source: https://www.dennis-henss.de/2020/01/25/raspberry-pi-fotobox-fuer-hochzeiten-und-geburtstage/#comment-1211","title":"Canon EOS 1300D"},{"location":"faq/#how-to-upload-pictures-to-a-remote-server-after-picture-has-been-taken","text":"","title":"How to upload pictures to a remote server after picture has been taken?"},{"location":"faq/#goal","text":"After a picture is taken with the photobox upload it automatically to a remote server.","title":"Goal:"},{"location":"faq/#usecase","text":"You have a remote server (e.g. with your website on it) or another Raspberry Pi to which you\u2019d like instantly synchronizing your taken pictures. Also you could upload the pictures to a remote server and make them available through the QR code over the internet. By this you would not require people to access a local Wifi to download the picture from your local device which is running your Photobox.","title":"Usecase:"},{"location":"faq/#how-to","text":"You should have a remote server with an SSH login. Know your username and password: (e.g.: [username.strato-hosting.eu]@ssh.strato.de) We will be using the Post-photo script / command of the Photobox which you can find in the admin panel in the section Commands. The command is being executed after the picture has been taken and gets the picture\u2019s name as an attribute. Command: scp /var/www/html/photobooth/data/images/%s [username@remotehost]:/[path_to_where_you_want_to_store_the_pictures_on_the_remote_host] If we keep it like that the remote server would require the source server to type in a password each time a picture is being copied to the remote server. An SSH connection using a private/public SSH key needs to be established: Create a public/private key-pair for the www-data user on the source machine (why for that user? The www-data user is executing the Post-photo script/command in the background) \u2013 Do not enter a passphrase when prompted. sudo -u www-data ssh-keygen -t rsa Copy the public key to the remote (destination) server sudo -u www-data ssh-copy-id [username@remotehost] You can now manually test whether the connection works. Try to copy anything to the remote server and change the file in the below example to a file that you actually have on your source machine. You shouldn\u2019t be prompted with a password, but the copy and transfer should complete successfully just with the following command. If that is going to be successful, copying your pictures automatically should work now. sudo -u www-data scp /var/www/html/photobooth/data/images/20230129_125148.jpg [username@remotehost]:/[path_to_where_you_want_to_store_the_pictures] You can now use the URL with which you can access your remote server from the internet and paste it into the QR code field in the Photobox admin panel. Now using the QR code your pictures can be downloaded from your remote server.","title":"How to:"},{"location":"faq/#how-to-use-the-image-randomizer","text":"To use the image randomizer images must be placed inside private/images/{folderName}. For hassle-free (ssh/sftp-free) upload, you may want to use the integrated images uploader: http://localhost/admin/upload .","title":"How to use the image randomizer"},{"location":"faq/#use-for-picture-frames","text":"Upload / Copy all the (transparent) frames you want to private/images/{FrameFolder} Enable picture_take_frame specify picture_frame url : http://localhost/api/randomImg.php?dir={FrameFolder}","title":"Use for PICTURE FRAMES:"},{"location":"faq/#use-for-collage-frames","text":"Upload / Copy all the (transparent) frames you want to private/images/{FrameFolder} Enable collage_take_frame (always or once) specify collage_frame url : http://localhost/api/randomImg.php?dir={FrameFolder}","title":"Use for COLLAGE FRAMES:"},{"location":"faq/#use-for-backgrounds","text":"Upload / Copy all the backgrounds you want to private/images/{BgFolder} specify collage_background url : http://localhost/api/randomImg.php?dir={BgFolder} NOTES: - Replace \"localhost\" with your IP-Adress. - Same thing can be applied for collage_placeholderpath so a random holder image takes place. - You can specify a diffrent {FrameFolder} for collage frames if needed.","title":"Use for BACKGROUNDS:"},{"location":"install/","text":"Photobooth installation Prerequisites Supported Platforms and Cameras Install on Debian Enable PHP in nginx Enable PHP in Lighttpd Install on Windows","title":"Photobooth installation"},{"location":"install/#photobooth-installation","text":"","title":"Photobooth installation"},{"location":"install/#prerequisites","text":"","title":"Prerequisites"},{"location":"install/#supported-platforms-and-cameras","text":"","title":"Supported Platforms and Cameras"},{"location":"install/#install-on-debian","text":"","title":"Install on Debian"},{"location":"install/#enable-php-in-nginx","text":"","title":"Enable PHP in nginx"},{"location":"install/#enable-php-in-lighttpd","text":"","title":"Enable PHP in Lighttpd"},{"location":"install/#install-on-windows","text":"","title":"Install on Windows"},{"location":"install/install-debian/","text":"Automated installation on Raspberry Pi OS (previously called Raspbian) and on Debian / Debian based distributions: To make the installation as simple as possible, we have created an installation script for you. It will setup your Raspberry Pi, Computer or Laptop as a full blown Photobooth (using Apache Webserver). This means, Photobooth and all needed packages and dependencies get installed and the automatic camera mount is disabled. On a Raspberry Pi you can choose that Photobooth is started in fullscreen on startup. If you encounter any issues or want more freedom to configure your Pi, Computer or Laptop, we recommend you look at the detailed installation instruction below. The installation script is intendet to work on Raspberry Pi OS based on Debian bullseye, but it should also work on Raspberry Pi OS based on Debian buster. A valid username is needed to run the installer. Your OS username must be passed by the -username flag to the installer. wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/install-photobooth.sh sudo bash install-photobooth.sh -username='<YourUsername>' For the user \"pi\", the command to install Photobooth needs to be: sudo bash install-photobooth.sh -username='pi' By default Apache is used for an easy and no-hassle setup as NGINX and Lighttpd need some additional steps. To use NGINX run sudo bash install-photobooth.sh -username='<YourUsername>' -webserver='nginx' (additional Setup note: Cromakeying is saving without finishing saving ). To use Lighttpd as Webserver run sudo bash install-photobooth.sh -username='<YourUsername>' -webserver='lighttpd' To get to know all options you can simply run sudo bash install-photobooth.sh -help . Manually install Photobooth on Raspberry Pi OS (previously called Raspbian) and on Debian / Debian based distributions: The steps below were tested on \"Raspberry Pi OS with desktop\" based on Debian Buster, but should work for Debian and all Debian based distributions. Photobooth can also be used on any other PC/Laptop running a supported OS. Update your system sudo apt update sudo apt dist-upgrade Install a Webserver Currently NGINX, Lighttpd and Apache Webserver are supported. For an easy and no-hassle setup you should install Apache Webserver. NGINX has a smaller memory footprint and typically better performance, which is especially important on the Raspberry Pis, but it needs some additional steps until you're good to go. Also Lighttpd needs some additional steps. Install Apache & PHP sudo apt install -y libapache2-mod-php or Install NGINX & PHP sudo apt install -y nginx php-fpm Additional needed steps to enable PHP in NGINX or Install Lighttpd & PHP sudo apt install -y lighttpd php-fpm Additional needed steps to enable PHP in Lighttpd Install dependencies sudo apt install -y curl gcc g++ make git ffmpeg gphoto2 libimage-exiftool-perl nodejs php-xml php-gd php-zip php-mbstring python3 python3-gphoto2 python3-psutil python3-zmq rsync udisks2 v4l2loopback-dkms v4l-utils Optional: If you have a new camera, you can also install the latest version of libgphoto2 directly from the maintainer. Choose \"Install last stable release\": wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/.env chmod +x gphoto2-updater.sh sudo ./gphoto2-updater.sh Install photobooth Give our webserver user access to /var/www/ : sudo chown -R www-data:www-data /var/www/ Get the Photobooth source: cd /var/www/ sudo -u www-data -s rm -r html/* git clone https://github.com/PhotoboothProject/photobooth html cd /var/www/html git submodule update --init npm install npm run build exit Please note: depending on your hardware npm install and npm run build takes up to 15min! Node.js is needed in v18 or later! Next we have to give our webserver user access to the USB device: sudo gpasswd -a www-data plugdev If you like to use a printer you need to have CUPS installed. On Raspbian CUPS is not installed by default: sudo apt install -y cups Next you also have to add your webserver user to the lp and lpadmin group: sudo gpasswd -a www-data lp sudo gpasswd -a www-data lpadmin By default the CUPS webinterface can only be accessed via http://localhost:631 from your local machine. To remote access CUPS from other clients you need to run the following commands: sudo cupsctl --remote-any sudo /etc/init.d/cups restart Install Remote Buzzer support Please follow the steps mentioned in the FAQ: Q: Can I use Hardware Button to take a Picture? Try it out Now you should restart your Raspberry Pi to apply those settings: reboot Please use the following to test if your Webserver is able to take pictures (gphoto must be executed in a dir with write permission): cd /var/www/html sudo -u www-data gphoto2 --capture-image If it is not working, your operation system probably automatically mounted your camera. You can unmount it, or remove execution permission for gphoto2 Volume Monitor to ensure that the camera is not mounted anymore: sudo chmod -x /usr/lib/gvfs/gvfs-gphoto2-volume-monitor Now reboot or unmount your camera with the following commands (you get a list of mounted cameras with gio mount -l ): gio mount -u gphoto2://YOUR-CAMERA Now try again. If everything is working, open the IP address (you get it via ip addr ) of your Raspberry Pi, or if you open it on your machine, type http://localhost in your browser.","title":"Install on Debian"},{"location":"install/install-debian/#automated-installation-on-raspberry-pi-os-previously-called-raspbian-and-on-debian-debian-based-distributions","text":"To make the installation as simple as possible, we have created an installation script for you. It will setup your Raspberry Pi, Computer or Laptop as a full blown Photobooth (using Apache Webserver). This means, Photobooth and all needed packages and dependencies get installed and the automatic camera mount is disabled. On a Raspberry Pi you can choose that Photobooth is started in fullscreen on startup. If you encounter any issues or want more freedom to configure your Pi, Computer or Laptop, we recommend you look at the detailed installation instruction below. The installation script is intendet to work on Raspberry Pi OS based on Debian bullseye, but it should also work on Raspberry Pi OS based on Debian buster. A valid username is needed to run the installer. Your OS username must be passed by the -username flag to the installer. wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/install-photobooth.sh sudo bash install-photobooth.sh -username='<YourUsername>' For the user \"pi\", the command to install Photobooth needs to be: sudo bash install-photobooth.sh -username='pi' By default Apache is used for an easy and no-hassle setup as NGINX and Lighttpd need some additional steps. To use NGINX run sudo bash install-photobooth.sh -username='<YourUsername>' -webserver='nginx' (additional Setup note: Cromakeying is saving without finishing saving ). To use Lighttpd as Webserver run sudo bash install-photobooth.sh -username='<YourUsername>' -webserver='lighttpd' To get to know all options you can simply run sudo bash install-photobooth.sh -help .","title":"Automated installation on Raspberry Pi OS (previously called Raspbian) and on Debian / Debian based distributions:"},{"location":"install/install-debian/#manually-install-photobooth-on-raspberry-pi-os-previously-called-raspbian-and-on-debian-debian-based-distributions","text":"The steps below were tested on \"Raspberry Pi OS with desktop\" based on Debian Buster, but should work for Debian and all Debian based distributions. Photobooth can also be used on any other PC/Laptop running a supported OS.","title":"Manually install Photobooth on Raspberry Pi OS (previously called Raspbian) and on Debian / Debian based distributions:"},{"location":"install/install-debian/#update-your-system","text":"sudo apt update sudo apt dist-upgrade","title":"Update your system"},{"location":"install/install-debian/#install-a-webserver","text":"Currently NGINX, Lighttpd and Apache Webserver are supported. For an easy and no-hassle setup you should install Apache Webserver. NGINX has a smaller memory footprint and typically better performance, which is especially important on the Raspberry Pis, but it needs some additional steps until you're good to go. Also Lighttpd needs some additional steps.","title":"Install a Webserver"},{"location":"install/install-debian/#install-apache-php","text":"sudo apt install -y libapache2-mod-php","title":"Install Apache &amp; PHP"},{"location":"install/install-debian/#or-install-nginx-php","text":"sudo apt install -y nginx php-fpm Additional needed steps to enable PHP in NGINX","title":"or Install NGINX &amp; PHP"},{"location":"install/install-debian/#or-install-lighttpd-php","text":"sudo apt install -y lighttpd php-fpm Additional needed steps to enable PHP in Lighttpd","title":"or Install Lighttpd &amp; PHP"},{"location":"install/install-debian/#install-dependencies","text":"sudo apt install -y curl gcc g++ make git ffmpeg gphoto2 libimage-exiftool-perl nodejs php-xml php-gd php-zip php-mbstring python3 python3-gphoto2 python3-psutil python3-zmq rsync udisks2 v4l2loopback-dkms v4l-utils Optional: If you have a new camera, you can also install the latest version of libgphoto2 directly from the maintainer. Choose \"Install last stable release\": wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/.env chmod +x gphoto2-updater.sh sudo ./gphoto2-updater.sh","title":"Install dependencies"},{"location":"install/install-debian/#install-photobooth","text":"Give our webserver user access to /var/www/ : sudo chown -R www-data:www-data /var/www/ Get the Photobooth source: cd /var/www/ sudo -u www-data -s rm -r html/* git clone https://github.com/PhotoboothProject/photobooth html cd /var/www/html git submodule update --init npm install npm run build exit Please note: depending on your hardware npm install and npm run build takes up to 15min! Node.js is needed in v18 or later! Next we have to give our webserver user access to the USB device: sudo gpasswd -a www-data plugdev If you like to use a printer you need to have CUPS installed. On Raspbian CUPS is not installed by default: sudo apt install -y cups Next you also have to add your webserver user to the lp and lpadmin group: sudo gpasswd -a www-data lp sudo gpasswd -a www-data lpadmin By default the CUPS webinterface can only be accessed via http://localhost:631 from your local machine. To remote access CUPS from other clients you need to run the following commands: sudo cupsctl --remote-any sudo /etc/init.d/cups restart","title":"Install photobooth"},{"location":"install/install-debian/#install-remote-buzzer-support","text":"Please follow the steps mentioned in the FAQ: Q: Can I use Hardware Button to take a Picture?","title":"Install Remote Buzzer support"},{"location":"install/install-debian/#try-it-out","text":"Now you should restart your Raspberry Pi to apply those settings: reboot Please use the following to test if your Webserver is able to take pictures (gphoto must be executed in a dir with write permission): cd /var/www/html sudo -u www-data gphoto2 --capture-image If it is not working, your operation system probably automatically mounted your camera. You can unmount it, or remove execution permission for gphoto2 Volume Monitor to ensure that the camera is not mounted anymore: sudo chmod -x /usr/lib/gvfs/gvfs-gphoto2-volume-monitor Now reboot or unmount your camera with the following commands (you get a list of mounted cameras with gio mount -l ): gio mount -u gphoto2://YOUR-CAMERA Now try again. If everything is working, open the IP address (you get it via ip addr ) of your Raspberry Pi, or if you open it on your machine, type http://localhost in your browser.","title":"Try it out"},{"location":"install/install-lighttpd/","text":"Additional needed steps to enable PHP in Lighttpd sudo lighttpd-enable-mod fastcgi sudo lighttpd-enable-mod fastcgi-php Edit fastcgi-php config, keep a backup of the original file in case something went wrong: sudo cp /etc/lighttpd/conf-available/15-fastcgi-php.conf /etc/lighttpd/conf-available/15-fastcgi-php.conf.bak sudo nano /etc/lighttpd/conf-available/15-fastcgi-php.conf Change the 15-fastcgi-php.conf from # -*- depends: fastcgi -*- # /usr/share/doc/lighttpd/fastcgi.txt.gz # http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions#mod_fastcgi-fastcgi ## Start an FastCGI server for php (needs the php5-cgi package) fastcgi.server += ( \".php\" => (( \"bin-path\" => \"/usr/bin/php-cgi\", \"socket\" => \"/var/run/lighttpd/php.socket\", \"max-procs\" => 1, \"bin-environment\" => ( \"PHP_FCGI_CHILDREN\" => \"4\", \"PHP_FCGI_MAX_REQUESTS\" => \"10000\" ), \"bin-copy-environment\" => ( \"PATH\", \"SHELL\", \"USER\" ), \"broken-scriptfilename\" => \"enable\" )) ) to look like this: # -*- depends: fastcgi -*- # /usr/share/doc/lighttpd/fastcgi.txt.gz # http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions#mod_fastcgi-fastcgi ## Start an FastCGI server for php (needs the php5-cgi package) fastcgi.server += ( \".php\" => (( \"socket\" => \"/var/run/php/php8.2-fpm.sock\", \"broken-scriptfilename\" => \"enable\" )) ) Now reload the service: sudo service lighttpd force-reload","title":"Enable PHP in Lighttpd"},{"location":"install/install-lighttpd/#additional-needed-steps-to-enable-php-in-lighttpd","text":"sudo lighttpd-enable-mod fastcgi sudo lighttpd-enable-mod fastcgi-php Edit fastcgi-php config, keep a backup of the original file in case something went wrong: sudo cp /etc/lighttpd/conf-available/15-fastcgi-php.conf /etc/lighttpd/conf-available/15-fastcgi-php.conf.bak sudo nano /etc/lighttpd/conf-available/15-fastcgi-php.conf Change the 15-fastcgi-php.conf from # -*- depends: fastcgi -*- # /usr/share/doc/lighttpd/fastcgi.txt.gz # http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions#mod_fastcgi-fastcgi ## Start an FastCGI server for php (needs the php5-cgi package) fastcgi.server += ( \".php\" => (( \"bin-path\" => \"/usr/bin/php-cgi\", \"socket\" => \"/var/run/lighttpd/php.socket\", \"max-procs\" => 1, \"bin-environment\" => ( \"PHP_FCGI_CHILDREN\" => \"4\", \"PHP_FCGI_MAX_REQUESTS\" => \"10000\" ), \"bin-copy-environment\" => ( \"PATH\", \"SHELL\", \"USER\" ), \"broken-scriptfilename\" => \"enable\" )) ) to look like this: # -*- depends: fastcgi -*- # /usr/share/doc/lighttpd/fastcgi.txt.gz # http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions#mod_fastcgi-fastcgi ## Start an FastCGI server for php (needs the php5-cgi package) fastcgi.server += ( \".php\" => (( \"socket\" => \"/var/run/php/php8.2-fpm.sock\", \"broken-scriptfilename\" => \"enable\" )) ) Now reload the service: sudo service lighttpd force-reload","title":"Additional needed steps to enable PHP in Lighttpd"},{"location":"install/install-nginx/","text":"Additional needed steps to enable PHP in NGINX Once NGINX is installed we need to enable PHP in NGINX. If you haven't made any changes to your NGINX config you can run the following commands: sudo cp /etc/nginx/sites-enabled/default ~/nginx-default.bak sudo sed -i 's/^\\(\\s*\\)index index\\.html\\(.*\\)/\\1index index\\.php index\\.html\\2/g' /etc/nginx/sites-available/default sudo sed -i '/location ~ \\\\.php$ {/s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default sudo sed -i '/include snippets\\/fastcgi-php.conf/s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default sudo sed -i '/fastcgi_pass unix:\\/run\\/php\\//s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default sudo sed -i '/.*fastcgi_pass unix:\\/run\\/php\\//,// { /}/s/^\\(\\s*\\)#/\\1/g; }' /etc/nginx/sites-available/default If you've made changes by hand already to /etc/nginx/sites-enabled/default you have to do all changes by hand: sudo nano /etc/nginx/sites-enabled/default Find the line index index.html index.htm; and add index.php after index (the line now should look like this: index index.php index.html index.htm; ). Now scroll down until you find a section with the following content: # pass the PHP scripts to FastCGI server # # location ~ \\.php$ { Edit by removing the # characters on the following lines: location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass unix:/run/php/php8.2-fpm.sock; } It should look like this: location ~ \\.php$ { include snippets/fastcgi-php.conf; # # # With php-fpm (or other unix sockets): fastcgi_pass unix:/run/php/php8.2-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; } Test the config once /etc/nginx/sites-enabled/default was changed: sudo /usr/sbin/nginx -t -c /etc/nginx/nginx.conf &>/dev/null && echo 'config test ok' || echo 'config test failed' If you get the response 'config test ok' then it is time to restart the server with: sudo systemctl reload nginx","title":"Enable PHP in nginx"},{"location":"install/install-nginx/#additional-needed-steps-to-enable-php-in-nginx","text":"Once NGINX is installed we need to enable PHP in NGINX. If you haven't made any changes to your NGINX config you can run the following commands: sudo cp /etc/nginx/sites-enabled/default ~/nginx-default.bak sudo sed -i 's/^\\(\\s*\\)index index\\.html\\(.*\\)/\\1index index\\.php index\\.html\\2/g' /etc/nginx/sites-available/default sudo sed -i '/location ~ \\\\.php$ {/s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default sudo sed -i '/include snippets\\/fastcgi-php.conf/s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default sudo sed -i '/fastcgi_pass unix:\\/run\\/php\\//s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default sudo sed -i '/.*fastcgi_pass unix:\\/run\\/php\\//,// { /}/s/^\\(\\s*\\)#/\\1/g; }' /etc/nginx/sites-available/default If you've made changes by hand already to /etc/nginx/sites-enabled/default you have to do all changes by hand: sudo nano /etc/nginx/sites-enabled/default Find the line index index.html index.htm; and add index.php after index (the line now should look like this: index index.php index.html index.htm; ). Now scroll down until you find a section with the following content: # pass the PHP scripts to FastCGI server # # location ~ \\.php$ { Edit by removing the # characters on the following lines: location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass unix:/run/php/php8.2-fpm.sock; } It should look like this: location ~ \\.php$ { include snippets/fastcgi-php.conf; # # # With php-fpm (or other unix sockets): fastcgi_pass unix:/run/php/php8.2-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; } Test the config once /etc/nginx/sites-enabled/default was changed: sudo /usr/sbin/nginx -t -c /etc/nginx/nginx.conf &>/dev/null && echo 'config test ok' || echo 'config test failed' If you get the response 'config test ok' then it is time to restart the server with: sudo systemctl reload nginx","title":"Additional needed steps to enable PHP in NGINX"},{"location":"install/install-windows/","text":"Installation on Windows Download needed files Download Apache2 and Visual C++ Redistributable for Visual Studio: https://www.apachelounge.com/download Download PHP 8.2 (Thread Safe): https://windows.php.net/download Download Digicamcontrol: http://digicamcontrol.com/download Download Notepad++: https://notepad-plus-plus.org/downloads Download latest Photobooth release ( photobooth-4.x.x.zip or photobooth-4.x.x.tar.gz - Note: the Source code files won't work!): https://github.com/PhotoboothProject/photobooth/releases Install & extract needed Software Install Notepad++ Install Visual C++ Redistributable for Visual Studio Extract the Apache2 ZIP ( httpd-2.4.X-winXX-XXXX.zip ) to C:/ Extract the PHP ZIP to C:/php Prepare Apache HTTP Server Edit C:\\Apache24\\conf\\httpd.conf using Notepad++ Find the following text (~ on line 284): <IfModule dir_module> DirectoryIndex index.html </IfModule> And change it to <IfModule dir_module> DirectoryIndex index.html index.php </IfModule> To the end of the file add the following: LoadModule php_module \"C:/php/php8apache2_4.dll\" <FilesMatch \\.php$> SetHandler application/x-httpd-php </FilesMatch> PHPIniDir \"C:/php\" For reference see f260b49 Inside C:\\Apache24\\htdocs add a new file called info.php and add the following content: <?php phpinfo(); ?> Inside C:\\Apache24 create a new file called cmd.bat and add th following content: cd \"C:\\Apache24\\bin\" cmd Prepare PHP Go to C:\\php and rename the php.ini-production to php.ini . Edit the php.ini using Notepad++ to enable the GD library: Find ;extension=fileinfo and remove the ; in front of the line. Find ;extension=gd2 and remove the ; in front of the line. Find ;extension=mbstring and remove the ; in front of the line. Find ;extension_dir = \"ext\" and remove the ; in front of the line and change it to extension_dir = \"C:/php/ext\" . For reference see ff4259a Start Apache Server Go to C:\\Apache24 and right click on the cmd.bat, choose \"Run as administrator\": To start the Webserver on boot automatically, type httpd.exe -k install . Once that's done, lets start our webserver: httpd.exe -k start If you need to stop the webserver (e.g. if you like to change the php.ini ): httpd.exe -k stop Test your Webserver & PHP Open http://localhost/info.php in your Browser, you should see the PHP Information page. Install Digicamcontrol Install Digicamcontrol to C:\\Apache24\\htdocs\\digicamcontrol\\ Setup Photobooth Remove all files inside C:\\Apache24\\htdocs\\ . Next you need to extract the Photobooth Release-ZIP to C:\\Apache24\\htdocs\\ . Open http://localhost/admin in your Browser and adjust your \" take picture command \" (inside the \" Commands \" section): C:\\Apache24\\htdocs\\digicamcontrol\\CameraControlCmd.exe /capture /filename %s Enjoy! You should now be able to use Photobooth on your Windows machine!","title":"Install on Windows"},{"location":"install/install-windows/#installation-on-windows","text":"","title":"Installation on Windows"},{"location":"install/install-windows/#download-needed-files","text":"Download Apache2 and Visual C++ Redistributable for Visual Studio: https://www.apachelounge.com/download Download PHP 8.2 (Thread Safe): https://windows.php.net/download Download Digicamcontrol: http://digicamcontrol.com/download Download Notepad++: https://notepad-plus-plus.org/downloads Download latest Photobooth release ( photobooth-4.x.x.zip or photobooth-4.x.x.tar.gz - Note: the Source code files won't work!): https://github.com/PhotoboothProject/photobooth/releases","title":"Download needed files"},{"location":"install/install-windows/#install-extract-needed-software","text":"Install Notepad++ Install Visual C++ Redistributable for Visual Studio Extract the Apache2 ZIP ( httpd-2.4.X-winXX-XXXX.zip ) to C:/ Extract the PHP ZIP to C:/php","title":"Install &amp; extract needed Software"},{"location":"install/install-windows/#prepare-apache-http-server","text":"Edit C:\\Apache24\\conf\\httpd.conf using Notepad++ Find the following text (~ on line 284): <IfModule dir_module> DirectoryIndex index.html </IfModule> And change it to <IfModule dir_module> DirectoryIndex index.html index.php </IfModule> To the end of the file add the following: LoadModule php_module \"C:/php/php8apache2_4.dll\" <FilesMatch \\.php$> SetHandler application/x-httpd-php </FilesMatch> PHPIniDir \"C:/php\" For reference see f260b49 Inside C:\\Apache24\\htdocs add a new file called info.php and add the following content: <?php phpinfo(); ?> Inside C:\\Apache24 create a new file called cmd.bat and add th following content: cd \"C:\\Apache24\\bin\" cmd","title":"Prepare Apache HTTP Server"},{"location":"install/install-windows/#prepare-php","text":"Go to C:\\php and rename the php.ini-production to php.ini . Edit the php.ini using Notepad++ to enable the GD library: Find ;extension=fileinfo and remove the ; in front of the line. Find ;extension=gd2 and remove the ; in front of the line. Find ;extension=mbstring and remove the ; in front of the line. Find ;extension_dir = \"ext\" and remove the ; in front of the line and change it to extension_dir = \"C:/php/ext\" . For reference see ff4259a","title":"Prepare PHP"},{"location":"install/install-windows/#start-apache-server","text":"Go to C:\\Apache24 and right click on the cmd.bat, choose \"Run as administrator\": To start the Webserver on boot automatically, type httpd.exe -k install . Once that's done, lets start our webserver: httpd.exe -k start If you need to stop the webserver (e.g. if you like to change the php.ini ): httpd.exe -k stop","title":"Start Apache Server"},{"location":"install/install-windows/#test-your-webserver-php","text":"Open http://localhost/info.php in your Browser, you should see the PHP Information page.","title":"Test your Webserver &amp; PHP"},{"location":"install/install-windows/#install-digicamcontrol","text":"Install Digicamcontrol to C:\\Apache24\\htdocs\\digicamcontrol\\","title":"Install Digicamcontrol"},{"location":"install/install-windows/#setup-photobooth","text":"Remove all files inside C:\\Apache24\\htdocs\\ . Next you need to extract the Photobooth Release-ZIP to C:\\Apache24\\htdocs\\ . Open http://localhost/admin in your Browser and adjust your \" take picture command \" (inside the \" Commands \" section): C:\\Apache24\\htdocs\\digicamcontrol\\CameraControlCmd.exe /capture /filename %s","title":"Setup Photobooth"},{"location":"install/install-windows/#enjoy","text":"You should now be able to use Photobooth on your Windows machine!","title":"Enjoy!"},{"location":"install/prerequisites/","text":"Prerequisites Software Required version Note Node.js >=v18.17.0 Currently only v18 is tested. Our installer will check your Node.js version and suggest an update/downgrade if needed. Versions below v18 aren't supported anymore. npm >=v9.6.0 php >=v8.2 Webserver Apache, Nginx or lighttpd is needed. By default Apache webserver is installed by our installer.","title":"Prerequisites"},{"location":"install/prerequisites/#prerequisites","text":"Software Required version Note Node.js >=v18.17.0 Currently only v18 is tested. Our installer will check your Node.js version and suggest an update/downgrade if needed. Versions below v18 aren't supported anymore. npm >=v9.6.0 php >=v8.2 Webserver Apache, Nginx or lighttpd is needed. By default Apache webserver is installed by our installer.","title":"Prerequisites"},{"location":"install/supported_platformscand_cameras/","text":"Supported Platforms and Cameras Hardware-Platform Software-Platform Supported Cameras Raspberry Pi 3 / 4 / 5 Raspberry Pi OS 64bit Bullseye /Bookworm Camera Modules , gphoto2 DSLR , webcam *2 Raspberry Pi 3 / 4 / 5 Raspberry Pi OS 32bit Bullseye / Bookworm *1 Camera Modules , gphoto2 DSLR , webcam *2 Generic PC Debian/Ubuntu gphoto2 DSLR , webcam *2 Generic PC Windows digiCamControl , webcam *2 1 On Raspberry Pi OS 32bit you must * add arm_64bit=0 to your /boot/config.txt and reboot once before installing Photobooth. The Raspberry Pi foundation uses a 64bit kernel while the system is 32bit. The Installation fails because the v4l2loopback module can't be compiled for a 32bit OS while using a 64bit kernel. *2 Capture from webcam is possible e.g. using fswebcam , else it only works on access via http://localhost","title":"Supported Platforms and Cameras"},{"location":"install/supported_platformscand_cameras/#supported-platforms-and-cameras","text":"Hardware-Platform Software-Platform Supported Cameras Raspberry Pi 3 / 4 / 5 Raspberry Pi OS 64bit Bullseye /Bookworm Camera Modules , gphoto2 DSLR , webcam *2 Raspberry Pi 3 / 4 / 5 Raspberry Pi OS 32bit Bullseye / Bookworm *1 Camera Modules , gphoto2 DSLR , webcam *2 Generic PC Debian/Ubuntu gphoto2 DSLR , webcam *2 Generic PC Windows digiCamControl , webcam *2 1 On Raspberry Pi OS 32bit you must * add arm_64bit=0 to your /boot/config.txt and reboot once before installing Photobooth. The Raspberry Pi foundation uses a 64bit kernel while the system is 32bit. The Installation fails because the v4l2loopback module can't be compiled for a 32bit OS while using a 64bit kernel. *2 Capture from webcam is possible e.g. using fswebcam , else it only works on access via http://localhost","title":"Supported Platforms and Cameras"},{"location":"update/","text":"Updating Photobooth Updating Photobooth on Linux","title":"Updating Photobooth"},{"location":"update/#updating-photobooth","text":"","title":"Updating Photobooth"},{"location":"update/#updating-photobooth-on-linux","text":"","title":"Updating Photobooth on Linux"},{"location":"update/update-linux/","text":"Updating Photobooth on Linux Node.js must be installed in v18. Currently only v16 is tested. Our installer will check your Node.js version and suggest an update/downgrade if needed. Update will fail if Node.js is installed in a version below v16! Updating from v2.x or older To update from an old version to latest Photobooth it's recommend to make a clean installalation . Updating from v3.x or v4.x to latest stable release Note: You must have the git-version of Photobooth installed. First, make sure there's no old installer available: rm -f install-photobooth.sh To update an existing Photobooth-Installation via git, run below commands in your terminal. A valid OS username must be passed to the installer: wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/install-photobooth.sh sudo bash install-photobooth.sh --update --username='<YourUsername>' Special note: If you have accessed Photobooth earlier from your Browser, please clear your Browsers Cache once to avoid graphical glitches or being unable to save config changes using the Adminpanel. Troubleshooting In some cases, the v4l2loopback doesn't seem to be working after an update and breaking the preview from DSLR. After a reboot run v4l2-ctl --list-devices from your terminal to see if everything is fine. If it works you get the following output: GPhoto2 Webcam (platform:v4l2loopback-000): /dev/video0 If it doesn't work: Cannot open device /dev/video0, exiting If it doesn't work, you might need to compile the v4l2loopback Module yourself by running the following commands: curl -LO https://github.com/umlaeute/v4l2loopback/archive/refs/tags/v0.12.7.tar.gz tar xzf v0.12.7.tar.gz && cd v4l2loopback-0.12.7 make && sudo make install sudo depmod -a sudo modprobe v4l2loopback exclusive_caps=1 card_label=\"GPhoto2 Webcam\" Now again check if everything is fine ( v4l2-ctl --list-devices ). If you're still having trouble feel free to join us at Telegram to get further support.","title":"Update on linux"},{"location":"update/update-linux/#updating-photobooth-on-linux","text":"Node.js must be installed in v18. Currently only v16 is tested. Our installer will check your Node.js version and suggest an update/downgrade if needed. Update will fail if Node.js is installed in a version below v16!","title":"Updating Photobooth on Linux"},{"location":"update/update-linux/#updating-from-v2x-or-older","text":"To update from an old version to latest Photobooth it's recommend to make a clean installalation .","title":"Updating from v2.x or older"},{"location":"update/update-linux/#updating-from-v3x-or-v4x-to-latest-stable-release","text":"Note: You must have the git-version of Photobooth installed. First, make sure there's no old installer available: rm -f install-photobooth.sh To update an existing Photobooth-Installation via git, run below commands in your terminal. A valid OS username must be passed to the installer: wget https://raw.githubusercontent.com/PhotoboothProject/photobooth/dev/install-photobooth.sh sudo bash install-photobooth.sh --update --username='<YourUsername>' Special note: If you have accessed Photobooth earlier from your Browser, please clear your Browsers Cache once to avoid graphical glitches or being unable to save config changes using the Adminpanel. Troubleshooting In some cases, the v4l2loopback doesn't seem to be working after an update and breaking the preview from DSLR. After a reboot run v4l2-ctl --list-devices from your terminal to see if everything is fine. If it works you get the following output: GPhoto2 Webcam (platform:v4l2loopback-000): /dev/video0 If it doesn't work: Cannot open device /dev/video0, exiting If it doesn't work, you might need to compile the v4l2loopback Module yourself by running the following commands: curl -LO https://github.com/umlaeute/v4l2loopback/archive/refs/tags/v0.12.7.tar.gz tar xzf v0.12.7.tar.gz && cd v4l2loopback-0.12.7 make && sudo make install sudo depmod -a sudo modprobe v4l2loopback exclusive_caps=1 card_label=\"GPhoto2 Webcam\" Now again check if everything is fine ( v4l2-ctl --list-devices ). If you're still having trouble feel free to join us at Telegram to get further support.","title":"Updating from v3.x or v4.x to latest stable release"}]}